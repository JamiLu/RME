!function(e){function t(t){for(var o,r,i=t[0],l=t[1],c=t[2],d=0,m=[];d<i.length;d++)r=i[d],a[r]&&m.push(a[r][0]),a[r]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(e[o]=l[o]);for(p&&p(t);m.length;)m.shift()();return s.push.apply(s,c||[]),n()}function n(){for(var e,t=0;t<s.length;t++){for(var n=s[t],o=!0,i=1;i<n.length;i++){var l=n[i];0!==a[l]&&(o=!1)}o&&(s.splice(t--,1),e=r(r.s=n[0]))}return e}var o={},a={0:0},s=[];function r(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=o,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/rme/";var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var c=0;c<i.length;c++)t(i[c]);var p=l;s.push([117,1]),n()}({117:function(e,t,n){n(118),e.exports=n(296)},291:function(e,t,n){var o=n(292);"string"==typeof o&&(o=[[e.i,o,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n(294)(o,a);o.locals&&(e.exports=o.locals)},292:function(e,t,n){(e.exports=n(293)(!1)).push([e.i,'div.max-width1000 {\n    max-width: 1000px;\n}\n\ndiv.code, pre.code {\n    font-family: Consolas, "Courier new";\n    font-size: 14px;\n    overflow-x: auto;\n    white-space: pre;\n}\n\n/* div.fadeInT {\n    display: initial;\n    opacity: 1;\n    transition: opacity 2s;\n}\n\ndiv.fadeOutT {\n    display: none;\n    opacity: 0;\n    transition: opacity 2s;\n} */\n\nul li.menu-title {\n    padding: 8px 8px 8px 8px;\n}\n\ndiv.line {\n    height: 20px;\n}\n\ndiv.data-table-row:nth-child(2n+0) {\n    background-color: #EEEEEE;\n}\n\ndiv.fadeIn {\n    animation: in 2s;\n}\n\ndiv.fadeOut {\n    animation: out 2s;\n}\n\n@keyframes in {\n    from {opacity: 0;}\n    to {opacity: 1;}\n}\n\n@keyframes out {\n    from {opacity: 1;}\n    to {opacity: 0;}\n}',""])},296:function(e,t,n){"use strict";n.r(t);var o=n(0);n(291);o.g.run(function(){var e=[new f("run(function)","Runs runnable function immediately. If multpile run functions are declared they will be invoked by the declaration order.","RME.run(function() {\n   //Some application code here. This runs immediately.\n   //Body is undefined in here unless this script\n   //is inserted or linked inside the body.\n});"),new f("ready(function)","Runs runnable function when the Body is ready. If multiple ready functions are declared the latter one is invoked.",'RME.ready(function() {\n   Tree.get("#solution").append(new Elem("div").setText("Hello World"));\n});','new Elem("div").setText("Hello World").getContent();'),new f("component(object|function|key, props)","Creates a component into the RME instance or gets the component from the RME instance.",'//Create a component named myComponent\nRME.component(function() { \n   return { \n\tmyComponent: function() { \n\t\t return new Elem("span").setText(this.x + this.y) \n\t}\n   } \n});\n\n//Get the created component named myComponent, give parameters to it\n//and append it into a Body. \nvar comp = RME.component("myComponent", {x: 10, y: 20})\nTree.getBody().append(comp);','RME.component(function() { return { myComponent: function() { return this.x + this.y} } }); RME.component("myComponent", {x: 10, y: 20});'),new f("storage(key|key, value)","Save data to the RME global instance that can be shared in inside RME functions.",'//Save data into the RME instance storage\nRME.storage("mydata", {foo: "bar", bar: "foo"});\n\n//Get the saved data from the RME instance storage\nRME.storage("mydata");','RME.storage("mydata", {foo: "bar", bar: "foo"}); JSON.stringify(RME.storage("mydata"));'),new f("onStorageChange(rmestate)","Callback listener to inform when the RME storage is changed. Implementation of this is optional.","RME.onrmestoragechange(function(newState) {\n   //When ever new data is saved using RME.storage(), then\n   //this will get invoked with new state given as parameter.\n});"),new f("script(source, id, type, text, defer, crossOrigin, charset, async)","Import scripts on runtime. <b>Source</b> is <b>required</b> other attributes are optional. ",'//Call this function before run() or ready()\nRME.script("someScriptFile.js");'),new f("hasComponent(name)","Function checks if a component with the given name exists and returns true if the component exist otherwise false"),new f("use(config)","Function receives an object as a parameter that holds three properties router, messages and app. The function will autoconfigure the Router, the Messages and the App instance to be used as default.")],t=[new f("name(name)","Function will set a name for an application. If the name is not set then a default name is used."),new f("root(root)","Function will set a root for an application. If the root is not set then body is used by default."),new f("create(object)","Function creates an application. The given parameter can either be a Template object or an Elem object. "),new f("get(name)","Gets Application instance by name. If the name is empty then default application instance is retrieved."),new f("setState(refName, state)","Function takes two parameters that enable setting state for components. If only one parameter is given then the parameter must be an object that defines the component name and its values as follows. ({refName: {key: val, key: val}}) If two parameters are given then the first parameter is a component name and the values is component state object as follows. (refName, {key: val, key: val}). Given states are stored into default application. "),new f("getState(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is given. Otherwise whole default application state is given."),new f("isStateEmpty(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is checked. Otherwised default application state is checked. Returns true if state empty otherwise false."),new f("clearState(refName, update)","Function takes two optional parameters. If refName is given then only a state of the component with the refName is cleared otherwise whole default application state is cleared. If update boolean is given then after clearing the state the application is refreshed."),new f("mergeState(refName, state)","Function takes two parameters. If the first parameter is string then the second parameter must be an object. The first parameter refName defines a component and the second parameter is the state of the component as follows: (compName, {key: val, key: val}) If the first parameter is an object then the second parameter is omitted. In this case the object must contain a component name and a state for the component as follows: ({compName: {val: key, val: key}}). Given states are stored into default application."),new f("component(component)(appName)","Function creates a statefull component. The state of the component is stored in an application that this component is bound to. App name is optional and if not given the default application is used.")],n=[new f("setState(refName, state)","Function takes two parameters that enable setting state for components. If only one parameter is given then the parameter must be an object that defines the component name and its values as follows. ({refName: {key: val, key: val}}) If two parameters are given then the first parameter is a component name and the values is component state object as follows. (refName, {key: val, key: val}). Given states are stored into this application instance state. "),new f("getState(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is given. Otherwise whole application state of this application instance is given."),new f("isStateEmpty(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is checked. Otherwise whole application state of this application instance is checked. Returns true if state empty otherwise false."),new f("clearState(refName, update)","Function takes two optional parameters. If refName is given then only a state of the component with the refName is cleared otherwise whole application state of this application instance is cleared. If update boolean is given then after clearing the state the application is refreshed."),new f("mergeState(refName, state)","Function takes two parameters. If the first parameter is string then the second parameter must be an object. The first parameter refName defines a component and the second parameter is the state of the component as follows: (compName, {key: val, key: val}) If the first parameter is an object then the second parameter is omitted. In this case the object must contain a component name and a state for the component as follows: ({compName: {val: key, val: key}}). Given states are stored into this application instance state."),new f("refresh()","Refresh app. Usually not needed to call manually."),new f("setRouter(router)","Set the app instance to use the router. Usually not needed to invoke. Use RME.use(..) instead.")],a=[new f("get(url, contentType)","Does GET XMLHttpRequest using Promise if available. ContentType is optional parameter.",'Es6 function call =>\nHttp.get("someurl")\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.get("someurl")\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new f("post(url, data, contentType)","Does POST XMLHttpRequest using Promise if available. Automatically stringifies data to JSON if available. Data, ContentType are optional.",'Es6 function call =>\nHttp.post("someurl", someDataObject)\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.post("someurl", someDataObject)\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new f("put(url, data, contentType)","Does PUT XMLHttpRequest using Promise if available. Automatically stringifies data to JSON if available. Data, ContentType are optional.",'Es6 function call =>\nHttp.put("someurl", someDataObject)\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.put("someurl", someDataObject)\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new f("delete(url, contentType)","Does DELETE XMLHttpRequest using Promise if available. ContentType is optional.",'Es6 function call =>\nHttp.delete("someurl")\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.delete("someurl")\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new f("do(config)","Does custom XMLHttpRequest according to given config parameter. {url: url, method: method, contentType: contentType, onProgress: onProgress, headers: {headersObject}, useFetch: boolean}","Es6 function call =>\nHttp.do({settings})\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.do({settings})\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});"),new f("fetch().get(url, init)","Does Fetch GET request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().get("someurl").then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new f("fetch().post(url, body, init)","Does Fetch POST request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().post("someurl", someDataObject).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new f("fetch().put(url, body, init)","Does Fetch PUT request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().put("someurl", someDataObject).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new f("fetch().delete(ulr, init)","Does Fetch DELETE request. Content-Type JSON is used by default. {init} is optinoal.",'Http.fetch().delete("someurl").then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new f("fetch().do(config)","Does Fetch custom request according to given config parameters. {url: url, method: method, contentType: contentType, init: {InitObject}}","Http.fetch().do({settings}).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});"),new f("Http.JSON","application/json;charset=UTF-8"),new f("Http.FORM_DATA","multipart/form-data"),new f("Http.TEXT_PLAIN","text/plain")],s=[new f("constructor(type)","Creates a new Elem object.",'new Elem("span");'),new f("setText(text)","Set element text.",'new Elem("p").setText("text");'),new f("getText()","Get element text."),new f("getContet()","Get element content can be text or html.","elem.getContent();"),new f("setContent(html)","Set element content can be text or html.",'new Elem("div").setContent("<b>bold text</b>");'),new f("setValue(value)","Set element value.",'new Elem("input").setValue("valueString");'),new f("getValue()","Get element value.","elem.getValue();"),new f("setId(id)","Set element id.",'new Elem("div").setId("myId");'),new f("getId()","Get element id.","elem.getId();"),new f("append(elem)","Append a new element inside this element.",'new Elem("div").append(new Elem("span"));'),new f("remove(elem)","Remove a element from this element.","elem.remove(childElem);"),new f("replace(elem)","Replace this element with other element.","elem.replace(otherElem);"),new f("before(elem)","Insert a new element before this element.","elem.before(otherElem);"),new f("after(elem)","Insert a new element after this element.","elem.after(otherElem);"),new f("toString()","Returns String presentation of this component."),new f("toTemplate(deep)","Converts this Elem object to JSON template object. Default behavior will also template children, which can be overridden by giving a boolean false as a parameter."),new f("getProps(json)","Returns properties of an Elem in an object. If a boolean json is true then the returned object is returned as JSON string."),new f("render(...elems)","Method is able to render child elements dynamically as illustrated: [Elem, Elem, Elem.....] | Elem, Elem, Elem | [Elem, Elem], Elem.","elementInstance.render(elementInstance,...);"),new f("getChildren()","Get an array of children of this element. Returns the array of child elements wrapped in Elem instance.","elem.getChildren();"),new f("get(selector)","Uses CSS selector to find all matching child elements in this Element. Found elements will be wrapped in an Elem instance."),new f("getFirst(selector)","Uses CSS selector to find the first match child element in this Element. Found element will be wrapped in an Elem instance."),new f("getByTag(tag)","Uses a HTML Document tag name to find matching elements in this Element e.g. div, span, p. Found elements will be wrapped in an Elem instance. If found many then an array of Elem instanes are returned otherwise a single Elem instance."),new f("getByClass(classname)",'Uses a HTML Document element class string to find matching elements in this Element e.g. "main emphasize-green". Method will try to find elements having any of the given classes. Found elements will be wrapped in an Elem instance. If found many then an array of Elem instances are returned otherwise a single Elem instance.'),new f("setTitle(title)","Sets title of an element.",'elem.setTitle("new title");'),new f("getTitle()","Returns the title of an element.","elem.getTitle();"),new f("setTabIndex(idx)","Sets tab index of an element.","elem.setTabIndex(1);"),new f("getTabIndex()","Returns tab index of an element.","elem.getTabIndex();"),new f("getTagName()","Returns tag name of an element.","elem.getTagName();"),new f("setAttribute(attr, value)","Set an attribute to an element.",'elem.setAttribute("attr", "value");'),new f("getAttribute(attr)","Get an attribute object of an element.",'elem.getAttribute("size");'),new f("removeAttribute(attr)","Remove an attribute of an element.",'elem.removeAttribute("href");'),new f("setName(name)","Set a name of an element.",'elem.setName("firstname");'),new f("getName()","Get a name of an element.","elem.getName();"),new f("setType(type)","Set a type of an element.",'elem.setType("text"); elem.setType("password");'),new f("getType()","Get a type of an element.","elem.getType();"),new f("setSource(source)","Set a source of an element.",'elem.setSource("myComponentLib.js"); elem.setSource("logo.gif");'),new f("getSource()","Get a source of an element.","elem.getSource();"),new f("setHref(href)","Set a href of an element.",'elem.setHref("movies"); elem.setHref("www.google.com");'),new f("getHref()","Get a href of an element.","elem.getHref();"),new f("setPlaceholder(placeholder)","Set a placeholder of an element.",'elem.setPlaceholder("Email");'),new f("getPlaceholder()","Get a placeholder of an element.","elem.getPlaceholder();"),new f("setSize(size)","Set size of an element.","elem.setSize(30);"),new f("getSize()","Get size of an element.","elem.getSize();"),new f("setMaxLength(length)","Set maximum length of an input field."),new f("getMaxLenth()","Returns max length of this element."),new f("setMinLength(length)","Set minimum length of an input field."),new f("getMinLength()","Returns min lenght of this element."),new f("setData(key, value)","Set data to be stored into this dom element by a given key."),new f("getData(key)","Get data by a given key from this dom element."),new f("setEditable(boolean)","Set content editable of an element.","elem.setEditable(true);"),new f("getEditable()","Get content editable state of an element.","elem.getEditable();"),new f("setDisabled(boolean)","Set disabled state of an element.","elem.setDisabled(true);"),new f("getDisabled()","Get disabled state of an element.","elem.getDisabled();"),new f("setChecked(boolean)","Set checked state of an element.","elem.setChecked(true);"),new f("getChecked()","Get checked state of an element.","elem.getChecked();"),new f("addClasses(classesString)","Add classes to an element. Adds non existing classes.",'elem.addClasses("main container no-padding");'),new f("removeClasses(classesString)","Remove classes from an element.",'elem.removeClasses("highlight color-red");'),new f("toggleClasses(classesString)","Toggle classes on an element. Adds elements that does not exist. Removes elements that are found.",'elem.toggleClasses("text-green fade-screen");'),new f("getClasses()","Get class string of an element.","elem.getClasses();"),new f("setStyles(stylesMap)","Set styles to an element.",'elem.setStyles({height: "100px", maxHeight: "200px", backgroundColor: "green"});'),new f("getStyle(styleName)","Get a style of an element.",'elem.getStyle("backgroundColor");'),new f("setVisible(boolean)","Set an element visible or hidden.","elem.setVisible(true); elem.setVisible(false);"),new f("display(boolean)","Set display state of an element.","elem.display(true); elem.display(false);"),new f("setDraggable(boolean)","Set element draggable.","elem.setDraggable(true); elem.setDraggable(false);"),new f("message(message, ...params)","Set translated text of this element."),new f("click()","Simulate a click event on an element.","elem.click();"),new f("focus()","Simulate a focus event on an element.","elem.focus();"),new f("blur()","Simulate a blur event on an element.","elem.blur();"),new f("clone(deep)","Returns a clone of an element. If deep boolean is true then child elements are also cloned. Listeners are not cloned.","elem.clone(); elem.clone(true);"),new f("dom()","Returns HTMLDocument of an element.","elem.dom();"),new f("duplicate()","Returns a duplicated Elem object, Duplicates also children and event listeners."),new f("height()","Get height of an element","elem.height();"),new f("width()","Get width of an element.","elem.width();"),new f("top()","Returns position form top relative to offsetParent."),new f("left()","Returns position form left relative to offsetParent."),new f("parent()","Get a parent of an element. Returns Elem instance or null if no parent.","elem.parent();"),new f("next()","Get a next element of an element. Returns Elem instance or null if no next.","elem.next();"),new f("previous()","Get a previous element of an element. Returns Elem instance or null if not previous.","elem.previous();"),new f("getFirstChild()","Get the first child of an element. Returns Elem instance or null if no child.","elem.getFirstChild();"),new f("getLastChild()","Get the last child of an element. Returns Elem instance or null if no child.","elem.getLastChild();"),new f("extend(child)","Method does es5 standard extension to an element. The parameter is type of function and is also the child (subclass) of the Elem class. This method can be used to add additional functionality to the Elem class. Method returns the given child reference."),new f("onAnimationStart(handler)","Add animation start listener on an element.","elem.onAnimationStart(function(event));"),new f("onAnimationIteration(handler)","Add animation iteration listener on an element.","elem.onAnimationIteration(function(event));"),new f("onAnimationEnd(handler)","Add animation end listener on an element.","elem.onAnimationEnd(function(event));"),new f("onTransitionEnd(handler)","Add transition end listener on an element.","elem.addTransitionEnd(function(event));"),new f("onDrag(handler)","Add on drag listener on an element.","elem.onDrag(function(event));"),new f("onDragEnd(handler)","Add on drag end listener on an element.","elem.onDragEnd(function(event));"),new f("onDragEnter(handler)","Add on drag enter listener on an element.","elem.onDragEnter(function(event));"),new f("onDragOver(handler)","Add on drag over listener on an element.","elem.onDragOver(function(event));"),new f("onDragStart(handler)","Add on drag start listener on an element.","elem.onDragStart(function(event));"),new f("onDrop(handler)","Add on drop listener on an element.","elem.onDrop(function(event));"),new f("onClick(handler)","Add on click listener on an element.","elem.onClick(function(event));"),new f("onDoubleClick(handler)","Add on double click listener on an element.","elem.onDoubleClick(function(event));"),new f("onContextMenu(handler)","Add on context menu listener on an element. (right mouse button click)","elem.onContextMenu(function(event));"),new f("onMouseDown(handler)","Add on mouse down listener on an element.","elem.onMouseDown(function(event));"),new f("onMouseEnter(handler)","Add on mouse enter listener on an element.","elem.onMouseEnter(function(event));"),new f("onMouseLeave(handler)","Add on mouse leave listener on an element.","elem.onMouseLeave(function(event));"),new f("onMouseMove(handler)","Add on mouse move listener on an element.","elem.onMouseMove(function(event));"),new f("onMouseOver(handler)","Add on mouse over listener on an element.","elem.onMouseOver(function(event));"),new f("onMouseOut(handler)","Add on mouse out listener on an element.","elem.onMouseOut(function(event));"),new f("onMouseUp(handler)","Add on mouse up listener on an element.","elem.onMouseUp(function(event));"),new f("onWheel(handler)","Add mouse wheel listener on an element.","elem.onWheel(function(event));"),new f("onScroll(handler)","Add on scroll listener on an element.","elem.onScroll(function(event));"),new f("onResize(handler)","Add on resize listener on an element. (supported: body)","elem.onResize(function(event));"),new f("onError(handler)","Add on erro listener on an element.","elem.onError(function(event));"),new f("onLoad(handler)","Add on load listener on an element. (supported: body, img|input=type=img, script, link, style, frame, iframe)","elem.onLoad(function(event));"),new f("onUnload(handler)","Add on unload listener on an element. Occurs when page is unloaded or browser window is closed (supported: body)","elem.onUnload(function(event));"),new f("onBeforeUnload(handler)","Add on before unload listener on an element. Occurs before unload (supported: body)","elem.onBeforeUnload(function(even));"),new f("onKeyUp(handler)","Add on key up listener on an element.","elem.onKeyUp(function(event));"),new f("onKeyDown(handler)","Add on key down listener on an element.","elem.onKeyDown(function(event));"),new f("onKeyPress(handler)","Add on key press listener on an element.","elem.onKeyPress(function(event));"),new f("onInput(handler)","Add on input listener on an element.","elem.onInput(function(event));"),new f("onChange(handler)","Add on change listener on an element.","elem.onChange(function(event));"),new f("onSubmit(handler)","Add on submit listener on an element.","elem.onSubmit(function(event));"),new f("onSelect(handler)","Add on select listener on an element.","elem.onSelect(function(event));"),new f("onReset(handler)","Add on reset listener on an element.","elem.onReset(function(event));"),new f("onFocus(handler)","Add on focus listener on an element.","elem.onFocus(function(event));"),new f("onFocusIn(handler)","Add on focus in listener on an element.","elem.onFocusIn(function(event));"),new f("onFocusOut(handler)","Add on focus out listener on an element.","elem.onFocusOut(function(event));"),new f("onBlur(handler)","Add on blur listener on an element.","elem.onBlur(function(event));"),new f("onCopy(handler)","Add on copy listener on an element.","elem.onCopy(function(event));"),new f("onCut(handler)","Add on cut listener on an element.","elem.onCut(function(event));"),new f("onPaste(handler)","Add on paste listener on an element.","elem.onPaste(function(event));"),new f("onAbort(handler)","Add on abort listener on an element. Occurs when media data download was aborted. (supported: video, audio)","elem.onAbort(function(event));"),new f("onWaiting(handler)","Add on wainting listener on an element. Occurs when video stops and waits to buffer next frame. (supported: audio, video)","elem.onWaiting(function(event));"),new f("onVolumeChange(handler)","Add on volume change listener on an element. Occurs when the volume is changed. (supported: audio, video)","elem.onVolumeChange(function(event));"),new f("onTimeUpdate(handler)","Add on time update listener on an element. Occurs on playing or when a new position is selected on a seekbar. (supported: audio, video)","elem.onTimeUpdate(function(event));"),new f("onSeeking(handler)","Add on seeking listener on an element. Occurs when a new position was selected on a seekbar. (supported: audio, video)","elem.onSeeking(function(event));"),new f("onSeekEnd(handler)","Add on seek end listener on an element. Occurs after a new position was selected on a seekbar. (supported: audio, video)","elem.onSeekEnd(function(event));"),new f("onRateChange(handler)","Add on rate change listener on an element. Occurs when playback rate (speed  slow motion, fast forward) changes. (supported: audio, video)","elem.onRateChange(function(event));"),new f("onProgress(handler)","Add on progress listener on an element. Occurs when browser is downloading media. (supported: audio, video)","elem.onProgress(function(event));"),new f("onLoadMetadata(handler)","Add on load metadata listener on an element. Occurs when media metadata was downloaded. (supported: audio, video)","elem.onLoadMetadata(function(event));"),new f("onLoadedData(handler)","Add on loaded data listener on an element. Occurs when media frame data was loaded, but not enough data to play next frame. (supported: audio, video)","elem.onLoadedData(function(event));"),new f("onLoadStart(handler)","Add on load start listener on an element. Occurs when browser starts looking for media. (supported: audio, video)","elem.onLoadStart(function(event));"),new f("onPlaying(handler)","Add on playing listener on an element. Occurs when the media is playing after paused by user or stopped for buffering. (supported: audio, video)","elem.onPlaying(function(event));"),new f("onPlay(handler)","Add on play listener on an element. Occurs when the media starts to play e.g. play button is pressed. (supported: audio, video)","elem.onPlay(function(event));"),new f("onPause(handler)","Add on pause listener on an element. Occurs when the media is paused. (supported: audio, video)","elem.onPause(function(event));"),new f("onEnded(handler)","Add on ended listener on an element. Occurs when the end of media file has been reached. (supported: audio, video)","elem.onEnded(function(event));"),new f("onDurationChange(handler)","Add on duration change listener on an element. Occurs when media duration changes. (supported: audio, video)","elem.onDurationChange(function(event));"),new f("onCanPlay(handler)","Add on can play listener on an element. Occurs when enough data to play. (supported: audio, video)","elem.onCanPlay(function(event));"),new f("onCanPlayThrough(handler)","Add can play through listener on an element. Occurs when can play through without buffering. (supported: audio, video)","elem.onCanPlayThrough(function(event));"),new f("onStalled(handler)","Add on stalled listener on an element. Occurs when browser is trying to get data but data not available. (supported: audio, video)","elem.onStalled(function(event));"),new f("onSuspend(handler)","Add on suspend listener on an element. Occurs when browser intentionally does not retrive media data. (supported: audio, video)","elem.onSuspend(function(event));"),new f("onPopState(handler)","Add on pop state listener on an element. Occurs when window history changes.","elem.onPopState(function(event));"),new f("onStorage(handler)","Add on storage listener on an element. Occurs when WebStorage changes.","elem.onStorage(function(event));"),new f("onHashChange(handler)","Add on hash change listener on an element. Occurs when hash part of the url changes. (supported: body)","elem.onHashChange(function(event));"),new f("onAfterPrint(handler)","Add on after print listener on an element. Occurs when a print dialogua is closed. (Safari, Opera not supported)","elem.onAfterPrint(function(event));"),new f("onBeforePrint(handler)","Add on before print listener on an element. Occurs when a print dialogue is opened (Safari, Opera not supported)","elem.onBeforePrint(function(event));"),new f("onPageHide(handler)","Add on page hide listener on an element. Occurs when user navigates away from webpage. (supported: body)","elem.onPageHide(function(event));"),new f("onPageShow(handler)","Add on page show listener on an element. Occurs when user navigates to webpage. (supported: body)","elem.onPageShow(function(event));"),new f("create(type)","Creates a new HTML element by type.",'Elem.create("span");'),new f("wrap(html)","Does not create a new HTML element but only wraps existing HTML element in the Elem instance.","Elem.wrap(HTMLDocument); Elem.wrap(document.body);"),new f("wrapElems(htmlElems)","Takes an array of HTML Document elements and wraps all of them in the Elem instance. Returns an array of Elem instances if more than one elements were given otherwise retuns a single Elem instance element.","Elem.wrapElems([HTMLDocment, HTMLDocument]); Elem.wrapElems([document.body, document.head]);")],r=[new f("resolve(template)","Method takes a JSON notation template as parameter, starts resolving it and returns a created element tree.",'Template.resolve({\n  div: {\n    span: {text: "Hello World"}\n  }\n});'),new f("isTemplate(object)","Method checks if the given object is an unresolved JSON template and returns true if it is an unresolved JSON template, otherwise false.")],i=[new f("get(selector)","Returns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by css selector.","Tree.get(id|class|tag|cssSelector);"),new f("getFirst(selector)","Returns a single Elem instance. Selects element from HTML Document Tree by css selector.",'Tree.getFirst(id|class|tag|cssSelector); Tree.getFirst("#app").getId();','Tree.getFirst("div").getId();'),new f("getByTag(tag)","Retuns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by tag e.g. div.",'Tree.getByTag("div").getTagName();'),new f("getByName(name)","Returns an array of Elem objects or a single Elem instance. Selects elements form HTML Document Tree by element name.",'Tree.getByName("firstname");'),new f("getById(id)","Returns a single Elem instance. Selects an element from HTML Document Tree by element id.",'Tree.getById("elementIdWithoutHash"); Tree.getById("app").getId();','Tree.getById("app").getId();'),new f("getByClass(classname)","Returns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by element classname.",'Tree.getByClass("myclass"); Tree.getByClass("w3-container").getClasses();','Tree.getByClass("w3-container").getClasses();'),new f("getBody()","Returns an Elem instance that contains Body element.","Tree.getBody().dom().tagName;","Tree.getBody().dom().tagName;"),new f("getHead()","Returns an Elem instance that contains Head element.","Tree.getHead().dom().tagName;","Tree.getHead().dom().tagName;"),new f("getTitle()","Returns a title of the current page.","Tree.getTitle();",!0),new f("setTitle(title)","Sets a title of the current page.",'Tree.setTitle("new title");'),new f("getActiveElement()","Returns an active element wrapped in Elem instance on the page.","Tree.getActiveElement().dom().tagName;","Tree.getActiveElement().dom().tagName;"),new f("getAnchors()","Retuns anchors of the page wrapped in Elem instance.","Tree.getAnchors();"),new f("getHtmlElement()","Returns the HTML element.","Tree.getHtmlElement();"),new f("getDoctype()","Returns the Doctype element.","Tree.getDoctype();"),new f("getEmbeds()",'Returns Elem instance array of "embed" elements.',"Tree.getEmbeds();"),new f("getImages()",'Returns Elem instance array of "img" elements.',"Tree.getImages();"),new f("getLinks()",'Returns Elem instance array of "a" and "area" elements.',"Tree.getLinks();"),new f("getScripts()",'Returns Elem instance array of "script" elements.',"Tree.getScripts();"),new f("getForms()",'Returns Elem instance array of "form" elements.',"Tree.getForms();")],l=[new f("navigate(url, event)","Method will try to find a route according to the given parameter. The supported parameter combinations are url, event or elem & event. The first paramter can either be an URL or an Event or an Elem. The second parameter is an Event if the first parameter is an Elem. If the route is found, then the Router will update a new url to the browser and render the found route element.","Router.navigate(newPageUrl);"),new f("root(elem)","Set a root element into the Router. Elem parameter must be an Elem object in order to the Router is able to render it.","Router.root(rootObj);"),new f("add(url, elem, hide)","Add a new route element into the Router. Elem parameter must be an Elem object in order to the Router is able to render it.","Router.add(someRouteUrl, someElemObject, hideboolean);"),new f("routes(routes)","Set an array of routes that the Router uses. If a root is not set then the first item in the given routes array will be the root route element.",'var routes = [\n  {elem: rootObj},\n  {route: "page1", elem: page1Obj},\n  {route: "page2", elem: page2Obj}\n];\n\nRouter.routes(routes);'),new f("hash()","Method sets the Router to use a hash implementation. When this implementation is used there is no need to manually use Router.navigate function because change of the hash is automatically followed."),new f("url(manual)","Method sets the Router to use an url implementation. The url implementation defaults to HTML standard that pressing a link will cause the browser reload a new page. After reload the new page is rendered. If you wish to skip reload then you should set the parameter manual to true."),new f("scroll(auto)","Method sets default level behavior for route naviagation. If the given value is true then the Browser auto-scrolls up when navigating to a new resource. If set false then the Browser does not auto-scroll up. Default value is true."),new f("setApp(appInstance)","Set the app instance to be invoked on the Router update."),new f("getCurrentState()","Returns current status of the Router.")],c=[new f("locale()","Function returns current locale of the Messages."),new f("lang(locale|event)","Lang function is used to change or set the current locale to be the given locale. If a given parameter is an event then event.preventDefault() is invoked and the locale is ought to resolve from a target of the event. After calling this method the Messages.load function will be automatically invoked."),new f("message(text, ...params)","Message function is used to retrieve translated messages. The function also supports message parameters that can be given as a comma separeted list."),new f("load(loader)","Load function is used to load new messages or change already loaded messages. The one of the parameters is the changed locale and the other is setMessages(messagesArrayOrObject) function that is used to change the translated messages. This function is called automatically when language is changed by calling the Messages.lang() function."),new f("setApp(appInstance)","Set the app instance to be invoked on the Messages update.")],p=[new f("Key.ENTER",'"Enter"',"elem.onKeyDown(function(event) {\n   if(event.key === Key.ENTER)\n      search();\n});"),new f("Key.ESC",'"Escape"'),new f("Key.TAB",'"Tab"'),new f("Key.F1",'"F1"'),new f("Key.F2",'"F2"'),new f("Key.F3",'"F3"'),new f("Key.F4",'"F4"'),new f("Key.F5",'"F5"'),new f("Key.F6",'"F6"'),new f("Key.F7",'"F7"'),new f("Key.F8",'"F8"'),new f("Key.F9",'"F9"'),new f("Key.F10",'"F10"'),new f("Key.F11",'"F11"'),new f("Key.F12",'"F12"'),new f("Key.A",'"a"'),new f("Key.B",'"b"'),new f("Key.C",'"c"'),new f("Key.D",'"d"'),new f("Key.E",'"e"'),new f("Key.F",'"f"'),new f("Key.G",'"g"'),new f("Key.H",'"h"'),new f("Key.I",'"i"'),new f("Key.J",'"j"'),new f("Key.L",'"l"'),new f("Key.M",'"m"'),new f("Key.N",'"n"'),new f("Key.O",'"o"'),new f("Key.P",'"p"'),new f("Key.Q",'"q"'),new f("Key.R",'"r"'),new f("Key.S",'"s"'),new f("Key.T",'"t"'),new f("Key.U",'"u"'),new f("Key.V",'"v"'),new f("Key.W",'"w"'),new f("Key.X",'"x"'),new f("Key.Y",'"y"'),new f("Key.Z",'"z"'),new f("Key.CAPS_LOCK",'"CapsLock"'),new f("Key.NUM_LOCK",'"NumLock"'),new f("Key.SCROLL_LOCK",'"ScrollLock"'),new f("Key.PAUSE",'"Pause"'),new f("Key.PRINT_SCREEN",'"PrintScreen"'),new f("Key.PAGE_UP",'"PageUp"'),new f("Key.PAGE_DOWN",'"PageDown"'),new f("Key.END",'"End"'),new f("Key.HOME",'"Home"'),new f("Key.DELETE",'"Delete"'),new f("Key.INSERT",'"Insert"'),new f("Key.ALT",'"Alt"'),new f("Key.CTRL",'"Control"'),new f("Key.CONTEXT_MENU",'"ContextMenu'),new f("Key.OS",'"OS"'),new f("Key.ALTGR",'"AltGraph"'),new f("Key.SHIFT",'"Shift"'),new f("Key.BACKSPACE",'"Backspace"'),new f("Key.SECTION",'"§"'),new f("Key.ONE",'"1"'),new f("Key.TWO",'"2"'),new f("Key.THREE",'"3"'),new f("Key.FOUR",'"4"'),new f("Key.FIVE",'"5"'),new f("Key.SIX",'"6"'),new f("Key.SEVEN",'"7"'),new f("Key.EIGHT",'"8"'),new f("Key.NINE",'"9"'),new f("Key.ZERO",'"0"'),new f("Key.PLUS",'"+"'),new f("Key.MINUS",'"-"'),new f("Key.STAR",'"*"'),new f("Key.SLASH",'"/"'),new f("Key.ARROW_UP",'"ArrowUp"'),new f("Key.ARROW_RIGHT",'"ArrowRight"'),new f("Key.ARROW_DOWN",'"ArrowDown"'),new f("Key.ARROW_LEFT",'"ArrowLeft"'),new f("Key.COMMA",'","'),new f("Key.DOT",'"."')],d=[new f("set(name, value, expiresDate, cookiePath, cookieDomain, setSecureBoolean)","Set a cookie. Name and value parameters are essential on saving the cookie and other parameters are optional.",'Cookie.set("myCookie", "myCookieValue");',!0),new f("get(name)","Get a cookie by name. If the cookie is found a cookie object is returned otherwise null.",'Cookie.get("myCookie");',!0),new f("remove(name)","Remove a cookie by name. Method will set the cookie expired and then remove it.",'Cookie.remove("myCookie");',!0)],m=[new f("set(key, val)","Set a value to the Session by name.",'Session.set("abc", "alphabets");',!0),new f("get(key)","Get a value from the Session by name.",'Session.get("abc");',!0),new f("remove(key)","Remove a value from the Session by name.",'Session.remove("abc");',!0),new f("clear()","Clears the Session.","Session.clear();",!0)],u=[new f("set(key, val)","Set a value by a key to the LocalStorage.",'Storage.set("foo", "bar");',!0),new f("get(key)","Get a value by a key from the LocalStorage.",'Storage.get("foo");',!0),new f("remove(key)","Remove value by a key from the LocalStorage.",'Storage.remove("foo");'),new f("clear()","Clears the LocalStorage.","Storage.clear();")],h=[new f("isEmpty(value)","Returns true if a given value is null, undefined, an empty string or an array and lenght of the array is 0.",'Util.isEmpty(""); Util.isEmpty(undefined); Util.isEmpty(null); Util.isEmpty("test");',!0),new f("getType(value)","Returns type of a given value.","Util.getType(function(){}); Util.getType(1);",!0),new f("isType(value, type)","Returns true if a given value is given type.",'Util.isType(function(){}, "function"); Util.isType(1, "number");',!0),new f("isFunction(func)","Returns true if a given value is function.","Util.isFunction(function(){});",!0),new f("isBoolean(boolean)","Returns true if a given value is boolean.","Util.isBoolean(false); Util.isBoolean(true);",!0),new f("isString(string)","Returns true if a given value is string.",'Util.isString("this is a string");',!0),new f("isNumber(number)","Returns true is a given value is number.","Util.isNumber(1);",!0),new f("isSymbol(symbol)","Returns true if a given value is symbol. Works on ES6 or higher.","Util.isSymbol(symbol);"),new f("isObject(object)","Returns true if a given value is object.","Util.isObject({});",!0),new f("isArray(array)","Returns true if a given value is an Array.","Util.isArray([]);",!0),new f("setTimeout(callback, milliseconds, ...params)","Returns a created timeout object. Callback will be invoked after a given number of milliseconds.  Params are passed to callback function."),new f("clearTimeout(timeoutObject)","Clears the given timeout object.","Util.clearTimeout(timeout);"),new f("setInterval(callback, milliseconds, ...params)","Returns a created interval object. Callback will be invoked on every iteration of a given number of milliseconds. Params are passed to callback function."),new f("clearInterval(intervalObject)","Clears the given interval object.","Util.clearInterval(interval); "),new f("encodeBase64String(string)","Returns base64 encoded string.",'Util.encodeBase64String("test");',!0),new f("decodeBase64String(string)","Returns base64 decoded string.",'Util.decodeBase64String("dGVzdA==");',!0)],g=[new f("scrollTo(xPos, yPos)","Scroll once to given position.","Browser.scrollTo(xpPos, yPos);"),new f("scrollBy(xPx, yPx)","Scroll by given amount to next position.","Browser.scrollBy(xPx, xPy);"),new f("open(url, name, specs, replace)","Opens a new browser window. Name pamareter can have following values: name or target value (name|_blank|_parent|_self|_top). Returns reference to the opened window or null if opening the window failes.","Browser.open(url, name, specs, replace);"),new f("close(openedWindow)","Closes a given opened window. Same as calling openedWindow.close();","Browser.close(window);"),new f("print()","Opens a print webpage dialog.","Browser.print();"),new f("alert(message)","Displays an alert dialog with a given message and an OK button.",'Browser.alert("message");'),new f("confirm(message)","Displays a confirm dialog with a given message, OK and Cancel button. Returns True if OK was pressed otherwise false.",'Browser.confirm("message");'),new f("prompt(message, defaultText)","Displays a prompt dialog with a given message, a prefilled default text, OK and Cancel button. Returns If OK was pressed and an input field has text then the text is returned. If the input does not have text and OK was pressed then empty string is returned. If Cancel was pressed then null is returned.",'Browser.propmt("message", "defaultText");'),new f("mediaMatcher(mediaString)","Method is used to make a media query to the viewport/screen object. The media query is done according to a given mediaString. Syntax of the media string would be (min-width: 300px) but using this method enables user to omit parentheses(). Which then leads to syntax min-width: 300px. Returns media mather object",'Browser.mediaMatcher("mediaString");'),new f("pageBack()","Loads one page back in the browsers history list.","Browser.pageBack();"),new f("pageForward()","Loads one page forward in the browsers history list.","Browser.pageForward();"),new f("pageGo(numberOfPagesOrUrl)","Loads to specified page in the browsers history list. A parameter can either be a number or string. If the parameter is number then positive and negative values are allowed as positive values will go forward and negative values will go backward. If the parameter is string then it must be partial or full url of the page in the history list.","Browser.pageGo(1);"),new f("pushState(stateObject, title, newURL)","Create a new history entry with given parameters without reloading the page. State object will be the state next history entry will be using. Title is ignored value by the history object at the time but it could be the same title what the HTML Document page has at the moment of create the new history entry. New url must be of the same origin (e.g. www.example.com) but the rest of url could be anything.","Browser.pushState(stateObject, title, newUrl);"),new f("replaceState(stateObject, title, newURL)","Replace a history entry with given parameters without reloading the page. State object will be the state next history entry will be using. Title is ignored value by the history object at the time but it could be the same title what the HTML Document page has at the moment of create the new history entry. New url must be of the same origin (e.g. www.example.com) but the rest of url could be anything.","Browser.replaceState(stateObject, title, newURL);"),new f("newPage(newURL)","Loads a new page.","Browser.newPage(newUrl);"),new f("reloadPage(force)","Reloads a current page. If a parameter force is true then the page will be loaded from the server otherwise from the browsers cache.","Browser.reloadPage(boolean);"),new f("replacePage(newURL)","Replaces a current page with a new one. If the page is replaced then it wont be possible to go back to the previous page from the history list.","Browser.replacePage(newUrl);"),new f("getAnchorHash()","Returns anchor part of the url e.g. #heading2.","Browser.getAnchorHash();"),new f("setAnchorHash(hash)","Sets a new anhorpart of the url e.g. #heading3.","Browser.setAnchorHash(hash);"),new f("getHostnamePort()","Returns hostname and port in host:port format.","Browser.getHostnamePort();",!0),new f("setHostnamePort(hostPort)","Set a hostname and port in format host:port.","Browser.setHostnamePort(hostport);"),new f("getHostname()","Returns hostname e.g. www.google.com.","Browser.getHostname();",!0),new f("setHostname(hostname)","Set a hostname","Browser.setHostname(hostname);"),new f("getURL()","Returns entire URL of the webpage.","Browser.getURL();",!0),new f("setURL(newURL)","Set location of a current page to point to a new location e.g. http://some.url.test or #someAcnhor on the page.","Browser.setURL(newURL);"),new f("getOrigin()","Returns protocol, hostname and port e.g. https://www.example.com:443.","Browser.getOrigin();",!0),new f("getPathname()","Returns part of the URL after the slash(/) e.g. /photos/.","Browser.getPathname();",!0),new f("setPathname(pathname)","Sets a new pathname for this location.","Browser.setPathname();"),new f("getPort()","Returns port number of the connection between server and client.","Browser.getPort();",!0),new f("setPort(portNumber)","Sets a new port number for the connection between server and client.","Browser.setPort(number);"),new f("getProtocol()","Returns protocol part of the URL e.g. http: or https:.","Browser.getProtocol();",!0),new f("setProtocol(protocol)","Set a new protocol for this location to use.","Browser.setProtocol(protocol);"),new f("getSearchString()","Returns part of the URL after the question(?) mark. e.g. ?attr=value&abc=efg.","Browser.getSearchString();",!0),new f("setSearchString(searchString)","Sets a new searchString into the URL.","Browser.setSearchString(searchString);"),new f("getCodename()","Returns codename of the browser.","Browser.getCodename();",!0),new f("getName()","Returns name of the browser.","Browser.getName();",!0),new f("getVersion()","Returns version of the browser.","Browser.getVersion();",!0),new f("isCookiesEnabled()","Returns true if cookies are enabled otherwise false.","Browser.isCookiesEnabled();",!0),new f("getGeoLocation()","Returns GeoLocation object.","Browser.getGeoLocation();",!0),new f("getLanguage()","Returns language of the browser.","Browser.getLanguage();",!0),new f("getPlatform()","Returns a platform name of which the browser is compiled on.","Browser.getPlatform();",!0),new f("getProduct()","Returns a name of an engine of the browser.","Browser.getProduct();",!0),new f("getUserAgentHeader()","Returns a header string sent to a server by the browser.","Browser.getUserAgentHeader();",!0),new f("getColorDepth()","Returns color depth of the current screen.","Browser.getColorDepth();",!0),new f("getFullScreenHeight()","Returns total height of the current screen.","Browser.getFullScreenHeight();",!0),new f("getFullScreenWidth()","returns total width of the current screen.","Browser.getFullScreenWidth();",!0),new f("getAvailableScreenHeight()","Returns height of the current screen excluding OS. taskbar.","Browser.getAvailableScreenHeight();",!0),new f("getAvailableScreenWidth()","Returns width of the current screen exluding OS. taskbar.","Browser.getAvailableScreenWidth();",!0)];function f(e,t,n,o){this.name=e,this.description=t,this.example=n,this.solution=o}o.g.storage("rmeList",e),o.g.storage("httpList",a),o.g.storage("elemList",s),o.g.storage("templateList",r),o.g.storage("treeList",i),o.g.storage("routerList",l),o.g.storage("messagesList",c),o.g.storage("keyList",p),o.g.storage("cookieList",d),o.g.storage("sessionList",m),o.g.storage("storageList",u),o.g.storage("utilList",h),o.g.storage("browserList",g),o.g.storage("appList",t),o.g.storage("appInstanceList",n)}),o.g.component({text:function(e){return{"p.w3-large":{text:e.text,class:e.color?e.color:""}}}}),o.g.component({Text:function(e){return{"component:text":{text:e.text}}}}),o.g.component({tptext:function(e){return{"component:text.w3-text-teal":{text:e.text}}}}),o.g.component({paragraph:function(e){return{"p.w3-large":{class:e.color?e.color:"",span:e.lines}}}}),o.g.component({P:function(){return{"p.w3-large":{}}}}),o.g.component({sline:function(e){return{span:{text:e.text}}}}),o.g.component({iline:function(e){return{i:{text:e.text}}}}),o.g.component({bline:function(e){return{b:{text:e.text}}}}),o.g.component({S:function(e){return{sline:{text:e.text}}}}),o.g.component({B:function(e){return{bline:{text:e.text}}}}),o.g.component({I:function(e){return{iline:{text:e.text}}}}),o.g.component({Comment:function(e){return{"span.w3-text-green":{text:e.text,br:{}}}}}),o.g.component({SL:function(e){return{span:{text:e.text,br:{}}}}}),o.g.component({subTitle:function(e){return{div:{line:{},h3:{text:e.text}}}}}),o.g.component({menu:function(){return{"ul.w3-ul":[{li:{class:"w3-light-gray menu-title",b:{text:"Home"}}},{li:{navLink:{href:"/rme/",text:"RME"}}},{li:{class:"w3-light-gray menu-title",b:{text:"Howto"}}},{li:{navLink:{href:"/rme/howto",text:"Basics"}}},{li:{navLink:{href:"/rme/put-things-together",text:"App + Router + Messages"}}},{li:{class:"w3-light-gray menu-title",b:{text:"Explained"}}},{li:{navLink:{href:"/rme/rme-explained",text:"RME explained"}}},{li:{navLink:{href:"/rme/app-explained",text:"Application Explained"}}},{li:{navLink:{href:"/rme/templates-explained",text:"Templates explained"}}},{li:{navLink:{href:"/rme/router-explained",text:"Router explained"}}},{li:{navLink:{href:"/rme/components-explained",text:"Components explained"}}},{li:{navLink:{href:"/rme/elements-explained",text:"Elements explained"}}},{li:{navLink:{href:"/rme/messages-explained",text:"Messages Explained"}}},{li:{navLink:{href:"/rme/http-explained",text:"Http explained"}}},{li:{class:"w3-light-gray menu-title",b:{text:"Classes"}}},{li:{navLink:{href:"/rme/rme",text:"RME"}}},{li:{navLink:{href:"/rme/app",text:"App"}}},{li:{navLink:{href:"/rme/router",text:"Router"}}},{li:{navLink:{href:"/rme/http",text:"Http"}}},{li:{navLink:{href:"/rme/template",text:"Template"}}},{li:{navLink:{href:"/rme/elem",text:"Elem"}}},{li:{navLink:{href:"/rme/tree",text:"Tree"}}},{li:{navLink:{href:"/rme/messages",text:"Messages"}}},{li:{navLink:{href:"/rme/cookie",text:"Cookie"}}},{li:{navLink:{href:"/rme/session",text:"Session"}}},{li:{navLink:{href:"/rme/storage",text:"Storage"}}},{li:{navLink:{href:"/rme/util",text:"Util"}}},{li:{navLink:{href:"/rme/browser",text:"Browser"}}},{li:{navLink:{href:"/rme/key",text:"Key"}}}]}}}),o.g.component({navLink:function(e){return{a:{href:e.href,text:e.text,onClick:o.d.navigate}}}}),o.g.component({quote:function(e){return{"div.w3-panel.w3-leftbar.w3-border-bottom.w3-light-gray.w3-margin":[{p:{class:"w3-xlarge w3-serif",span:{class:"w3-xxlarge",content:"&#10078;&nbsp;"},i:e.text}},{p:"-RME"}]}}}),o.g.component({list:function(e){return{"ul.w3-ul":e.list.map(function(e){return{li:{a:{href:e.link,text:e.text,target:e.target},"span.w3-text-gray":{content:e.desc?"&nbsp;".concat(e.desc):""}}}})}}}),o.g.component({line:function(){return{"div.w3-border-bottom.line":{}}}}),o.a.component({dataTable:function(e){var t=o.f.isEmpty(e.filtered)?e.data:e.filtered;return{div:[e.data.length>10?{"div.w3-row":{"input.w3-input.w3-xlarge.w3-border.w3-margin-top[placeholder=Type to Filter Table]":{onInput:function(t){return o.a.setState(e.ref,{filtered:o.g.storage(e.key).filter(function(e){return e.name.toLowerCase().search(t.target.value)>-1})})},onBlur:function(){return o.a.clearState(e.ref)}}}}:void 0,{"div.w3-row.w3-padding.w3-border-bottom.w3-text-teal":{"div.w3-container.w3-third":{b:function(){return"Function"}},"div.w3-container.w3-twothird":{b:function(){return"Description"}}}},{div:t.map(function(e){return{"div.w3-row.w3-padding.data-table-row":{"div.w3-container.w3-third":function(){return e.name},"div.w3-container.w3-twothird":function(){return e.description}}}})}]}}})(),o.g.component({code:function(e){return{"div.w3-container.w3-light-gray.w3-padding.code":{text:e.text}}}}),o.g.component({dcode:function(e){var t=[o.g.component("code",{text:e.es6}),o.g.component("code",{text:e.es5})],n=function(e,n){e.parent().getFirst(".w3-light-gray").removeClasses("w3-light-gray"),e.addClasses("w3-light-gray"),e.parent().next().render(t[n])};return{div:{"div.w3-bar":[{tab:{selected:!0,text:"ES 6",change:n,idx:0}},{tab:{text:"ES 5",change:n,idx:1}}],div:function(e){return e.append(t[0])}}}}}),o.g.component({tab:function(e){return{"div.w3-bar-item.w3-button.w3-hover-light-gray":{class:e.selected?"w3-light-gray":"",text:e.text,onClick:function(t){return e.change(o.b.wrap(t.target),e.idx)}}}}}),o.g.component({footer:function(){return{"div.w3-container.w3-border-top.w3-margin":[{"div.w3-center.w3-margin-top":function(){return"Released under MIT lisence"}},{"div.w3-center":{content:"2018 - 2019 &copy; Jami Lu"}}]}}}),o.g.component({home:function(){return{"div.w3-container":[{h1:"RME.js"},{Text:"RME stands for Rest Made Easy. Purpose of this library is to enable user to create RESTfull webpages easily and without much configuration.\n            This library is under development and free to use under the MIT License."},{Text:"The RME is more of a library of all sorts of utility classes and methods but it can also be translated as relatively loose framework.\n            What the RME offers is relatively easy\n            way of creating restfull webpages through various utility classes. The RME is highly lightweight and it has no dependencies since\n            it has been developed straight over the plain old JavaScript. This leads to that the RME gives the JavaScript support so the user must\n            know what to use and when. The RME does not aim to very comprehensive legacy support and it should work fine on relatively up-to-date browsers.\n            Probably around five years old versions and newer. Using old browsers is never recommended as it could cause safety issues.\n            IE support starts from 8 but not all features are supported on the IE 8. The IE support is not comprehensively tested at this phase and thus safe to use IE version is 11 and newer."},{quote:{text:"Javascript Only"}},{quote:{text:"JavaScript Re-designed"}},{subTitle:{text:"Downloads"}},{"component:list":{list:[{text:"rme.js",link:"http://jlcv.sytes.net/files/rme.js",desc:"(ES6)"},{text:"rme.es5.js",link:"http://jlcv.sytes.net/files/rme.es5.js",desc:"(ES5)"},{text:"rme.es5.min.js",link:"http://jlcv.sytes.net/files/rme.es5.min.js",desc:"(Minified ES5)"}]}},{subTitle:{text:"Github"}},{"component:list":{list:[{text:"https://github.com/JamiLu/RME",link:"https://github.com/JamiLu/RME",target:"_blank"}]}},{subTitle:{text:"NPM"}},{"component:list":{list:[{text:"https://www.npmjs.com/package/rme.js",link:"https://www.npmjs.com/package/rme.js",target:"_blank"}]}}]}}}),o.g.component({rmeDoc:function(){return{"div.w3-container":[{h1:function(){return"RME"}},{"component:text":{text:"RME class is a core of the RME library. The RME class offers functionality to start a RME application, control components, external script files\n            and rme storage."}},{dataTable:{key:"rmeList",data:o.g.storage("rmeList")}}]}}}),o.g.component({appDoc:function(){return{"div.w3-container":[{h1:function(){return"App"}},{"component:text":{text:"This class has functions to create a component that has an application state attached into it. And also has functions to create a new application and also handle\n            default application state."}},{dataTable:{key:"appList",data:o.g.storage("appList")}},{line:{}},{h1:function(){return"App Instance"}},{"component:text":{text:"Application instance class has functions to handle the current application state."}},{dataTable:{key:"appInstanceList",data:o.g.storage("appInstanceList")}}]}}}),o.g.component({httpDoc:function(){return{"div.w3-container":[{h1:function(){return"Http"}},{"component:text":{text:"Http class implements the XMLHttpRequest and Fetch. If the browser supports Promise then promise implementation of the XMLHttpRequest is used otherwise the\n            request is made without the Promise. Such cases wont affect on syntax and it does not require any actions from the user.\n            However in order to use Fetch the user must explicitly call Http.fetch()... This is because Fetch interface is quite different to\n            the XMLHttpRequest and not all older browsers support Fetch."}},{dataTable:{key:"httpList",data:o.g.storage("httpList")}}]}}}),o.g.component({routerDoc:function(){return{"div.w3-container":[{h1:function(){return"Router"}},{paragraph:[{sline:{text:"Router class takes a root element in which it will render other route elements. Find out how to use the Router go to: "}},{navLink:{href:"/rme/router-explained",text:"Router Explained"}},{sline:{text:"."}}]},{dataTable:{key:"routerList",data:o.g.storage("routerList")}}]}}}),o.g.component({elemDoc:function(){return{"div.w3-container":[{h1:function(){return"Elem"}},{paragraph:[{sline:{text:"Elem class is a wrapper class for HTMLDocument element JavaScript object. This object constructor\n                takes one parameter that can be either type of a string or a HTMLDocument. If the parameter is type of the string\n                then a new HTMLDocument of that type will be created otherwise if the type is the HTMLDocument then\n                that HTMLDocument will be wrapped with this Elem instance and new element wont be created. All setter methods and event listener\n                methods will return an instance of this class which enables chaining of methods that makes code even more compact.\n                For more information go to: "}},{navLink:{href:"/rme/elements-explained",text:"Elements Explained"}},{sline:{text:"."}}]},{dataTable:{key:"elemList",data:o.g.storage("elemList")}}]}}}),o.g.component({templateDoc:function(){return{"div.w3-container":[{h1:function(){return"Template"}},{"component:text":{text:"Template class reads a JSON format notation and creates an element tree from it.\n            The Template class has only one public method resolve that takes the template as parameter and returns\n            the created element tree."}},{dataTable:{key:"templateList",data:o.g.storage("templateList")}}]}}}),o.g.component({treeDoc:function(){return{"div.w3-container":[{h1:function(){return"Tree"}},{"component:text":{text:"Tree class reads the HTML Document Tree and returns elements found from there. The Tree class does not have\n            HTML Document Tree editing functionality except setTitle(title) method that will set the title of the HTML Document."}},{"component:text":{text:'Majority of the methods in the Tree class will return found elements wrapped in an Elem instance as it offers easier\n            "operation functionalities.'}},{dataTable:{key:"treeList",data:o.g.storage("treeList")}}]}}}),o.g.component({messagesDoc:function(){return{"div.w3-container":[{h1:function(){return"Messages"}},{paragraph:[{sline:{text:"Messages class handles internationalization. The class offers public methods that enable easy using of translated content.\n                Elem and Template classes have messages functionality integrated. Read how to use the Messages in here: "}},{navLink:{href:"/rme/messages-explained",text:"Messages Explained"}},{sline:{text:"."}}]},{dataTable:{key:"messagesList",data:o.g.storage("messagesList")}}]}}}),o.g.component({cookieDoc:function(){return{"div.w3-container":[{h1:function(){return"Cookie"}},{"component:text":{text:"Cookie interface offers an easy way to get, set or remove cookies in application logic. The Cookie interface handles Cookie objects under the hood. The cookie object may hold following values: "}},{code:{text:'{\n    name: "name",\n    value: "value",\n    expiresDate: "expiresDate e.g. Date.toUTCString()",\n    cookiePath: "cookiePath absolute dir",\n    cookieDomain: "cookieDomain e.g example.com",\n    setSecureBoolean: true|false\n}'}},{"component:text":{text:"The cookie object also has methods toString() and setExpired(). Notice that setExpired() method wont delete the cookie but merely\n            sets it expired. To remove a cookie you should invoke remove(name) method of the Cookie interface."}},{dataTable:{key:"cookie",data:o.g.storage("cookieList")}},{br:{}},{subTitle:{text:"CookieInstance"}},{dataTable:{key:"cookie2",data:[{name:"toString()",description:"Retuns string presentation of the cookie object."},{name:"setExpired()",description:"Sets the cookie expired. Will not delete the the cookie."}]}}]}}}),o.g.component({sessionDoc:function(){return{"div.w3-container":[{h1:function(){return"Session"}},{"component:text":{text:"Session class is a wrapper interface for the SessionStorage and thus provides get, set, remove and clear methods of the SessionStorage."}},{dataTable:{key:"session",data:o.g.storage("sessionList")}}]}}}),o.g.component({storageDoc:function(){return{"div.w3-container":[{h1:function(){return"Storage"}},{"component:text":{text:"Storage class is a wrapper interface for the LocalStorage and thus provides get, set, remove and clear methods of the LocalStorage."}},{dataTable:{key:"storage",data:o.g.storage("storageList")}}]}}}),o.g.component({utilDoc:function(){return{"div.w3-container":[{h1:function(){return"Util"}},{"component:text":{text:"General Utility methods."}},{dataTable:{key:"utilList",data:o.g.storage("utilList")}}]}}}),o.g.component({browserDoc:function(){return{"div.w3-container":[{h1:function(){return"Browser"}},{"component:text":{text:"Browser class contains all the rest utility functions which JavaScript has to offer from Window, Navigator, Screen, History, Location objects."}},{dataTable:{key:"browserList",data:o.g.storage("browserList")}}]}}}),o.g.component({keyDoc:function(){return{"div.w3-container":[{h1:function(){return"Key"}},{"component:text":{text:"Key class does not have any methods as it only contains key mappings for keyevent e.g."}},{tptext:{text:"Event handler function gets the 'event' parameter."}},{code:{text:"onKeyDown(function(event) {\n    if(event.key === Key.ENTER)\n    //do something.\n});"}},{dataTable:{key:"keyList",data:o.g.storage("keyList")}}]}}}),o.a.component({exampleViewer:function(e){var t=e.title.toLowerCase().replace(/ /g,""),n=[e.code,e.es6,e.es5].map(function(e,n){return{"div.w3-container.w3-padding":function(o){0===n&&o.setId(t),n>0&&o.addClasses("code"),n>0&&o.setText(e),0===n&&o.append(e.call())}}});return{div:{h3:{text:e.title},"div.w3-card-4":{"div.w3-bar.w3-border-bottom.w3-border-light-gray":["View","ES 6","ES 5"].map(function(t,n){return{viewerTab:{viewerRef:e.ref,selected:e.selected,text:t,idx:n}}}),"div.w3-container.w3-light-gray":n[e.selected]}}}}})(),o.g.component({viewerTab:function(e){return{"div.w3-bar-item.w3-button.w3-hover-light-gray":{class:e.idx===e.selected?"w3-light-gray":"",text:e.text,onClick:function(){e.idx!==e.selected&&o.a.setState(e.viewerRef,{selected:e.idx})}}}}}),o.a.component({lister:function(e){return{ul:e.list}}})(),o.g.component({form:function(e){return{div:{"label[for=fname]":{text:"First name"},"input#fname[type=text][name=fname][placeholder=First name]":{onInput:e.input},br:{},"label[for=lname]":{text:"Last name"},"input#lname[type=text][name=lname][placeholder=Last name]":{onInput:e.input}}}}}),o.a.component({statefulHeader:function(e){return{h5:function(){return"Welcome ".concat(e.fname," ").concat(e.lname)}}}})(),o.a.component({fTable:function(e){var t={border:"1px solid #000000",borderCollapse:"collapse"};return o.e.resolve({table:e.data.map(function(e){return{tr:[{td:{text:e.abr,styles:t}},{td:{text:e.name,styles:t}}]}})}).setStyles(t)}})(),o.g.component({tableData:function(){for(var e=[],t="AF - AFGHANISTAN;    AL - ALBANIA;    DZ - ALGERIA;    AS - AMERICAN SAMOA;    AD - ANDORRA;    AO - ANGOLA;    AI - ANGUILLA;    AQ - ANTARCTICA;    AG - ANTIGUA AND BARBUDA;    AR - ARGENTINA;    AM - ARMENIA;    AW - ARUBA;    AU - AUSTRALIA;    AT - AUSTRIA;    AZ - AZERBAIJAN;    BS - BAHAMAS;    BH - BAHRAIN;    BD - BANGLADESH;    BB - BARBADOS;    BY - BELARUS;    BE - BELGIUM;    BZ - BELIZE;    BJ - BENIN;    BM - BERMUDA;    BT - BHUTAN;    BO - BOLIVIA;    BA - BOSNIA AND HERZEGOVINA;    BW - BOTSWANA;    BV - BOUVET ISLAND;    BR - BRAZIL;    IO - BRITISH INDIAN OCEAN TERRITORY;    BN - BRUNEI DARUSSALAM;    BG - BULGARIA;    BF - BURKINA FASO;    BI - BURUNDI;    KH - CAMBODIA;    CM - CAMEROON;    CA - CANADA;    CV - CAPE VERDE;    KY - CAYMAN ISLANDS;    CF - CENTRAL AFRICAN REPUBLIC;    TD - CHAD;    CL - CHILE;    CN -CHINA;    CX -CHRISTMAS ISLAND;    CC - COCOS (KEELING) ISLANDS;    CO - COLOMBIA;    KM - COMOROS;    CG - CONGO;    CD - CONGO, THE DEMOCRATIC REPUBLIC OF;    CK - COOK ISLANDS;    CR - COSTA RICA;    CI - CÔTE D'IVOIRE;    HR - CROATIA;    CU - CUBA;    CY - CYPRUS;    CZ - CZECH REPUBLIC;    DK - DENMARK;    DJ - DJIBOUTI;    DM - DOMINICA;    DO - DOMINICAN REPUBLIC;    EC - ECUADOR;    EG - EGYPT;    SV - EL SALVADOR;    GQ - EQUATORIAL GUINEA;    ER - ERITREA;    EE - ESTONIA;    ET - ETHIOPIA;    FK - FALKLAND ISLANDS (MALVINAS);    FO -FAROE ISLANDS;    FJ - FIJI;    FI - FINLAND;    FR - FRANCE;    GF - FRENCH GUIANA;    PF - FRENCH POLYNESIA;    TF - FRENCH SOUTHERN TERRITORIES;    GA - GABON;    GM - GAMBIA;    GE - GEORGIA;    DE - GERMANY;    GH - GHANA;    GI - GIBRALTAR;    GR - GREECE;    GL - GREENLAND;    GD - GRENADA;    GP - GUADELOUPE;    GU - GUAM;    GT - GUATEMALA;    GN - GUINEA;    GW - GUINEA-BISSAU;    GY - GUYANA;    HT - HAITI;    HM - HEARD ISLAND AND MCDONALD ISLANDS;".split(";"),n=0;n<t.length;){var o=t[n].split("-");o[0]&&o[1]&&e.push({abr:o[0].trim().toLowerCase(),name:o[1].trim().toLowerCase()}),n++}return e}}),o.g.component({basics:function(){return{div:[{h1:{text:"Basics"}},{exampleViewer:{selected:0,key:"listingExample",title:"Todo List Example",code:function(){var e=[{li:{text:"What should I do today?"}}];return{div:{"input[placeholder=Type & Press Enter to Add]":{onKeyDown:function(t){t.key===o.c.ENTER&&(e.push({li:{text:t.target.value}}),t.target.value="",o.a.setState({lister:{list:e}}))}},lister:{list:e}}}},es6:'let list = [{li: {text: "What should I do today?"}}];\n\nreturn {\n    div: {\n        "input[placeholder=Type & Press Enter to Add]": {onKeyDown: (event) => {\n            if(event.key === Key.ENTER) {\n                list.push({li: {text: event.target.value}});\n                event.target.value = "";\n                App.setState({lister: {list: list}});\n            }},\n        lister: {list: list}\n    }\n}\n\nApp.component({ lister: (props) => ({ ul: props.list }) })();',es5:'var list = [{li: {text: "What should I do today?"}}];\n\nreturn {\n    div: {\n        "input[placeholder=Type & Press Enter to Add]": {onKeyDown: function(event) {\n            if(event.key === Key.ENTER) {\n                list.push({li: {text: event.target.value}});\n                event.target.value = "";\n                App.setState({lister: {list: list}});\n            }\n        }},\n        lister: {list: list}\n    }\n}\n\nApp.component({ lister: function(props) {\n    return {ul: props.list}\n}})();'}},{exampleViewer:{selected:0,key:"formExample",title:"Form Example",code:function(){return{div:{statefulHeader:{fname:"",lname:""},"component:form":{input:function(e){var t=o.a.getState("statefulHeader");t[e.target.name]=e.target.value,o.a.setState({statefulHeader:t})}}}}},es6:'return {\n    div: {\n        statefulHeader: {fname: "", lname: ""},\n        "component:form": {input: (event) => {\n            let state = App.getState("statefulHeader");\n            state[event.target.name] = event.target.value;\n            App.setState({statefulHeader: state});\n        }}\n    }\n}\n\nApp.component({ statefulHeader: (props) => (\n    { h5: {text: `Welcome ${props.fname} ${props.lname}`})\n})();\n\nRME.component({ form: (props) => ({\n    div: {\n        "label[for=fname]": {\n            text: "First name"\n        },\n        "input#fname[type=text][name=fname][placeholder=First name]": {\n            onInput: props.input\n        },\n        br: {},\n        "label[for=lname]": {\n            text: "Last name"\n        },\n        "input#lname[type=text][name=lname][placeholder=Last name]": {\n            onInput: props.input\n        }\n    }\n})});',es5:'return {\n    div: {\n        statefulHeader: {fname: "", lname: ""},\n        "component:form": {input: function(event) {\n            var state = App.getState("statefulHeader");\n            state[event.target.name] = event.target.value;\n            App.setState({statefulHeader: state});\n        }}\n    }\n}\n\nApp.component({ statefulHeader: function(props) {\n    return {\n        h5: {text: Welcome "+props.fname + " " +props.lname}\n    }\n}})();\n\nRME.component({ form: function() {\n    return {\n        div: {\n            "label[for=fname]": {\n                text: "First name"\n            },\n            "input#fname[type=text][name=fname][placeholder=First name]": {\n                onInput: this.input\n            },\n            br: {},\n            "label[for=lname]": {\n                text: "Last name"\n            },\n            "input#lname[type=text][name=lname][placeholder=Last name]": {\n                onInput: this.input\n            }\n        }\n    }\n}});'}},{exampleViewer:{selected:0,key:"tableFiltering",title:"Filter Table Example",code:function(){return{div:{"input[type=text][placeholder=Type to Filter]":{onInput:function(e){o.a.setState({fTable:{data:o.g.component("tableData").filter(function(t){return t.name.search(e.target.value)>-1})}})}},fTable:{data:o.g.component("tableData")}}}},es6:'return {\n    div: {\n        "input[type=text][placeholder=Type to Filter]": {\n            onInput: (event) => {\n                App.setState({fTable: {\n                    data: RME.component("tableData").filter(val => val.name.search(event.target.value) > -1)}\n                });\n            }\n        },\n        fTable: {data: RME.component("tableData")}\n    }\n}\n\nApp.component({ fTable: (props) => {\n    var borders = {border: "1px solid #000000", borderCollapse: "collapse"};\n    return Template.resolve({\n        table: props.data.map(function(val) {\n            return {tr: [\n                {td: {text: val.abr, styles: borders}},\n                {td: {text: val.name, styles: borders}}\n            ]}\n        })\n    }).setStyles(borders);\n}})();',es5:'return {\n    div: {\n        "input[type=text][placeholder=Type to Filter]": {\n            onInput: function(event) {\n                App.setState({fTable: {\n                    data: RME.component("tableData").filter(function(val) {\n                        return val.name.search(event.target.value) > -1\n                    })}\n                });\n            }\n        },\n        fTable: {data: RME.component("tableData")}\n    }\n}\n\nApp.component({ fTable: function(props) {\n    var borders = {border: "1px solid #000000", borderCollapse: "collapse"};\n    return Template.resolve({\n        table: props.data.map(function(val) {\n            return {tr: [\n                {td: {text: val.abr, styles: borders}},\n                {td: {text: val.name, styles: borders}}\n            ]}\n        })\n    }).setStyles(borders);\n}})();'}}]}}}),o.g.component({simpleExample:function(){return{"div.w3-container":[{h1:function(){return"Put things together"}},{Text:{text:"Let's create a small example application where we put basic aspects of the RME library together."}},{tptext:{text:"Example index.html."}},{code:{text:'<!DOCTYPE html>\n<html>\n<head>\n    <script src="rme.es5.min.js"><\/script>\n    <title>App page</title>\n</head>\n<body>\n    <div id="app"></div>\n</body>\n</html>'}},{tptext:{text:"Example index.js."}},{code:[{Comment:{text:"//First lets create a default application."}},{SL:{text:"App.root('#app').create({\n    div: {\n        'div.menu': [\n            {a: {href: 'en', text: 'English', onClick: Messages.lang}},\n            {a: {href: 'fi', text: 'Suomi', onClick: Messages.lang}},\n            {a: {href: '/', text: 'Page 1', onClick: Router.navigate}},\n            {a: {href: '/page2', text: 'Page 2', onClick: Router.navigate}}\n        ],\n        'div#root': {}\n    }\n});"}},{br:{}},{Comment:{text:"//Tell the RME that we want to use these components together."}},{span:function(){return"RME.use({"}},{br:{}},{span:function(){return"    router: Router,"}},{"span.w3-text-green":function(){return"      //Give static reference"}},{br:{}},{span:function(){return"    messages: Messages,"}},{"span.w3-text-green":function(){return"  //Give static reference"}},{br:{}},{span:function(){return"    app: App.get(),"}},{"span.w3-text-green":function(){return"      //Give default app instance"}},{br:{}},{span:function(){return"});"}},{br:{}},{br:{}},{Comment:{text:"//Then let's create a router."}},{SL:{text:"Router.url(true).root('#root').routes([\n    {route: '/', elem: 'Page1'},\n    {route: '/page2', elem: 'Page2'}\n]);"}},{br:{}},{Comment:{text:"//For this example we hard code some example messages."}},{SL:{text:"RME.storage('en', {\n    'message.hello.world': 'Hello World Page 1',\n    'message.page2':'Page 2'\n});"}},{SL:{text:"RME.storage('fi', {\n    'message.hello.world': 'Terve Maailma Sivu 1',\n    'message.page2':'Sivu 2'\n});"}},{br:{}},{Comment:{text:"//Then define a message loader function."}},{SL:{text:"Messages.load((locale, setMessages) => setMessages(RME.storage(locale)));"}},{Comment:{text:"//And load the messages."}},{SL:{text:"Messages.lang('en');"}},{br:{}},{Comment:{text:"//Now we create page components for the router."}},{SL:{text:"RME.component({Page1: () => ({div: {span: () => 'message.hello.world'}}) });"}},{SL:{text:"RME.component({Page2: () => ({div: {span: () => 'message.page2'}}) });"}}]}]}}}),o.g.component({appsEx:function(){return{"div.w3-container":[{h1:function(){return"Application Explained"}},{Text:{text:"Since RME version 1.2.0 onwards the RME has the App class which begins the RME application. The App class should\n            be used to create a RME application as it enables automatic shadow tree rendering."}},{tptext:{text:"Let's create a default application."}},{code:{text:"App.create({\n    div: {\n        span: () => 'Hello World'\n    }\n});"}},{paragraph:[{S:{text:"Above code example will create a default application, that is automatically inserted inside the Body.\n            The Body should not have other child elements otherwise it might lead to weird behaviour when the app is re-rendering.\n            In order to avoid such cases let's create a default app with specified root element."}},{B:{text:" Root element should always be empty."}}]},{tptext:{text:"Example HTML page."}},{code:{text:'<!DOCTYPE html>\n<html>\n<head>\n    <script src="rme.es5.min.js"><\/script>\n    <title>App page</title>\n</head>\n<body>\n    <div id="app"></div>\n</body>\n</html>'}},{tptext:{text:"Default application with specified root element."}},{code:{text:"App.root('#app').create({\n    div: {\n        span: () => 'Hello World'\n    }\n});"}},{Text:{text:'The above application would automatically be inserted inside the div with an id "app".'}},{subTitle:{text:"Named Application"}},{paragraph:[{S:{text:"Named applications are applications that have a name. Naming applications comes handy if\n            a page contains multiple applications. It is possible to create and have multiple applications\n            on the same page. "}},{B:{text:"Though an application inside an application is not recommended and might result to weird \n            behaviour."}}]},{tptext:{text:"Named application example"}},{code:{text:"App.name('demoApp').root('#demo').create({\n    div: {\n        h1: () => 'Demo app'\n    }\n});"}},{subTitle:{text:"Application components"}},{paragraph:[{S:{text:"Application components are statefull components as they have state attached\n            to them."}}]},{tptext:{text:"Example creates a statefull component for the default app"}},{code:{text:"App.component({defaultAppComponent: props => ({\n    div: {\n        text: 'Some Text'\n    }\n})})();"}},{paragraph:[{S:{text:"When appName is not defined "}},{B:{text:"..();"}},{S:{text:" then the component is created for the default application."}}]},{tptext:{text:"Example creates a statefull component for the demoApp"}},{code:{text:"App.component({demoComponent: props => ({\n    div: {\n        text: 'Some Text'\n    }\n})})('demoApp');"}},{paragraph:[{S:{text:"When appName is given "}},{B:{text:"..('demoApp');"}},{S:{text:" then the component is created for the particular application."}}]},{paragraph:[{S:{text:"More about how components work at: "}},{navLink:{href:"/rme/components-explained",text:"Components Explained"}},{S:{text:"."}}]},{subTitle:{text:"Application state"}},{Text:{text:"Application is re-rendered after each state update."}},{tptext:{text:"Get state of a component from the default app."}},{code:{text:"App.getState('compRefName');"}},{tptext:{text:"Set state for a component on the default app."}},{code:{text:"App.setState('compRefName', state);"}},{code:{text:"App.setState({compRefName: state, otherRefName: otherState});"}},{tptext:{text:'Get state of a demoComponent from the named app "demoApp".'}},{code:{text:"App.get('demoApp').getState('demoComponent');"}},{tptext:{text:'Set state of a demoComponent on the anmed app "demoApp".'}},{code:{text:"App.get('demoApp').setState('demoComponent', state);"}},{code:{text:"App.get('demoApp').setState({demoComponent: state, someOtherComp: otherState});"}}]}}}),o.g.component({components:function(){return{"div.w3-container":[{h1:"Components explained"},{"component:text":"Components are resusable functions that are stored in to the RME instance by a name. The components might be an UI component or implement any kind of application logic.\n            Components are encouraged to have an unique name definition as latter defintion of the same name overrides previous."},{paragraph:[{S:"Moreover if component name equals to the HTML 5 tag name or an attribute name then the component must be explicitly invoked when using components with templates. See "},{navLink:{href:"/rme/templates-explained",text:"Templates Explained"}},{S:"."}]},{tptext:"Stateless components are created by invoking a RME.component({..}); function."},{dcode:{es6:"RME.component({ statelessComponent: props => ({\n    div: {span: () => 'Hello World'}\n})});",es5:"RME.component({ statelessComponent: function(props) {\n    return {div: {span: function() {return 'Hello World'}}}\n}});"}},{tptext:"Statefull components are created by invoking a App.component({..})(appName); function."},{dcode:{es6:"App.component({ statefullComponent: props => ({\n    div: {span: () => 'Hello World'}\n})})();",es5:"App.component({ statefullComponent: function(props) {\n    return {div: {span: function() {return 'Hello World'}}}\n}})();"}},{paragraph:[{S:"In an example above notice that there is not appName filled in instead the name is left empty. Reason being\n                that when the appName is not filled in the default app is used. More about Applications at "},{navLink:{href:"/rme/app-explained",text:"Application Explained"}},{S:"."}]},{tptext:"Examples above would produce following."},{code:"<div>\n    <span>Hello World</span>\n</div>"},{subTitle:{text:"Life cycle functions of the components"}},{Text:"It is apossible to define two life cycle functions for each component."},{Text:"Let's assume that we had already created a LoginForm component and below would insert the component inside a template."},{tptext:"An example describing possible life cycle functions of the component."},{code:"...\nLoginForm: {\n    onBeforeCreate: props => ...\n    onAfterCreate: (created, props) => ...\n}\n..."},{paragraph:[{ul:[{li:{B:"onBeforeCreate",S:" function is called before the component is created and receives the properties that the component will receive."}},{li:{B:"onAfterCreate",S:" function is called after the component is created and receives the returned value and the properties that the component received during creation."}}]}]},{subTitle:{text:"Stateless components & properties"}},{tptext:"Assume that we have a component used in a template and we pass properties to the component."},{code:"...awesomeButton: {\n    text: 'AwesomeButton',\n    idx: 0\n}...."},{tptext:{text:"Stateless component receiving properties."}},{dcode:{es6:"RME.component({ awesomeButton: props => ({\n    'div.button': {\n        text: props.text,\n        onClick: (event) => console.log(`Clicked button ${props.idx}`)\n    }\n})});",es5:"RME.component({ awesomeButton: function(props) {\n    return {\n        'div.button': {\n            text: props.text,\n            onClick: function(event) {\n                console.log('Clicked button ' + props.idx);\n            }\n        }\n    }\n}});"}},{subTitle:{text:"Statefull components & properties"}},{paragraph:[{S:"Statefull components have some predefinitions which are "},{B:"key"},{S:" and "},{B:"ref"},{S:"."}]},{"ul.w3-large":[{li:[{B:"key"},{S:" optional string value that will make the component state reference unique."}]},{li:[{B:"ref"},{S:" reference to the component state, is component name + key value."}]}]},{paragraph:[{S:"If a key is given to the statefull component then its state is made unique by the key value. As by default the component state is referenced by the name of the component."}]},{tptext:"Here is a simple example"},{code:"...{tabber: {\n    key: 'stateRef',\n    tabs: ['one','two'],\n    selected: 0\n}}"},{tptext:'Statefull component by design receives a property "ref" that is the reference to the component state.'},{dcode:{es6:"App.component({tabber: props => ({\n    div: props.tabs.map((tab, i) => ({\n        awesomeTab: {\n            tabberRef: props.ref,\n            name: tab,\n            idx: i,\n            selected: props.selected\n        }\n    }))\n})})();",es5:"App.component({tabber: function(props) {\n    return {\n        div: props.tabs.map(function(tab, i) {\n            return {\n                awesomeTab: {\n                    tabberRef: props.ref,\n                    name: tab,\n                    idx: i,\n                    selected: props.selected\n                }\n            }\n        });\n    }\n}})();"}},{Text:"In above example we pass the tabber component reference to its child component. This way the child component will know to which parent component it belongs and which state to manipulate."},{tptext:"AwesomeTab component could be something like this."},{dcode:{es6:"RME.component({awesomeTab: props => ({\n    'div.tab': {\n        class: props.selected === props.idx ? 'selectedTab' : '',\n        text: props.name,\n        onClick: (event) => props.selected !== props.idx\n            ? App.setState(props.tabberRef, {selected: props.idx})\n            : undefined\n    }\n})});",es5:"RME.component({awesomeTab: function(props) {\n    return {\n        'div.tab': {\n            class: props.selected === props.idx ? 'selectedTab' : '',\n            text: props.name,\n            onClick: function(event) {\n                props.selected !== props.idx\n                    ? App.setState(props.tabberRef, {selected: props.idx})\n                    : undefined\n            }\n        }\n    }\n}});"}},{Text:"The child component does not need to be a statefull component eventhough the parent component is. Infact it is better design that component state is\n            kept in the parent component."},{paragraph:[{S:"The tabber and the awesomeTab example life cycle would be following: The tab is clicked -> if not selected -> update the tabber state with newly selected index ->\n                application re-renders -> the awesomeTab component receives new properties -> the new properties contain newly selected index -> the tab is rendered selected according the received selected index."}]},{subTitle:{text:"RME.component get component usage"}},{tptext:"Components can also be retrieved using RME.component function though it is not usual to do so."},{code:"RME.component('someComponent', {prop1: 'some prop1', prop2: 'some prop2'});"}]}}}),o.g.component({messagesEx:function(){return{"div.w3-container":[{h1:function(){return"Messages Explained"}},{"component:text":{text:"Messages class handles internationalization. The class offers public methods that enable easy using of translated content.\n            The Elem and the Template classes have the Messages functionality integrated."}},{"component:text":{text:"Usage and initialization of the Messages class is relatively simple and straightforward.\n            In order not to hard code the default locale of the webpage, we could fist ask the server for a current locale. \n            When the locale is returned from the server. Then simply set the locale as the current locale.\n            After this we could load or choose the translated messages to use."}},{tptext:{text:"Following code clip could ask for a current locale from server and then set it to be used in the Messages class."}},{code:{text:"Http.get('/lang/').then(response => Messages.lang(response)});"}},{"component:text":{text:"Messages.load function is invoded right after the locale is set by invoking the Messages.lang function. \n            The load handler receives two parameters from which the first is the locale that was given by the function Messages.lang.\n            The second parameter is a function setMessages that receives either an array or an object of the next messages to be used."}},{tptext:{text:"Code clip below asks the server for the translated messages for the given locale and then uses the setMessage function to set the messages."}},{dcode:{es6:"Messages.load((locale, setMessages) => {\n    Http.get(locale).then(response => setMessages(response));\n});",es5:"Messages.load(function(locale, setMessages) {\n    Http.get(locale)\n        .then(function(response) {\n            setMessages(response);\n        });\n});"}},{tptext:{text:"Assuming that we already had loaded all the messages in advance then the load function could be something like this."}},{code:{text:"Messages.load((locale, setMessages) => setMessages(RME.storage(locale)));"}},{subTitle:{text:"Messages lifecycle"}},{"component:text":{text:"Lifecycle of the Messages is relatively simple."}},{tptext:{text:"Ivoking a function Messages.lang(locale)"}},{code:{text:"Messages.lang(localeString|event);"}},{"component:text":{text:"If a given parameter is an event then event.preventDefault() is invoked and a locale is ought resolve from a target of the event."}},{tptext:{text:"Will automatically invoke a loader function that is defined inside the Messages.load((locale, setMessages) => {..})."}},{code:{text:"Messages.load((locale, setMessages) => setMessages(..)));"}},{tptext:{text:"Invoking setMessages function will automatically change language of translated elements."}},{subTitle:{text:"Supported messages structure"}},{"component:text":{text:"The Messages class supports two kinds of message structures. One is an object that contains key value pairs and the second is an array that contains\n            objects that have key value pair."}},{tptext:{text:"The object structure"}},{code:{text:"var messages_en_obj = {\n    'page.hello.world': 'Hello World',\n    'page.sample.text1': 'Example text1',\n    'page.sample.text2': 'Here is a long text',\n    'page.param.example': 'Hello {0} {1}, Welcome {2}'\n}"}},{tptext:{text:"The array structure"}},{code:{text:"var messages_en = [\n    {'page.hello.world': 'Hello World'},\n    {'page.sample.text1': 'Example text1'},\n    {'page.sample.text2': 'Here is a long text'},\n    {'page.param.example': 'Hello {0} {1}, Welcome {2}'}\n];"}},{"component:text":{text:"Translated content also supports message parameters. The parameters are marked with an index number starting from\n            zero (0) inside the curly braces e.g. {0}."}},{subTitle:{text:"Using the Messages with the Elem and the Template"}},{"component:text":{text:"The Elem and the Template objects have integrated translated messages capability inside."}},{tptext:{text:"Templates have the message attribute for the translated content."}},{code:{text:'Template.resolve({\n    p: {\n        message: "page.hello.world"\n    }\n});'}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello World</p>"}},{"component:text":{text:"Now lets try using the message parameters."}},{code:{text:'Template.resolve({\n    p: {\n        message: "page.param.example{sir}{Richard}{to Finland.}"\n    }\n});'}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}},{line:{}},{"component:text":{text:"We can also use the message keywords when using function in the template."}},{tptext:{text:"Now let's define a translated template."}},{code:{text:"Template.resolve({\n    p: () => 'page.param.example{sir}{Richard}{to Finland.}'\n});"}},{tptext:{text:"The code above will result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}},{line:{}},{"component:text":{text:"We could use the translated content on the Elem object also but usually this is not the case."}},{tptext:{text:"Assuming that the messages above are in use. We could create an element that would print the translated content found by a message key."}},{code:{text:"new Elem('p').message('page.hello.world');"}},{tptext:{text:"The code clip above would cause the following element be created."}},{code:{text:"<p>Hello World</p>"}},{"component:text":{text:"Lets try the same using the message parameters."}},{code:{text:"new Elem('p').message('page.param.example', 'sir', 'Richard', 'to Finland.');"}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}}]}}}),o.g.component({storageEx:function(){return{"div.w3-container":[{subTitle:{text:"RME storage explained"}},{"component:text":{text:"RME storage is a RME global instance storage in which data is stored using a appropriate method. \n            You should not confuse the RME storage with a Storage class that is the LocalStorage interface."}},{"paragraph.w3-text-teal":[{sline:{text:"Method saves a value"}},{iline:{text:" bar "}},{sline:{text:"with a key"}},{iline:{text:" foo "}},{sline:{text:"into the RME global storage."}}]},{code:{text:"RME.storage('foo', 'bar');"}},{paragraph:{color:"w3-text-teal",lines:[{sline:{text:"Method gets the saved "}},{iline:{text:"bar"}},{sline:{text:" value from the RME global instance storage with the key "}},{iline:{text:"foo"}},{sline:{text:"."}}]}},{code:{text:"RME.storage('foo');"}},{"component:text":{text:"Remember if different data is saved to the RME storage with same key then the data is overridden."}},{"component:text":{text:"Sometimes it might come very handy to be able to notify or do some specific action after new data is saved to the RME instance storage. \n            This is possible by creating a onStorageChange(..) listener function."}},{tptext:{text:"Following method is invoded if defined and it automatically gets new storage state as a parameter."}},{dcode:{es6:"RME.onStorageChange(newStorageState => {\n    //do some action after updating the storage.\n});",es5:"RME.onStorageChange(function(newStorageState) {\n    //do some action after updating the storage.\n});"}}]}}}),o.g.component({rmeEx:function(){return{div:{"div.w3-container":[{h1:function(){return"RME explained"}},{paragraph:[{sline:{text:"The RME offers functions such as component, script and storage. More about components in "}},{navLink:{href:"/rme/components-explained",text:"Components Explained"}},{sline:{text:". Information how an application should be started on RME version 1.2.0 onwards is here: "}},{navLink:{href:"/rme/app-explained",text:"Application Explained"}},{sline:{text:"."}}]},{tptext:{text:"Prior to RME version 1.2.0 the application was started using these two functions."}},{"ul.w3-large":[{li:function(){return"The RME.run() is run immediately when defined. If multiple run() functions are defined they are run in definition order."}},{li:function(){return"The RME.ready() is run after the Body is ready. If multiple ready() functions are defined the latter definition is run."}}]},{subTitle:{text:"RME use explained"}},{paragraph:[{S:{text:"RME.use(..) function receives one configuration object that simply tells the RME to use\n                    configured classes together. The configuration object has three optional parameters "}},{B:{text:"router"}},{S:{text:", "}},{B:{text:"messages"}},{S:{text:" and "}},{B:{text:"app"}},{S:{text:"."}}]},{"ul.w3-large":[{li:{B:{text:"router "},S:{text:"takes static Router reference."}}},{li:{B:{text:"messages "},S:{text:"takes static Messages reference."}}},{li:{B:{text:"app "},S:{text:"takes Application instance reference."}}}]},{tptext:{text:"Following code clip will configure the RME to use Router, Messages and a default Application instance together."}},{code:{text:"RME.use({\n    router: Router,\n    messages: Messages,\n    app: App.get()\n});"}},{subTitle:{text:"RME script explained"}},{"component:text":{text:"RME script function imports an appropriate script file into the head. This is not needed when working on NPM based projects."}},{tptext:{text:"Following line would import a script file into the head."}},{code:{text:"RME.script('resources/myScript.js')"}}],storageEx:{}}}}}),o.g.component({httpEx:function(){return{"div.w3-container":[{h1:function(){return"Http explained"}},{"component:text":{text:"Http is an interface that offers easy to use method to create asynchronous requests to server. The Http interface implements XMLHttpRequest and Fetch interfaces and adds\n            some easy to use features on top of them. By default the Http uses XMLHttpRequest with Promise if supported by browser otherwise the Promise is not used.\n            Using the Promise happens under the hood so if the browser does not support the Promise it wont affect to user anyhow and it does not affect on syntax. The user might not even\n            notice that where the Http uses the Promise or not."}},{"component:text":{text:"In order to use Fetch however the user must explicitly call the Http.fetch().. functions and then the Fetch is used. This is because the Fetch interface is not directly\n            compatible with the XMLHttpRequest. Also the Fetch is not supported by older browsers."}},{"component:text":{text:"The Http interface by default uses Content-Type application/json. Which means that posted and retrived data is automatically parsed and stringified.\n            When an object is given as data parameter it will be stringified by default and response objects will be parsed to JSON objects by default."}},{"component:text":{text:"For example. Lets assume that we have some data in a variable called state and we want to posit the data to server. The server will also return the updated data which will then be\n            stored into the RME instance storage for later use."}},{tptext:{text:"Using XMLHttpRequest to post the data to server."}},{dcode:{es6:'Http.post("/example/data/", state)\n    .then(response => RME.storage("data", response))\n    .catch(error => console.log(error));',es5:'Http.post("/example/data/", state)\n    .then(function(response) {\n        RME.storage("data", response);\n    }).catch(function(error) {\n        console.log(error);\n    });'}},{tptext:{text:"The same request using Http.fetch."}},{code:{text:"Http.fetch().post('/example/data/', state)\n    .then(success => {\n        if(success.ok)\n            success.json();\n        else\n            throw new Error(success);\n    }).then(response => RME.storage('data', response))\n        .catch(error => console.log(error));"}},{tptext:{text:"Using XMLHttpRequest to get the data from sever."}},{dcode:{es6:"Http.get('/example/data/')\n    .then(response => RME.storage('data', response))\n    .catch(error => console.log(error));",es5:"Http.get('/example/data/')\n    .then(function(response) {\n        RME.storage('data', response);\n    }).catch(function(error) {\n        console.log(error);\n    });"}},{tptext:{text:"The same request using Http.fetch."}},{code:{text:"Http.fetch().get(\"/example/data/\")\n    .then(success => {\n        if(success.ok)\n            success.json();\n        else\n            throw new Error(success);\n    }).then(response => {\n        RME.storage('data', response);\n    }).catch(error => {\n        console.log(error);\n    });"}}]}}}),o.g.component({elemsEx:function(){return{"div.w3-container":[{h1:function(){return"Elements explained"}},{"component:text":{text:"Elements are renderable objects. Elem class is a wrapper object for HTMLDocument element.\n            Tree and Template classes use Elem class. The Elem class makes handling of the\n            HTMLDocument elements easier as it offers many easy to use features."}},{"component:text":{text:"Creating a new element is easy but when the element is created it is still not attached to the HTMLDocument tree."}},{tptext:{text:"Lets create an element div."}},{code:{text:"new Elem('div');"}},{"component:text":{text:"Since the div without content wont be visible we can add an element p inside the div."}},{tptext:{text:"Lets create an element p inside the div and give some text for the p."}},{code:{text:"new Elem('div').append(new Elem('p').setText('this is a test'));"}},{"component:text":{text:"The elements needs to be attached to the HTMLDocument tree in order to show up on the HTML page."}},{tptext:{text:"Now we attach the div and the p to the Body."}},{code:{text:"Tree.getBody().append(new Elem('div').append(new Elem('p').setText('this is a test')));"}},{paragraph:[{sline:{text:"Eventhough this way to create and attach an element to the Body is relatively simple and nice.\n                It still might become quite messy if each element is created and attached like this.\n                In order to avoid too many variables and references there is a class Template to come to rescure. More about templates in "}},{navLink:{href:"/rme/templates-explaine",text:"Templates Explained"}},{sline:{text:"."}}]},{"component:text":{text:"All setter methods that does not explicitly return some value\n            will return an Elem instance. This enables method chaining and therefore compact code."}},{tptext:{text:"Method chaining illustrated."}},{code:{text:"new Elem('p').setId('myId').addClasses('class1 class2').setText('Some text here...');"}},{subTitle:{text:"Event handling"}},{"component:text":{text:"Elem objects only support one event handling method for each event type that it might support.\n            An event handling method will get one parameter that is an event that occured on the element."}},{tptext:{text:"Event handler method is created as follows."}},{dcode:{es6:"new Elem('button').onClick(event => Elem.wrap(event.target).display(false));",es5:"new Elem('button').onClick(function(event) {\n    Elem.wrap(event.target).display(false);\n});"}},{subTitle:{text:"Extend ES 5"}},{"component:text":{text:"One very special function of the Elem class is an extend() function. This function does the ES5 standard extension to a current instance of the Elem\n            class. This function comes very handy when ES 5 is used and there is a need for some extra functionalities to be added for the Elem class.\n            Because of this funtion there is no need to create an another object that wraps the Elem class in order to add new functionalies.\n            Instead you may directly add new functionalities to the Elem class.\n            However this function is not needed if the ES6 standard JavaScript is used as it already has usable extend functionality."}},{"component:text":{text:"For example, sometimes we would like to wrap all the logic inside a single component. So that the component offers some functionality functions\n            and the component itself will know how to handle data that is given to it. Also the same time the component would be renderable Elem object.\n            Keeping this in mind we could create a table element that knows how to handle data by itself."}},{tptext:{text:"First we need to create a table element and we also want to exend it in order to give more functionalities for it."}},{code:{text:'var table = new Elem("table").extend(Table);\n\nfunction Table {\n    this.update = function(data) {\n        this.render(createRows(data));\n    }\n}'}},{"component:text":{text:"Now you may notice that the Table function above is a child class of a super class Elem. Therefore in the Table function we can use all the\n            same functions that the Elem class has to offer. The this.render function is the super class function and the createRows() function is a\n            custom function that creates new rows for the table Elem to render."}},{"component:text":{text:"Now we are able to use the Table instance that itself knows how to handle the given data. Each time the data is changed or when it is\n            rendered the first time, we could invoke the function update(data) that creates the table rows and then it would invoke the function render from the\n            Elem class that will render the created table rows."}},{tptext:{text:"Assuming we have data to render the first time or even after the data has changed. \n            We can invoke the Table instance function update that will handle the rest."}},{code:{text:"table.update(dataArray);"}},{subTitle:{text:"Render"}},{"component:text":{text:"One more thing to mention about is the render() function. You should not confuse this function to React.render or\n            some other JavaScript framework that does render from top to bottom.\n            The render function of the Elem class simply removes old state form an element and then appends new state into the element. \n            If the state is not changed then it wont be re-rendered.\n            The render function should be used wisely as it is heavier operation than append or remove.\n            It can be used in almost all circumstances but it does not suit in all situations.\n            Many times use of append or remove is more than enough. The render function suits to dynamically change content of a single container.\n            Also the render function only renders other Elem objects."}},{"component:text":{text:"Lets assume we have an element ul that renders li elements."}},{tptext:{text:"Lets first create an array of li elements."}},{code:{text:"let arrayOfLiElems = [new Elem('li').setText('text 1'), new Elem('li').setText('text 2'),....];"}},{tptext:{text:"Then we create an ul element and first time render the elements."}},{code:{text:"let ul = new Elem('ul').render(arrayOfLiElems);"}},{"component:text":{text:"Now lets assume that as a result of some action content of the array of li elements has changed."}},{tptext:{text:"Then we call the render function again and the changed content will show up on a page inside the element."}},{code:{text:"ul.render(arrayOfLiElems);"}}]}}}),o.g.component({routers:function(){return{"div.w3-container":[{h1:function(){return"Router explained"}},{"component:text":{text:"Router class takes a root element in which it will render other route elements. Using the Router is relatively simple but there are couple of things to mention about.\n            The Router has two implementations from which one implementation has to be choosen. One implementation is a hash based and the other is an url based."}},{paragraph:[{sline:{text:"Route object has four properties "}},{bline:{text:"route"}},{sline:{text:", "}},{bline:{text:"elem"}},{sline:{text:", "}},{bline:{text:"hide"}},{sline:{text:" and "}},{bline:{text:"scrolltop"}},{sline:{text:"."}}]},{code:{text:"{\n    route: 'url', *\n    elem: 'statelessComponentNameString|elemObject', *\n    hide: true|false|undefined,\n    scrolltop: true|false|undefined\n}"}},{paragraph:[{iline:{text:"Properties marked by asterix (*) are mandatory."}}]},{"ul.w3-large":[{li:[{S:{text:"The "}},{B:{text:"route"}},{S:{text:" property is type of string and holds the route URL."}}]},{li:[{S:{text:"The "}},{B:{text:"elem"}},{S:{text:" property is stateless component name or elem object. The property holds an object that will be rendered inside the root element."}}]},{li:[{S:{text:"The "}},{B:{text:"hide"}},{S:{text:" property is type of boolean and determines if the URL is hidden or not. More about hiding the URL further down."}}]},{li:[{S:{text:"The "}},{B:{text:"scrolltop"}},{S:{text:" property enables or disables auto-scroll behavior for a sigle route element."}}]}]},{paragraph:[{B:{text:"Do not use statefull components direcly as route elements. "}},{S:{text:"Statefull components may be a child component of stateless route element component."}}]},{tptext:{text:"Illustration of the route object."}},{code:{text:"{route: '/error', elem: 'errorPage', hide: true}"}},{"component:text":{text:"Router.routes() function will take an array of route objects that will define the routes that the Router listens. If a root is not set, then by\n            default the first index (0) of the array of route objects will be set as the root object in which all other route objects are rendered."}},{tptext:{text:"Following code clip illustrates setting up routes and using the Router.route function."}},{code:{text:"Router.url().routes([\n    {elem: '#root'},\n    {route: 'page1Url', elem: 'page1'}\n]);"}},{tptext:{text:"An alternative way to create routes."}},{code:{text:"Router.url().root('#rootApp').routes([\n    {route: 'page1Url', elem: 'page1Comp'}\n]);"}},{"component:text":{text:"The URL based and the hash based routing is generally supported. But manual URL based routing is only supported on HTML5 and newer.\n            This is because the manual URL based routing uses features that came along with the HTML5. If the manual URL based routing is used then\n            it will be also possible to hide the URL from the browsers address bar as mentioned below. In such cases the manual URL routing can be used in\n            earlier versions of the HTML because when the URL is hidden then it does not use the HTML5 functionalities to control the history state of a webpage."}},{subTitle:{text:"Scroll behavior"}},{paragraph:[{sline:{text:"Router has a function scroll(auto) that takes a boolean value which determines auto-scroll top default behavior. The "}},{bline:{text:"default"}},{sline:{text:" is "}},{bline:{text:"true"}},{sline:{text:". The default can be changed using the function. And the default behavior can be overriden for a single route element."}}]},{tptext:{text:"If wanted we could disable the default auto-scroll top behavior as follows."}},{code:{text:"Router.scroll(false)...."}},{tptext:{text:"If wanted we could disable the auto-scroll top behavior for a single element as follows."}},{code:{text:"{route: 'url', elem: 'component', scrolltop: false}\""}},{subTitle:{text:"Not found behavior"}},{paragraph:[{sline:{text:"Router also supports "}},{bline:{text:"not found"}},{sline:{text:" behavior through wild card syntax. The not found page is good to place the last because as it will match the rest possible cases."}}]},{tptext:{text:"Following route will be the last match if nothing else matches before this when placed as the last route in the routes array."}},{code:{text:"{route: '*', elem: 'notFound'}"}},{subTitle:{text:"URL based routing"}},{"component:text":{text:"The URL based routing defaults to the HTML feature that when pressing a link it will reload a new page. Thus default URL based routing functionality listens the url change on page load.\n            This suits well for static webpage environment. But the default functionality of links are not enough nor suitable to every place. The URL based routing\n            also has support for such cases."}},{tptext:{text:"To set up a default URL based routing is done as illustrated below."}},{code:{text:"Router.url().root('#root').routes([\n    {route: '/', elem: 'home'},\n    {route: '/page1', elem: 'page1'}\n]);"}},{tptext:{text:"To set up a single page application fashion URL based routing is done as illustrated below."}},{code:{text:"Router.url(true).root('#root').routes([\n    {route: '/', elem: 'home'},\n    {route: '/page1', elem: 'page1'}\n]);"}},{paragraph:[{sline:{text:"When a boolean parameter of the Router.url() function is set to"}},{iline:{text:" true, "}},{sline:{text:"then the Router uses a manual URL routing. When the manual routing is used then the user must also provide a way to\n            invoke a Router.navigate() function that will navigate to a next view. The Router.navigate() function has couple of parameter combinations which enables\n            a simple usage. The first parameter of the function may either be a string or an Event. If two parameters are given then they must be an Elem and an Event."}}]},{"component:text":{text:"The URL based routing also supports hiding the URL. This might be useful on some cases but if the URL is hidden, it wont be saved into the browser history either.\n            This means that it wont be possible to go back to the hidden URL page by pressing the back or the forward buttons of the browser.\n            Hidden URL based routing is only possible when the manual url based routing is used."}},{tptext:{text:"The following example shows how to create hidden routes."}},{code:{text:"Router.url(true).root('#root').routes([\n    {route: '/', elem: 'home'},\n    {route: '/page1', elem: 'page1'},\n    {route: '/page2', elem: 'page2', hide: true},\n    {route: '/error', elem: 'err', hide: true}\n]);"}},{"component:text":{text:"Moreover the URL based routing supports a wildcard URL routing. A wildcard is marked with an asterix (*) and it stands for any number of any character."}},{tptext:{text:"The wildcard URL route illustrated as follows."}},{code:{text:"Router.url(true).root('#root').routes([\n    {route: '/', elem: 'home'},\n    {route: '/page/*/info/*', elem: 'page'}\n]);"}},{tptext:{text:"Assuming that the manual URL based routing is used, an example menu could be as follows."}},{code:{text:"let menu = Template.resolve({\n    div: [\n        {a: {href: '/', text: 'Home', onClick: Router.navigate}},\n        {br: {}},\n        {a: {href: '/page1', text: 'Page1' onClick: Router.navigate}},\n        {br: {}},\n        {a: {href: '/page2', text: \"Page2\", onClick: Router.navigate}}\n        {br: {}},\n        {a: {href: '/page/settings/info/user', text: 'Page3', onClick: Router.navigate}}\n    ]\n});"}},{paragraph:[{sline:{text:"If the default URL based "}},{bline:{text:"(not manual) "}},{sline:{text:"routing is used then the custom onClick should not be used as the routing happens on page load."}}]},{subTitle:{text:"Hash based routing"}},{"component:text":{text:"The hash based routing is much more simple and straightforward to set up. To set it up just invoke a Router.hash() to choose the hash based routing.\n            No other configuration is needed. The hash based routing automatically listens hash change. You should not manually use a Router.navigate() when\n            the hash based routing is used as it will cause double rendering."}},{tptext:{text:"Following clip illustrates how to create the hash based routing."}},{code:{text:"Router.hash().root('#root').routes([\n    {route: 'home', elem: 'home'},\n    {route: 'page1', elem: 'page1'},\n    {route: 'page2', elem: page2'}\n]);"}},{"component:text":{text:"After the routing is set up, then only thing left is to create a menu that corresponds to the routes.\n            One thing to remember is that when the hash based routing is used then links that are ought to be routed should also start with hashtag."}},{tptext:{text:"Next segment creates a menu that has three links."}},{code:{text:"let menu = Template.resolve({\n    div: [\n        {a: {href: '#home', text: 'Home'}},\n        {br: {}},\n        {a: {href: '#page1', text: 'Page1'}},\n        {br: {}},\n        {a: {href: '#page2', text: 'Page2'}}\n    ]\n});"}},{"component:text":{text:"Hidden hash based routing is possible to but there is one thing to remember for such case. Hidden hash routes has to be manually navigated by\n            invoking the Router.navigate() function."}},{tptext:{text:"Basic implementation same as before except the hidden hash route."}},{code:{text:"Router.hash().root('#root').routes([\n    {route: 'home', elem: 'home'},\n    {route: 'page1', elem: 'page1'},\n    {route: 'page2', elem: 'page2'}\n    {route: 'hidden', elem: hiddenElem, hide: true}\n]);"}},{tptext:{text:"Menu implementation is the same except the hidden hash route has to invoke the Router.navigate function as follows."}},{code:{text:"let menu = Template.resolve({\n    div: [\n        {a: {href: '#home', text: 'Home'}},\n        {br: {}},\n        {a: {href: '#page1', text: 'Page1'}},\n        {br: {}},\n        {a: {href: '#page2', text: 'Page2'}}\n        {br: {}},\n        {a: {href: '#hidden', text: 'Hidden', onClick: Router.navigate}}\n    ]\n});"}}]}}}),o.g.component({templates:function(){return{"div.w3-container":[{h1:"Templates explained"},{Text:"Template class reads a JSON format notation and creates an element tree from it."},{tptext:"Template.resolve() function will create an Elem instance element tree from a given JSON object."},{code:"Template.resolve({...});"},{Text:"The template object has to have a one root element from where it starts creation of an element tree. If a root element is not found Template resolve will throw an exeption."},{tptext:"An object notation supports basically all HTML 5 attributes plus some custom attributes. Some of the supported attributes are found below."},{code:"htmlTag: {\n    id: 'id',\n    name: 'name',\n    class: 'awesomeclass awesomefont',\n    text: 'basic text',\n    value: 'value',\n    content: '<p>html string/<p>',\n    tabIndex: 'tabIndex',\n    type: 'type',\n    src: 'src',\n    href: 'href',\n    editable|contenteditable: 'true|false',\n    placehoder: 'placeholder',\n    size: 'size',\n    checked: true|false,\n    disabled: true|false,\n    visible: true|false,\n    display: true|false,\n    draggable: true|false,\n    styles: {stylesObjectMap},\n    for: 'for',\n    message: 'message.hello.world',\n    target: e.g. '_blank',\n    title: 'title',\n    autofocus: true|false,\n    dataSomeDataKey: 'some data value',\n    plus many other attribute....\n}"},{subTitle:{text:"Simle template examples"}},{Text:"When using direct value implementations the set value is automatilly resolved and set to the element."},{tptext:"Direct value implementations"},{code:"...\ndiv: [\n    {span: 'message.key.hello.world'},\n    {span: 'Some static text'},\n    {span: 123}\n]\n..."},{Text:"The same works also for components. In such case the value is set for the root element of the component."},{code:"...\ndiv: {\n    AwesomeFont: 'front.page.welcome.text'\n}\n..."},{Text:"Components can also have classes and attributes defined directly. Again the root element of the component is updated."},{code:"...\ndiv: {\n    'AwesomeFont#fantasticId.big-font-class[style=display: block]': 'front.page.welcome.text'\n}\n..."},{Text:"When using function implementations the returned text or number will automatically be resolved and set to the element."},{tptext:"Function implementation examples"},{code:"...\ndiv: {\n    'span.awesome-class1': => 'this is the text of the span'\n}\n..."},{Text:"By convention returned string value is resolved and determined that is it a message key or a normal string. If the string is a message key and Messages are defined and in use then\n            the key is ought to be resolved. If the key was not resolved then the key is returned. And if the string is not resolved as the message key then the string is directly\n            inserted as text."},{tptext:"The function implementation also supports returning a message key."},{code:"...\ndiv: {\n    'span.awesome-font': => 'front.page.welcome.user'\n}\n..."},{tptext:"Function implementations and givin the element as a parameter"},{dcode:{es6:"Template.resolve({\n    div: {\n        span: (e) => {\n            e.addClasses('awesome-class1 text-highlight');\n            e.setText('text of the span')\n        }\n    }\n});",es5:"//ES 5 functions can refer to 'this' or an appropriate elem that is received as an attribute\n\nTemplate.resolve({\n    div: {\n        span: function(span) {\n            this.addClasses('awesome-class1 text-highlight');\n            span.setText('text of the span')\n        }\n    }\n});"}},{br:{}},{dcode:{es6:"Template.resolve({\n    div: {\n        span: (e) => {\n            e.addClasses('awesome-class1 text-highlight');\n            return 'this is the text of the span'\n        }\n    }\n});",es5:"Template.resolve({\n    div: {\n        span: function() {\n            this.addClasses('awesome-class1 text-highlight');\n            return 'this is the text of the span'\n        }\n    }\n});"}},{Text:"Array implementations come handy when multiple elements of the same name are defined in a root\n                element."},{tptext:"Array implementation examples."},{code:"Template.resolve({\n    div: [\n        {div: {\n            text: 'the first child'\n        }},\n        {div: {\n            text: 'the second child'\n        }}\n    ]\n});"},{tptext:"Only way to give properties to array defined elements is to use string literals as follows."},{code:"...\n'div#id.class1.class2[attr1=vale][attr2=value]': [\n    {div: {\n        class: 'awesome-class1',\n        text: 'some text'\n    }\n    ......\n]\n..."},{subTitle:{text:"JSON limitations"}},{Text:"JSON objects can only have one property of the same name. This is why the array implementations\n                might come handy sometimes."},{tptext:"The following code illustrates the case where two elements of the same name are defined but\n                    only the latter element is rendered."},{code:"Template.resolve({\n    div: {\n        div: {\n            text: 'this is omitted'\n        },\n        div: {\n            text: 'this is shown'\n        }\n    }\n});"},{subTitle:{text:"Templates with components"}},{Text:"Components can be inserted inside the template easily and sometimes this will be the case. Reusable components inside the template makes creation of\n            complex structure easier."},{tptext:'Assuming that we would have already created a following component named "customSpan" that takes one property named "customText". The component implements a span element.'},{dcode:{es6:"RME.component({ customSpan: props => ({\n    span: {text: props.customText}\n})});",es5:"RME.component({ customSpan: function(props) {\n    return { \n        span: {text: props.customText}\n    }\n}});"}},{Text:"To use the component with the template simply call the name of the component and give properties of the component inside an object."},{code:"Template.resolve({\n    div: {\n        customSpan: {customText: 'this is the text of the component'}\n    }\n});"},{Text:"Other way of appending the component inside the template would be like this."},{dcode:{es6:"Template.resolve({\n    div: (e) => e.append({customSpan: {customText: 'this is the text of the component'}});\n});",es5:"Template.resolve({\n    div: function() {\n        this.append({customSpan: {customText: 'this is the text of the component'}});\n    }\n});"}},{P:[{B:'Please note that if the component name is either equal to HTML element or an object notation parameter name e.g. "text" \n                then in order to use such component the component must be explicitly called using a "component" keyword as follows.'}]},{"P.w3-text-teal":[{S:"A component named"},{B:" text "},{S:"is explicitly called using the component keyword."}]},{code:"Template.resolve({\n    'component:text': {\n        text: 'Some text...'\n    }\n});"},{paragraph:[{S:"More information about components in: "},{navLink:{text:"Components Explained",href:"/rme/components-explained"}},{S:"."}]}]}}}),o.a.root("#app").create({"div.w3-container.w3-margin":{"div.w3-row":[{"div.w3-container.w3-third.w3-card.w3.margin.top":{menu:{}}},{"div#root.w3-container.w3-twothird":{}}],footer:{}}}),o.d.url(!0).root("#root").routes([{route:"/rme/",elem:"home"},{route:"/rme/howto",elem:"basics"},{route:"/rme/app-explained",elem:"appsEx"},{route:"/rme/put-things-together",elem:"simpleExample"},{route:"/rme/templates-explained",elem:"templates"},{route:"/rme/router-explained",elem:"routers"},{route:"/rme/components-explained",elem:"components"},{route:"/rme/rme-explained",elem:"rmeEx"},{route:"/rme/elements-explained",elem:"elemsEx"},{route:"/rme/messages-explained",elem:"messagesEx"},{route:"/rme/http-explained",elem:"httpEx"},{route:"/rme/rme",elem:"rmeDoc"},{route:"/rme/app",elem:"appDoc"},{route:"/rme/http",elem:"httpDoc"},{route:"/rme/router",elem:"routerDoc"},{route:"/rme/template",elem:"templateDoc"},{route:"/rme/elem",elem:"elemDoc"},{route:"/rme/tree",elem:"treeDoc"},{route:"/rme/messages",elem:"messagesDoc"},{route:"/rme/cookie",elem:"cookieDoc"},{route:"/rme/session",elem:"sessionDoc"},{route:"/rme/storage",elem:"storageDoc"},{route:"/rme/util",elem:"utilDoc"},{route:"/rme/browser",elem:"browserDoc"},{route:"/rme/key",elem:"keyDoc"}]),o.g.use({router:o.d,app:o.a.get()})}});