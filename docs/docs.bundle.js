!function(e){function webpackJsonpCallback(t){for(var a,s,r=t[0],l=t[1],c=t[2],p=0,m=[];p<r.length;p++)s=r[p],Object.prototype.hasOwnProperty.call(n,s)&&n[s]&&m.push(n[s][0]),n[s]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(i&&i(t);m.length;)m.shift()();return o.push.apply(o,c||[]),checkDeferredModules()}function checkDeferredModules(){for(var e,t=0;t<o.length;t++){for(var a=o[t],s=!0,r=1;r<a.length;r++){var i=a[r];0!==n[i]&&(s=!1)}s&&(o.splice(t--,1),e=__webpack_require__(__webpack_require__.s=a[0]))}return e}var t={},n={0:0},o=[];function __webpack_require__(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,__webpack_require__),o.l=!0,o.exports}__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,n){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(__webpack_require__.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)__webpack_require__.d(n,o,function(t){return e[t]}.bind(null,o));return n},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="";var a=window.webpackJsonp=window.webpackJsonp||[],s=a.push.bind(a);a.push=webpackJsonpCallback,a=a.slice();for(var r=0;r<a.length;r++)webpackJsonpCallback(a[r]);var i=s;o.push([123,1]),checkDeferredModules()}({122:function(e){e.exports=JSON.parse('{"name":"rme-docs","version":"1.0.0","description":"Documentation project of the RME","main":"index.js","private":true,"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1","docs":"webpack-dev-server --open --config ./webpack/webpack.docs.js","buildDocs":"webpack --config ./webpack/webpack.build.docs.js","docServer":"node ./webpack/docserver.js"},"keywords":["RME","docs"],"author":"Jami Lu","license":"UNLICENSED","devDependencies":{"@babel/core":"^7.10.1","@babel/polyfill":"^7.10.1","@babel/preset-env":"^7.10.1","babel-loader":"^8.1.0","clean-webpack-plugin":"^1.0.1","copy-webpack-plugin":"^5.1.1","css-loader":"^2.1.1","file-loader":"^3.0.1","html-webpack-plugin":"^3.2.0","opn":"^5.5.0","style-loader":"^0.23.1","terser-webpack-plugin":"^2.3.6","webpack":"^4.43.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.11.0","webpack-merge":"^4.2.2"},"dependencies":{"rme.js":"^1.5.12"}}')},123:function(e,t,n){n(124),e.exports=n(319)},314:function(e,t,n){var o=n(315);"string"==typeof o&&(o=[[e.i,o,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n(317)(o,a);o.locals&&(e.exports=o.locals)},315:function(e,t,n){(e.exports=n(316)(!1)).push([e.i,'div.max-width1000 {\n    max-width: 1000px;\n}\n\ndiv.code, pre.code {\n    font-family: Consolas, "Courier new";\n    font-size: 14px;\n    overflow-x: auto;\n    white-space: pre;\n}\n\n/* div.fadeInT {\n    display: initial;\n    opacity: 1;\n    transition: opacity 2s;\n}\n\ndiv.fadeOutT {\n    display: none;\n    opacity: 0;\n    transition: opacity 2s;\n} */\n\ndiv.attribute-cols {\n    white-space: pre-wrap;\n}\n\nul li.menu-title {\n    padding: 8px 8px 8px 8px;\n}\n\ndiv.line {\n    height: 20px;\n}\n\ndiv.data-table-row:nth-child(2n+0) {\n    background-color: #EEEEEE;\n}\n\ndiv.fadeIn {\n    animation: in 2s;\n}\n\ndiv.fadeOut {\n    animation: out 2s;\n}\n\n@keyframes in {\n    from {opacity: 0;}\n    to {opacity: 1;}\n}\n\n@keyframes out {\n    from {opacity: 1;}\n    to {opacity: 0;}\n}',""])},319:function(e,t,n){"use strict";n.r(t);var o=n(0);n(314);o.h.run((function(){var e=[new Item("run(function)","Runs runnable function immediately. If multpile run functions are declared they will be invoked by the declaration order.","RME.run(function() {\n   //Some application code here. This runs immediately.\n   //Body is undefined in here unless this script\n   //is inserted or linked inside the body.\n});"),new Item("ready(function)","Runs runnable function when the Body is ready. If multiple ready functions are declared the latter one is invoked.",'RME.ready(function() {\n   Tree.get("#solution").append(new Elem("div").setText("Hello World"));\n});','new Elem("div").setText("Hello World").getContent();'),new Item("component(object|function|key, props)","Creates a component into the RME instance or gets the component from the RME instance.",'//Create a component named myComponent\nRME.component(function() { \n   return { \n\tmyComponent: function() { \n\t\t return new Elem("span").setText(this.x + this.y) \n\t}\n   } \n});\n\n//Get the created component named myComponent, give parameters to it\n//and append it into a Body. \nvar comp = RME.component("myComponent", {x: 10, y: 20})\nTree.getBody().append(comp);','RME.component(function() { return { myComponent: function() { return this.x + this.y} } }); RME.component("myComponent", {x: 10, y: 20});'),new Item("storage(key|key, value)","Save data to the RME global instance that can be shared in inside RME functions.",'//Save data into the RME instance storage\nRME.storage("mydata", {foo: "bar", bar: "foo"});\n\n//Get the saved data from the RME instance storage\nRME.storage("mydata");','RME.storage("mydata", {foo: "bar", bar: "foo"}); JSON.stringify(RME.storage("mydata"));'),new Item("onStorageChange(rmestate)","Callback listener to inform when the RME storage is changed. Implementation of this is optional.","RME.onrmestoragechange(function(newState) {\n   //When ever new data is saved using RME.storage(), then\n   //this will get invoked with new state given as parameter.\n});"),new Item("script(source, id, type, text, defer, crossOrigin, charset, async)","Import scripts on runtime. <b>Source</b> is <b>required</b> other attributes are optional. ",'//Call this function before run() or ready()\nRME.script("someScriptFile.js");'),new Item("hasComponent(name)","Function checks if a component with the given name exists and returns true if the component exist otherwise false"),new Item("use(config)","Function receives an object as a parameter that holds three properties router, messages and app. The function will autoconfigure the Router, the Messages and the App instance to be used as default.")],t=[new Item("name(name)","Function will set a name for an application. If the name is not set then a default name is used."),new Item("root(root)","Function will set a root for an application. If the root is not set then body is used by default."),new Item("create(object)","Function creates an application. The given parameter can either be a Template object or an Elem object. "),new Item("get(name)","Gets Application instance by name. If the name is empty then default application instance is retrieved."),new Item("setState(refName, state, update)","Function takes three parameters that enable setting state for components.\n        If only one parameter is given then the parameter must be an object or a function. \n        The object should define a component name and its values as follows. ({refName: {key: val, key: val}}) and\n        the function should return a object describing the component respectively.\n        If two parameters are given then the first parameter is a component name\n        and the value parameter should describe the component state object as follows. (refName, {key: val, key: val}).\n        The value parameter may also be a function that returns the component state object respectively.\n        The last parameter update is a boolean value that only if explicitly set to false then the app is not updated\n        after setting the state has occured.\n        This function will store the state into the default application state."),new Item("getState(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is given. Otherwise whole default application state is given."),new Item("isStateEmpty(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is checked. Otherwised default application state is checked. Returns true if state empty otherwise false."),new Item("clearState(refName, update)","Function takes two optional parameters. If refName is given then only a state of the component with the refName is cleared otherwise whole default application state is cleared. If update boolean is given then after clearing the state the application is refreshed."),new Item("mergeState(refName, state, update)","Function takes three parameters. If the first parameter is string then the second parameter must be an object or a function.\n        The first parameter refName is a component name and the second parameter is the state of the component as follows: (compName, {key: val, key: val})\n        or if the second parameter is a function then the function should return the changed state of the component in an object respectively.\n        If the first parameter is an object or a function then the second parameter is omitted. \n        In this case the object must contain a component name and the changed state of the component as follows: ({compName: {val: key, val: key}}).\n        If the first parameter is a function then the function should return the changed state of the component in an object respectively.\n        The state is stored into the default application state."),new Item("component(component)(appName)","Function creates a statefull component. The state of the component is stored in an application that this component is bound to. App name is optional and if not given the default application is used.")],n=[new Item("setState(refName, state, update)","Function takes three parameters that enable setting state for components.\n        If only one parameter is given then the parameter must be an object or a function. \n        The object should define a component name and its values as follows. ({refName: {key: val, key: val}}) and\n        the function should return a object describing the component respectively.\n        If two parameters are given then the first parameter is a component name\n        and the value parameter should describe the component state object as follows. (refName, {key: val, key: val}).\n        The value parameter may also be a function that returns the component state object respectively.\n        The last parameter update is a boolean value that only if explicitly set to false then the app is not updated\n        after setting the state has occured.\n        This function will store the state into this application instance state."),new Item("getState(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is given. Otherwise whole application state of this application instance is given."),new Item("isStateEmpty(refName)","Function takes one optional parameter. If refName is given then only a state of a component referred by the refName is checked. Otherwise whole application state of this application instance is checked. Returns true if state empty otherwise false."),new Item("clearState(refName, update)","Function takes two optional parameters. If refName is given then only a state of the component with the refName is cleared otherwise whole application state of this application instance is cleared. If update boolean is given then after clearing the state the application is refreshed."),new Item("mergeState(refName, state, update)","Function takes three parameters. If the first parameter is string then the second parameter must be an object or a function.\n        The first parameter refName is a component name and the second parameter is the state of the component as follows: (compName, {key: val, key: val})\n        or if the second parameter is a function then the function should return the changed state of the component in an object respectively.\n        If the first parameter is an object or a function then the second parameter is omitted. \n        In this case the object must contain a component name and the changed state of the component as follows: ({compName: {val: key, val: key}}).\n        If the first parameter is a function then the function should return the changed state of the component in an object respectively.\n        The state is stored into this application instance state."),new Item("refresh()","Refresh app. Usually not needed to call manually."),new Item("setRouter(router)","Set the app instance to use the router. Usually not needed to invoke. Use RME.use(..) instead.")],a=[new Item("get(url, contentType)","Does GET XMLHttpRequest using Promise if available. ContentType is optional parameter.",'Es6 function call =>\nHttp.get("someurl")\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.get("someurl")\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new Item("post(url, data, contentType)","Does POST XMLHttpRequest using Promise if available. Automatically stringifies data to JSON if available. Data, ContentType are optional.",'Es6 function call =>\nHttp.post("someurl", someDataObject)\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.post("someurl", someDataObject)\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new Item("put(url, data, contentType)","Does PUT XMLHttpRequest using Promise if available. Automatically stringifies data to JSON if available. Data, ContentType are optional.",'Es6 function call =>\nHttp.put("someurl", someDataObject)\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.put("someurl", someDataObject)\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new Item("delete(url, contentType)","Does DELETE XMLHttpRequest using Promise if available. ContentType is optional.",'Es6 function call =>\nHttp.delete("someurl")\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.delete("someurl")\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});'),new Item("do(config)","Does custom XMLHttpRequest according to given config parameter. {url: url, method: method, contentType: contentType, onProgress: onProgress, headers: {headersObject}, useFetch: boolean}","Es6 function call =>\nHttp.do({settings})\n   .then((response) => console.log(response.responseJSON))\n   .catch((error) => console.log(error.responseJSON));\n\nEs5 function call\nHttp.do({settings})\n   .then(function(response) {console.log(response.responseJSON)})\n   .catch(function(error) {console.log(error.responseJSON)});"),new Item("fetch().get(url, init)","Does Fetch GET request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().get("someurl").then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new Item("fetch().post(url, body, init)","Does Fetch POST request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().post("someurl", someDataObject).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new Item("fetch().put(url, body, init)","Does Fetch PUT request. Content-Type JSON is used by default. {init} is optional.",'Http.fetch().put("someurl", someDataObject).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new Item("fetch().delete(ulr, init)","Does Fetch DELETE request. Content-Type JSON is used by default. {init} is optinoal.",'Http.fetch().delete("someurl").then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});'),new Item("fetch().do(config)","Does Fetch custom request according to given config parameters. {url: url, method: method, contentType: contentType, init: {InitObject}}","Http.fetch().do({settings}).then(function(success) {\n   if(success.ok)\n      return success.json()\n   else\n      throw new Error(success)\n}).then(function(response) {console.log(response)})\n.catch(function(error) {console.log(error)});"),new Item("Http.JSON","application/json;charset=UTF-8"),new Item("Http.FORM_DATA","multipart/form-data"),new Item("Http.TEXT_PLAIN","text/plain")],s=[new Item("constructor(type)","Creates a new Elem object.",'new Elem("span");'),new Item("setText(text)","Set element text.",'new Elem("p").setText("text");'),new Item("getText()","Get element text."),new Item("getContet()","Get element content can be text or html.","elem.getContent();"),new Item("setContent(html)","Set element content can be text or html.",'new Elem("div").setContent("<b>bold text</b>");'),new Item("setValue(value)","Set element value.",'new Elem("input").setValue("valueString");'),new Item("getValue()","Get element value.","elem.getValue();"),new Item("setId(id)","Set element id.",'new Elem("div").setId("myId");'),new Item("getId()","Get element id.","elem.getId();"),new Item("append(elem)","Append a new element inside this element.",'new Elem("div").append(new Elem("span"));'),new Item("remove(elem)","Remove a element from this element.","elem.remove(childElem);"),new Item("replace(elem)","Replace this element with other element.","elem.replace(otherElem);"),new Item("before(elem)","Insert a new element before this element.","elem.before(otherElem);"),new Item("after(elem)","Insert a new element after this element.","elem.after(otherElem);"),new Item("toString()","Returns String presentation of this component."),new Item("toLiteralString()","Returns short string that describes the element."),new Item("toTemplate(deep)","Converts this Elem object to JSON template object. Default behavior will also template children, which can be overridden by giving a boolean false as a parameter."),new Item("getProps(json)","Returns properties of an Elem in an object. If a boolean json is true then the returned object is returned as JSON string."),new Item("setProps(newProps)","Method will override old properties with the given properties. Method returns this Elem instance."),new Item("render(...elems)","Method is able to render child elements dynamically as illustrated: [Elem, Elem, Elem.....] | Elem, Elem, Elem | [Elem, Elem], Elem.","elementInstance.render(elementInstance,...);"),new Item("getChildren()","Get an array of children of this element. Returns the array of child elements wrapped in Elem instance.","elem.getChildren();"),new Item("get(selector)","Uses CSS selector to find all matching child elements in this Element. Found elements will be wrapped in an Elem instance."),new Item("getFirst(selector)","Uses CSS selector to find the first match child element in this Element. Found element will be wrapped in an Elem instance."),new Item("getByTag(tag)","Uses a HTML Document tag name to find matching elements in this Element e.g. div, span, p. Found elements will be wrapped in an Elem instance. If found many then an array of Elem instanes are returned otherwise a single Elem instance."),new Item("getByClass(classname)",'Uses a HTML Document element class string to find matching elements in this Element e.g. "main emphasize-green". Method will try to find elements having any of the given classes. Found elements will be wrapped in an Elem instance. If found many then an array of Elem instances are returned otherwise a single Elem instance.'),new Item("setTitle(title)","Sets title of an element.",'elem.setTitle("new title");'),new Item("getTitle()","Returns the title of an element.","elem.getTitle();"),new Item("setTabIndex(idx)","Sets tab index of an element.","elem.setTabIndex(1);"),new Item("getTabIndex()","Returns tab index of an element.","elem.getTabIndex();"),new Item("getTagName()","Returns tag name of an element.","elem.getTagName();"),new Item("setAttribute(attr, value)","Set an attribute to an element.",'elem.setAttribute("attr", "value");'),new Item("getAttribute(attr)","Get a value of an attribute of an element.",'elem.getAttribute("size");'),new Item("removeAttribute(attr)","Remove an attribute of an element.",'elem.removeAttribute("href");'),new Item("setName(name)","Set a name of an element.",'elem.setName("firstname");'),new Item("getName()","Get a name of an element.","elem.getName();"),new Item("setType(type)","Set a type of an element.",'elem.setType("text"); elem.setType("password");'),new Item("getType()","Get a type of an element.","elem.getType();"),new Item("setSource(source)","Set a source of an element.",'elem.setSource("myComponentLib.js"); elem.setSource("logo.gif");'),new Item("getSource()","Get a source of an element.","elem.getSource();"),new Item("setHref(href)","Set a href of an element.",'elem.setHref("movies"); elem.setHref("www.google.com");'),new Item("getHref()","Get a href of an element.","elem.getHref();"),new Item("setPlaceholder(placeholder)","Set a placeholder of an element.",'elem.setPlaceholder("Email");'),new Item("getPlaceholder()","Get a placeholder of an element.","elem.getPlaceholder();"),new Item("setSize(size)","Set size of an element.","elem.setSize(30);"),new Item("getSize()","Get size of an element.","elem.getSize();"),new Item("setMaxLength(length)","Set maximum length of an input field."),new Item("getMaxLenth()","Returns max length of this element."),new Item("setMinLength(length)","Set minimum length of an input field."),new Item("getMinLength()","Returns min lenght of this element."),new Item("setData(key, value)","Set data to be stored into this dom element by a given key."),new Item("getData(key)","Get data by a given key from this dom element."),new Item("setEditable(boolean)","Set content editable of an element.","elem.setEditable(true);"),new Item("getEditable()","Get content editable state of an element.","elem.getEditable();"),new Item("setDisabled(boolean)","Set disabled state of an element.","elem.setDisabled(true);"),new Item("getDisabled()","Get disabled state of an element.","elem.getDisabled();"),new Item("setChecked(boolean)","Set checked state of an element.","elem.setChecked(true);"),new Item("getChecked()","Get checked state of an element.","elem.getChecked();"),new Item("setSelected(boolean)","Set element selected."),new Item("getSelected()","Get element selected attribute."),new Item("addClasses(classesString)","Add classes to an element. Adds non existing classes.",'elem.addClasses("main container no-padding");'),new Item("updateClasses(classes)","Set classes to on element. Previous classes are overridden."),new Item("removeClasses(classesString)","Remove classes from an element.",'elem.removeClasses("highlight color-red");'),new Item("toggleClasses(classesString)","Toggle classes on an element. Adds elements that does not exist. Removes elements that are found.",'elem.toggleClasses("text-green fade-screen");'),new Item("getClasses()","Get class string of an element.","elem.getClasses();"),new Item("setStyles(stylesMap)","Set styles to an element.",'elem.setStyles({height: "100px", maxHeight: "200px", backgroundColor: "green"});'),new Item("getStyle(styleName)","Get a style of an element.",'elem.getStyle("backgroundColor");'),new Item("setVisible(boolean)","Set an element visible or hidden.","elem.setVisible(true); elem.setVisible(false);"),new Item("display(boolean)","Set display state of an element.","elem.display(true); elem.display(false);"),new Item("setDraggable(boolean)","Set element draggable.","elem.setDraggable(true); elem.setDraggable(false);"),new Item("message(message, ...params)","Set translated text of this element."),new Item("click()","Simulate a click event on an element.","elem.click();"),new Item("focus()","Simulate a focus event on an element.","elem.focus();"),new Item("blur()","Simulate a blur event on an element.","elem.blur();"),new Item("clone(deep)","Returns a clone of an element. If deep boolean is true then child elements are also cloned. Listeners are not cloned.","elem.clone(); elem.clone(true);"),new Item("dom()","Returns HTMLDocument of an element.","elem.dom();"),new Item("duplicate()","Returns a duplicated Elem object, Duplicates also children and event listeners."),new Item("height()","Get height of an element","elem.height();"),new Item("width()","Get width of an element.","elem.width();"),new Item("top()","Returns position form top relative to offsetParent."),new Item("left()","Returns position form left relative to offsetParent."),new Item("parent()","Get a parent of an element. Returns Elem instance or null if no parent.","elem.parent();"),new Item("next()","Get a next element of an element. Returns Elem instance or null if no next.","elem.next();"),new Item("previous()","Get a previous element of an element. Returns Elem instance or null if not previous.","elem.previous();"),new Item("getFirstChild()","Get the first child of an element. Returns Elem instance or null if no child.","elem.getFirstChild();"),new Item("getLastChild()","Get the last child of an element. Returns Elem instance or null if no child.","elem.getLastChild();"),new Item("extend(child)","Method does es5 standard extension to an element. The parameter is type of function and is also the child (subclass) of the Elem class. This method can be used to add additional functionality to the Elem class. Method returns the given child reference."),new Item("onAnimationStart(handler)","Add animation start listener on an element.","elem.onAnimationStart(function(event));"),new Item("onAnimationIteration(handler)","Add animation iteration listener on an element.","elem.onAnimationIteration(function(event));"),new Item("onAnimationEnd(handler)","Add animation end listener on an element.","elem.onAnimationEnd(function(event));"),new Item("onTransitionEnd(handler)","Add transition end listener on an element.","elem.addTransitionEnd(function(event));"),new Item("onDrag(handler)","Add on drag listener on an element.","elem.onDrag(function(event));"),new Item("onDragEnd(handler)","Add on drag end listener on an element.","elem.onDragEnd(function(event));"),new Item("onDragEnter(handler)","Add on drag enter listener on an element.","elem.onDragEnter(function(event));"),new Item("onDragOver(handler)","Add on drag over listener on an element.","elem.onDragOver(function(event));"),new Item("onDragStart(handler)","Add on drag start listener on an element.","elem.onDragStart(function(event));"),new Item("onDrop(handler)","Add on drop listener on an element.","elem.onDrop(function(event));"),new Item("onClick(handler)","Add on click listener on an element.","elem.onClick(function(event));"),new Item("onDoubleClick(handler)","Add on double click listener on an element.","elem.onDoubleClick(function(event));"),new Item("onContextMenu(handler)","Add on context menu listener on an element. (right mouse button click)","elem.onContextMenu(function(event));"),new Item("onMouseDown(handler)","Add on mouse down listener on an element.","elem.onMouseDown(function(event));"),new Item("onMouseEnter(handler)","Add on mouse enter listener on an element.","elem.onMouseEnter(function(event));"),new Item("onMouseLeave(handler)","Add on mouse leave listener on an element.","elem.onMouseLeave(function(event));"),new Item("onMouseMove(handler)","Add on mouse move listener on an element.","elem.onMouseMove(function(event));"),new Item("onMouseOver(handler)","Add on mouse over listener on an element.","elem.onMouseOver(function(event));"),new Item("onMouseOut(handler)","Add on mouse out listener on an element.","elem.onMouseOut(function(event));"),new Item("onMouseUp(handler)","Add on mouse up listener on an element.","elem.onMouseUp(function(event));"),new Item("onWheel(handler)","Add mouse wheel listener on an element.","elem.onWheel(function(event));"),new Item("onScroll(handler)","Add on scroll listener on an element.","elem.onScroll(function(event));"),new Item("onResize(handler)","Add on resize listener on an element. (supported: body)","elem.onResize(function(event));"),new Item("onError(handler)","Add on erro listener on an element.","elem.onError(function(event));"),new Item("onLoad(handler)","Add on load listener on an element. (supported: body, img|input=type=img, script, link, style, frame, iframe)","elem.onLoad(function(event));"),new Item("onUnload(handler)","Add on unload listener on an element. Occurs when page is unloaded or browser window is closed (supported: body)","elem.onUnload(function(event));"),new Item("onBeforeUnload(handler)","Add on before unload listener on an element. Occurs before unload (supported: body)","elem.onBeforeUnload(function(even));"),new Item("onKeyUp(handler)","Add on key up listener on an element.","elem.onKeyUp(function(event));"),new Item("onKeyDown(handler)","Add on key down listener on an element.","elem.onKeyDown(function(event));"),new Item("onKeyPress(handler)","Add on key press listener on an element.","elem.onKeyPress(function(event));"),new Item("onInput(handler)","Add on input listener on an element.","elem.onInput(function(event));"),new Item("onChange(handler)","Add on change listener on an element.","elem.onChange(function(event));"),new Item("onSubmit(handler)","Add on submit listener on an element.","elem.onSubmit(function(event));"),new Item("onSelect(handler)","Add on select listener on an element.","elem.onSelect(function(event));"),new Item("onReset(handler)","Add on reset listener on an element.","elem.onReset(function(event));"),new Item("onFocus(handler)","Add on focus listener on an element.","elem.onFocus(function(event));"),new Item("onFocusIn(handler)","Add on focus in listener on an element.","elem.onFocusIn(function(event));"),new Item("onFocusOut(handler)","Add on focus out listener on an element.","elem.onFocusOut(function(event));"),new Item("onBlur(handler)","Add on blur listener on an element.","elem.onBlur(function(event));"),new Item("onCopy(handler)","Add on copy listener on an element.","elem.onCopy(function(event));"),new Item("onCut(handler)","Add on cut listener on an element.","elem.onCut(function(event));"),new Item("onPaste(handler)","Add on paste listener on an element.","elem.onPaste(function(event));"),new Item("onAbort(handler)","Add on abort listener on an element. Occurs when media data download was aborted. (supported: video, audio)","elem.onAbort(function(event));"),new Item("onWaiting(handler)","Add on wainting listener on an element. Occurs when video stops and waits to buffer next frame. (supported: audio, video)","elem.onWaiting(function(event));"),new Item("onVolumeChange(handler)","Add on volume change listener on an element. Occurs when the volume is changed. (supported: audio, video)","elem.onVolumeChange(function(event));"),new Item("onTimeUpdate(handler)","Add on time update listener on an element. Occurs on playing or when a new position is selected on a seekbar. (supported: audio, video)","elem.onTimeUpdate(function(event));"),new Item("onSeeking(handler)","Add on seeking listener on an element. Occurs when a new position was selected on a seekbar. (supported: audio, video)","elem.onSeeking(function(event));"),new Item("onSeekEnd(handler)","Add on seek end listener on an element. Occurs after a new position was selected on a seekbar. (supported: audio, video)","elem.onSeekEnd(function(event));"),new Item("onRateChange(handler)","Add on rate change listener on an element. Occurs when playback rate (speed  slow motion, fast forward) changes. (supported: audio, video)","elem.onRateChange(function(event));"),new Item("onProgress(handler)","Add on progress listener on an element. Occurs when browser is downloading media. (supported: audio, video)","elem.onProgress(function(event));"),new Item("onLoadMetadata(handler)","Add on load metadata listener on an element. Occurs when media metadata was downloaded. (supported: audio, video)","elem.onLoadMetadata(function(event));"),new Item("onLoadedData(handler)","Add on loaded data listener on an element. Occurs when media frame data was loaded, but not enough data to play next frame. (supported: audio, video)","elem.onLoadedData(function(event));"),new Item("onLoadStart(handler)","Add on load start listener on an element. Occurs when browser starts looking for media. (supported: audio, video)","elem.onLoadStart(function(event));"),new Item("onPlaying(handler)","Add on playing listener on an element. Occurs when the media is playing after paused by user or stopped for buffering. (supported: audio, video)","elem.onPlaying(function(event));"),new Item("onPlay(handler)","Add on play listener on an element. Occurs when the media starts to play e.g. play button is pressed. (supported: audio, video)","elem.onPlay(function(event));"),new Item("onPause(handler)","Add on pause listener on an element. Occurs when the media is paused. (supported: audio, video)","elem.onPause(function(event));"),new Item("onEnded(handler)","Add on ended listener on an element. Occurs when the end of media file has been reached. (supported: audio, video)","elem.onEnded(function(event));"),new Item("onDurationChange(handler)","Add on duration change listener on an element. Occurs when media duration changes. (supported: audio, video)","elem.onDurationChange(function(event));"),new Item("onCanPlay(handler)","Add on can play listener on an element. Occurs when enough data to play. (supported: audio, video)","elem.onCanPlay(function(event));"),new Item("onCanPlayThrough(handler)","Add can play through listener on an element. Occurs when can play through without buffering. (supported: audio, video)","elem.onCanPlayThrough(function(event));"),new Item("onStalled(handler)","Add on stalled listener on an element. Occurs when browser is trying to get data but data not available. (supported: audio, video)","elem.onStalled(function(event));"),new Item("onSuspend(handler)","Add on suspend listener on an element. Occurs when browser intentionally does not retrive media data. (supported: audio, video)","elem.onSuspend(function(event));"),new Item("onPopState(handler)","Add on pop state listener on an element. Occurs when window history changes.","elem.onPopState(function(event));"),new Item("onStorage(handler)","Add on storage listener on an element. Occurs when WebStorage changes.","elem.onStorage(function(event));"),new Item("onHashChange(handler)","Add on hash change listener on an element. Occurs when hash part of the url changes. (supported: body)","elem.onHashChange(function(event));"),new Item("onAfterPrint(handler)","Add on after print listener on an element. Occurs when a print dialogua is closed. (Safari, Opera not supported)","elem.onAfterPrint(function(event));"),new Item("onBeforePrint(handler)","Add on before print listener on an element. Occurs when a print dialogue is opened (Safari, Opera not supported)","elem.onBeforePrint(function(event));"),new Item("onPageHide(handler)","Add on page hide listener on an element. Occurs when user navigates away from webpage. (supported: body)","elem.onPageHide(function(event));"),new Item("onPageShow(handler)","Add on page show listener on an element. Occurs when user navigates to webpage. (supported: body)","elem.onPageShow(function(event));"),new Item("create(type)","Creates a new HTML element by type.",'Elem.create("span");'),new Item("wrap(html)","Does not create a new HTML element but only wraps existing HTML element in the Elem instance.","Elem.wrap(HTMLDocument); Elem.wrap(document.body);"),new Item("wrapElems(htmlElems)","Takes an array of HTML Document elements and wraps all of them in the Elem instance. Returns an array of Elem instances if more than one elements were given otherwise retuns a single Elem instance element.","Elem.wrapElems([HTMLDocment, HTMLDocument]); Elem.wrapElems([document.body, document.head]);")],r=[new Item("resolve(template)","Method takes a JSON notation template as parameter, starts resolving it and returns a created element tree.",'Template.resolve({\n  div: {\n    span: {text: "Hello World"}\n  }\n});'),new Item("isTemplate(object)","Method checks if the given object is an unresolved JSON template and returns true if it is an unresolved JSON template, otherwise false."),new Item("isTag(tag)","Function checks if the given tag is the HTML5 tag and returns true if is otherwise false is returned. The tag should be written in lowercase."),new Item("updateElemProps(elem, props)","Method will apply the properties given to the element. Old properties are overridden."),new Item("isFragment(child)","Method takes a parameter and checks if the parameter is type fragment. If the parameter is type fragment the method will return true otherwise false is returned."),new Item("resolveToParent(template, parent)","Method takes a template and a parent element as parameter and it resolves the given template into the given parent.")],i=[new Item("get(selector)","Returns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by css selector.","Tree.get(id|class|tag|cssSelector);"),new Item("getFirst(selector)","Returns a single Elem instance. Selects element from HTML Document Tree by css selector.",'Tree.getFirst(id|class|tag|cssSelector); Tree.getFirst("#app").getId();','Tree.getFirst("div").getId();'),new Item("getByTag(tag)","Retuns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by tag e.g. div.",'Tree.getByTag("div").getTagName();'),new Item("getByName(name)","Returns an array of Elem objects or a single Elem instance. Selects elements form HTML Document Tree by element name.",'Tree.getByName("firstname");'),new Item("getById(id)","Returns a single Elem instance. Selects an element from HTML Document Tree by element id.",'Tree.getById("elementIdWithoutHash"); Tree.getById("app").getId();','Tree.getById("app").getId();'),new Item("getByClass(classname)","Returns an array of Elem objects or a single Elem instance. Selects elements from HTML Document Tree by element classname.",'Tree.getByClass("myclass"); Tree.getByClass("w3-container").getClasses();','Tree.getByClass("w3-container").getClasses();'),new Item("getBody()","Returns an Elem instance that contains Body element.","Tree.getBody().dom().tagName;","Tree.getBody().dom().tagName;"),new Item("getHead()","Returns an Elem instance that contains Head element.","Tree.getHead().dom().tagName;","Tree.getHead().dom().tagName;"),new Item("getTitle()","Returns a title of the current page.","Tree.getTitle();",!0),new Item("setTitle(title)","Sets a title of the current page.",'Tree.setTitle("new title");'),new Item("getActiveElement()","Returns an active element wrapped in Elem instance on the page.","Tree.getActiveElement().dom().tagName;","Tree.getActiveElement().dom().tagName;"),new Item("getAnchors()","Retuns anchors of the page wrapped in Elem instance.","Tree.getAnchors();"),new Item("getHtmlElement()","Returns the HTML element.","Tree.getHtmlElement();"),new Item("getDoctype()","Returns the Doctype element.","Tree.getDoctype();"),new Item("getEmbeds()",'Returns Elem instance array of "embed" elements.',"Tree.getEmbeds();"),new Item("getImages()",'Returns Elem instance array of "img" elements.',"Tree.getImages();"),new Item("getLinks()",'Returns Elem instance array of "a" and "area" elements.',"Tree.getLinks();"),new Item("getScripts()",'Returns Elem instance array of "script" elements.',"Tree.getScripts();"),new Item("getForms()",'Returns Elem instance array of "form" elements.',"Tree.getForms();")],l=[new Item("navigate(url, event)","Method will try to find a route according to the given parameter. The supported parameter combinations are url, event or elem & event. The first paramter can either be an URL or an Event or an Elem. The second parameter is an Event if the first parameter is an Elem. If the route is found, then the Router will update a new url to the browser and render the found route element.","Router.navigate(newPageUrl);"),new Item("root(elem)","Set a root element into the Router. Elem parameter must be an Elem object in order to the Router is able to render it.","Router.root(rootObj);"),new Item("add(url, elem, hide)","Add a new route element into the Router. Elem parameter must be an Elem object in order to the Router is able to render it.","Router.add(someRouteUrl, someElemObject, hideboolean);"),new Item("routes(routes)","Set an array of routes that the Router uses. If a root is not set then the first item in the given routes array will be the root route element.",'var routes = [\n  {elem: rootObj},\n  {route: "page1", elem: page1Obj},\n  {route: "page2", elem: page2Obj}\n];\n\nRouter.routes(routes);'),new Item("hash()","Method sets the Router to use a hash implementation. When this implementation is used there is no need to manually use Router.navigate function because change of the hash is automatically followed."),new Item("url(manual)","Method sets the Router to use an url implementation. The url implementation defaults to HTML standard that pressing a link will cause the browser reload a new page. After reload the new page is rendered. If you wish to skip reload then you should set the parameter manual to true."),new Item("scroll(auto)","Method sets default level behavior for route naviagation. If the given value is true then the Browser auto-scrolls up when navigating to a new resource. If set false then the Browser does not auto-scroll up. Default value is true."),new Item("setApp(appInstance)","Set the app instance to be invoked on the Router update."),new Item("getCurrentState()","Returns current status of the Router.")],c=[new Item("locale()","Function returns current locale of the Messages."),new Item("lang(locale|event)","Lang function is used to change or set the current locale to be the given locale. If a given parameter is an event then event.preventDefault() is invoked and the locale is ought to resolve from a target of the event. After calling this method the Messages.load function will be automatically invoked."),new Item("message(text, ...params)","Message function is used to retrieve translated messages. The function also supports message parameters that can be given as a comma separeted list."),new Item("load(loader)","Load function is used to load new messages or change already loaded messages. The one of the parameters is the changed locale and the other is setMessages(messagesArrayOrObject) function that is used to change the translated messages. This function is called automatically when language is changed by calling the Messages.lang() function."),new Item("setApp(appInstance)","Set the app instance to be invoked on the Messages update.")],p=[new Item("Key.ENTER",'"Enter"',"elem.onKeyDown(function(event) {\n   if(event.key === Key.ENTER)\n      search();\n});"),new Item("Key.ESC",'"Escape"'),new Item("Key.TAB",'"Tab"'),new Item("Key.F1",'"F1"'),new Item("Key.F2",'"F2"'),new Item("Key.F3",'"F3"'),new Item("Key.F4",'"F4"'),new Item("Key.F5",'"F5"'),new Item("Key.F6",'"F6"'),new Item("Key.F7",'"F7"'),new Item("Key.F8",'"F8"'),new Item("Key.F9",'"F9"'),new Item("Key.F10",'"F10"'),new Item("Key.F11",'"F11"'),new Item("Key.F12",'"F12"'),new Item("Key.A",'"a"'),new Item("Key.B",'"b"'),new Item("Key.C",'"c"'),new Item("Key.D",'"d"'),new Item("Key.E",'"e"'),new Item("Key.F",'"f"'),new Item("Key.G",'"g"'),new Item("Key.H",'"h"'),new Item("Key.I",'"i"'),new Item("Key.J",'"j"'),new Item("Key.L",'"l"'),new Item("Key.M",'"m"'),new Item("Key.N",'"n"'),new Item("Key.O",'"o"'),new Item("Key.P",'"p"'),new Item("Key.Q",'"q"'),new Item("Key.R",'"r"'),new Item("Key.S",'"s"'),new Item("Key.T",'"t"'),new Item("Key.U",'"u"'),new Item("Key.V",'"v"'),new Item("Key.W",'"w"'),new Item("Key.X",'"x"'),new Item("Key.Y",'"y"'),new Item("Key.Z",'"z"'),new Item("Key.CAPS_LOCK",'"CapsLock"'),new Item("Key.NUM_LOCK",'"NumLock"'),new Item("Key.SCROLL_LOCK",'"ScrollLock"'),new Item("Key.PAUSE",'"Pause"'),new Item("Key.PRINT_SCREEN",'"PrintScreen"'),new Item("Key.PAGE_UP",'"PageUp"'),new Item("Key.PAGE_DOWN",'"PageDown"'),new Item("Key.END",'"End"'),new Item("Key.HOME",'"Home"'),new Item("Key.DELETE",'"Delete"'),new Item("Key.INSERT",'"Insert"'),new Item("Key.ALT",'"Alt"'),new Item("Key.CTRL",'"Control"'),new Item("Key.CONTEXT_MENU",'"ContextMenu'),new Item("Key.OS",'"OS"'),new Item("Key.ALTGR",'"AltGraph"'),new Item("Key.SHIFT",'"Shift"'),new Item("Key.BACKSPACE",'"Backspace"'),new Item("Key.SECTION",'"§"'),new Item("Key.ONE",'"1"'),new Item("Key.TWO",'"2"'),new Item("Key.THREE",'"3"'),new Item("Key.FOUR",'"4"'),new Item("Key.FIVE",'"5"'),new Item("Key.SIX",'"6"'),new Item("Key.SEVEN",'"7"'),new Item("Key.EIGHT",'"8"'),new Item("Key.NINE",'"9"'),new Item("Key.ZERO",'"0"'),new Item("Key.PLUS",'"+"'),new Item("Key.MINUS",'"-"'),new Item("Key.STAR",'"*"'),new Item("Key.SLASH",'"/"'),new Item("Key.ARROW_UP",'"ArrowUp"'),new Item("Key.ARROW_RIGHT",'"ArrowRight"'),new Item("Key.ARROW_DOWN",'"ArrowDown"'),new Item("Key.ARROW_LEFT",'"ArrowLeft"'),new Item("Key.COMMA",'","'),new Item("Key.DOT",'"."')],m=[new Item("set(name, value, expiresDate, cookiePath, cookieDomain, setSecureBoolean)","Set a cookie. Name and value parameters are essential on saving the cookie and other parameters are optional.",'Cookie.set("myCookie", "myCookieValue");',!0),new Item("get(name)","Get a cookie by name. If the cookie is found a cookie object is returned otherwise null.",'Cookie.get("myCookie");',!0),new Item("remove(name)","Remove a cookie by name. Method will set the cookie expired and then remove it.",'Cookie.remove("myCookie");',!0)],d=[new Item("set(key, val)","Set a value to the Session by name.",'Session.set("abc", "alphabets");',!0),new Item("get(key)","Get a value from the Session by name.",'Session.get("abc");',!0),new Item("remove(key)","Remove a value from the Session by name.",'Session.remove("abc");',!0),new Item("clear()","Clears the Session.","Session.clear();",!0)],u=[new Item("set(key, val)","Set a value by a key to the LocalStorage.",'Storage.set("foo", "bar");',!0),new Item("get(key)","Get a value by a key from the LocalStorage.",'Storage.get("foo");',!0),new Item("remove(key)","Remove value by a key from the LocalStorage.",'Storage.remove("foo");'),new Item("clear()","Clears the LocalStorage.","Storage.clear();")],h=[new Item("isEmpty(value)","Returns true if a given value is null, undefined, an empty string or an array and lenght of the array is 0.",'Util.isEmpty(""); Util.isEmpty(undefined); Util.isEmpty(null); Util.isEmpty("test");',!0),new Item("getType(value)","Returns type of a given value.","Util.getType(function(){}); Util.getType(1);",!0),new Item("isType(value, type)","Returns true if a given value is given type.",'Util.isType(function(){}, "function"); Util.isType(1, "number");',!0),new Item("isFunction(func)","Returns true if a given value is function.","Util.isFunction(function(){});",!0),new Item("isBoolean(boolean)","Returns true if a given value is boolean.","Util.isBoolean(false); Util.isBoolean(true);",!0),new Item("isString(string)","Returns true if a given value is string.",'Util.isString("this is a string");',!0),new Item("isNumber(number)","Returns true is a given value is number.","Util.isNumber(1);",!0),new Item("isSymbol(symbol)","Returns true if a given value is symbol. Works on ES6 or higher.","Util.isSymbol(symbol);"),new Item("isObject(object)","Returns true if a given value is object.","Util.isObject({});",!0),new Item("isArray(array)","Returns true if a given value is an Array.","Util.isArray([]);",!0),new Item("setTimeout(callback, milliseconds, ...params)","Returns a created timeout object. Callback will be invoked after a given number of milliseconds.  Params are passed to callback function."),new Item("clearTimeout(timeoutObject)","Clears the given timeout object.","Util.clearTimeout(timeout);"),new Item("setInterval(callback, milliseconds, ...params)","Returns a created interval object. Callback will be invoked on every iteration of a given number of milliseconds. Params are passed to callback function."),new Item("clearInterval(intervalObject)","Clears the given interval object.","Util.clearInterval(interval); "),new Item("encodeBase64String(string)","Returns base64 encoded string.",'Util.encodeBase64String("test");',!0),new Item("decodeBase64String(string)","Returns base64 decoded string.",'Util.decodeBase64String("dGVzdA==");',!0)],f=[new Item("scrollTo(xPos, yPos)","Scroll once to given position.","Browser.scrollTo(xpPos, yPos);"),new Item("scrollBy(xPx, yPx)","Scroll by given amount to next position.","Browser.scrollBy(xPx, xPy);"),new Item("open(url, name, specs, replace)","Opens a new browser window. Name pamareter can have following values: name or target value (name|_blank|_parent|_self|_top). Returns reference to the opened window or null if opening the window failes.","Browser.open(url, name, specs, replace);"),new Item("close(openedWindow)","Closes a given opened window. Same as calling openedWindow.close();","Browser.close(window);"),new Item("print()","Opens a print webpage dialog.","Browser.print();"),new Item("alert(message)","Displays an alert dialog with a given message and an OK button.",'Browser.alert("message");'),new Item("confirm(message)","Displays a confirm dialog with a given message, OK and Cancel button. Returns True if OK was pressed otherwise false.",'Browser.confirm("message");'),new Item("prompt(message, defaultText)","Displays a prompt dialog with a given message, a prefilled default text, OK and Cancel button. Returns If OK was pressed and an input field has text then the text is returned. If the input does not have text and OK was pressed then empty string is returned. If Cancel was pressed then null is returned.",'Browser.propmt("message", "defaultText");'),new Item("mediaMatcher(mediaString)","Method is used to make a media query to the viewport/screen object. The media query is done according to a given mediaString. Syntax of the media string would be (min-width: 300px) but using this method enables user to omit parentheses(). Which then leads to syntax min-width: 300px. Returns media mather object",'Browser.mediaMatcher("mediaString");'),new Item("pageBack()","Loads one page back in the browsers history list.","Browser.pageBack();"),new Item("pageForward()","Loads one page forward in the browsers history list.","Browser.pageForward();"),new Item("pageGo(numberOfPagesOrUrl)","Loads to specified page in the browsers history list. A parameter can either be a number or string. If the parameter is number then positive and negative values are allowed as positive values will go forward and negative values will go backward. If the parameter is string then it must be partial or full url of the page in the history list.","Browser.pageGo(1);"),new Item("pushState(stateObject, title, newURL)","Create a new history entry with given parameters without reloading the page. State object will be the state next history entry will be using. Title is ignored value by the history object at the time but it could be the same title what the HTML Document page has at the moment of create the new history entry. New url must be of the same origin (e.g. www.example.com) but the rest of url could be anything.","Browser.pushState(stateObject, title, newUrl);"),new Item("replaceState(stateObject, title, newURL)","Replace a history entry with given parameters without reloading the page. State object will be the state next history entry will be using. Title is ignored value by the history object at the time but it could be the same title what the HTML Document page has at the moment of create the new history entry. New url must be of the same origin (e.g. www.example.com) but the rest of url could be anything.","Browser.replaceState(stateObject, title, newURL);"),new Item("newPage(newURL)","Loads a new page.","Browser.newPage(newUrl);"),new Item("reloadPage(force)","Reloads a current page. If a parameter force is true then the page will be loaded from the server otherwise from the browsers cache.","Browser.reloadPage(boolean);"),new Item("replacePage(newURL)","Replaces a current page with a new one. If the page is replaced then it wont be possible to go back to the previous page from the history list.","Browser.replacePage(newUrl);"),new Item("getAnchorHash()","Returns anchor part of the url e.g. #heading2.","Browser.getAnchorHash();"),new Item("setAnchorHash(hash)","Sets a new anhorpart of the url e.g. #heading3.","Browser.setAnchorHash(hash);"),new Item("getHostnamePort()","Returns hostname and port in host:port format.","Browser.getHostnamePort();",!0),new Item("setHostnamePort(hostPort)","Set a hostname and port in format host:port.","Browser.setHostnamePort(hostport);"),new Item("getHostname()","Returns hostname e.g. www.google.com.","Browser.getHostname();",!0),new Item("setHostname(hostname)","Set a hostname","Browser.setHostname(hostname);"),new Item("getURL()","Returns entire URL of the webpage.","Browser.getURL();",!0),new Item("setURL(newURL)","Set location of a current page to point to a new location e.g. http://some.url.test or #someAcnhor on the page.","Browser.setURL(newURL);"),new Item("getOrigin()","Returns protocol, hostname and port e.g. https://www.example.com:443.","Browser.getOrigin();",!0),new Item("getPathname()","Returns part of the URL after the slash(/) e.g. /photos/.","Browser.getPathname();",!0),new Item("setPathname(pathname)","Sets a new pathname for this location.","Browser.setPathname();"),new Item("getPort()","Returns port number of the connection between server and client.","Browser.getPort();",!0),new Item("setPort(portNumber)","Sets a new port number for the connection between server and client.","Browser.setPort(number);"),new Item("getProtocol()","Returns protocol part of the URL e.g. http: or https:.","Browser.getProtocol();",!0),new Item("setProtocol(protocol)","Set a new protocol for this location to use.","Browser.setProtocol(protocol);"),new Item("getSearchString()","Returns part of the URL after the question(?) mark. e.g. ?attr=value&abc=efg.","Browser.getSearchString();",!0),new Item("setSearchString(searchString)","Sets a new searchString into the URL.","Browser.setSearchString(searchString);"),new Item("getCodename()","Returns codename of the browser.","Browser.getCodename();",!0),new Item("getName()","Returns name of the browser.","Browser.getName();",!0),new Item("getVersion()","Returns version of the browser.","Browser.getVersion();",!0),new Item("isCookiesEnabled()","Returns true if cookies are enabled otherwise false.","Browser.isCookiesEnabled();",!0),new Item("getGeoLocation()","Returns GeoLocation object.","Browser.getGeoLocation();",!0),new Item("getLanguage()","Returns language of the browser.","Browser.getLanguage();",!0),new Item("getPlatform()","Returns a platform name of which the browser is compiled on.","Browser.getPlatform();",!0),new Item("getProduct()","Returns a name of an engine of the browser.","Browser.getProduct();",!0),new Item("getUserAgentHeader()","Returns a header string sent to a server by the browser.","Browser.getUserAgentHeader();",!0),new Item("getColorDepth()","Returns color depth of the current screen.","Browser.getColorDepth();",!0),new Item("getFullScreenHeight()","Returns total height of the current screen.","Browser.getFullScreenHeight();",!0),new Item("getFullScreenWidth()","returns total width of the current screen.","Browser.getFullScreenWidth();",!0),new Item("getAvailableScreenHeight()","Returns height of the current screen excluding OS. taskbar.","Browser.getAvailableScreenHeight();",!0),new Item("getAvailableScreenWidth()","Returns width of the current screen exluding OS. taskbar.","Browser.getAvailableScreenWidth();",!0)],g=[new Item("send(event)","Function sends an event object though the EventPipe. The event must have a type attribute defined otherwise an error is thrown."),new Item("receive(event)","Function registers an event listener function that receives an event sent through the EventPipe. Each listener will receive each event that are in an event queue. The listener function receives the event as a parameter.")];function Item(e,t,n,o){this.name=e,this.description=t,this.example=n,this.solution=o}o.h.storage("rmeList",e),o.h.storage("httpList",a),o.h.storage("elemList",s),o.h.storage("templateList",r),o.h.storage("treeList",i),o.h.storage("routerList",l),o.h.storage("messagesList",c),o.h.storage("keyList",p),o.h.storage("cookieList",m),o.h.storage("sessionList",d),o.h.storage("storageList",u),o.h.storage("utilList",h),o.h.storage("browserList",f),o.h.storage("appList",t),o.h.storage("appInstanceList",n),o.h.storage("eventPipeList",g)})),o.h.run((function(){var e={a:["alt","async","autocomplete","autofocus","autoplay","accept","accept-charset","accpetCharset","accesskey","action"],b:["blur"],c:["class","checked","content","contenteditable","cite","click","charset","cols","colspan","controls","coords"],d:["disabled","data","draggable","dropzone","datetime","default","defer","dir","dirname","download"],e:["editable","enctype"],f:["for","form","focus","formaction"],h:["href","height","hidden","high","hreflang","headers","http-equiv","httpEquiv"],i:["id","ismap"],k:["kind"],l:["lang","label","list","loop","low"],m:["message","max","maxlength","maxLength","min","minlength","minLength","multiple","media","method","muted"],n:["name","novalidate"],o:["open","optimum"],p:["placeholder","pattern","poster","preload"],r:["rel","readonly","required","reversed","rows","rowspan"],s:["src","span","size","selected","step","style","styles","shape","sandbox","scope","sizes","spellcheck","srcdoc","srclang","srcset","start"],t:["text","type","title","target","tabindex","tabIndex","translate"],u:["usemap"],v:["value","visible"],w:["width","wrap"]},t=[];for(var n in e)e.hasOwnProperty(n)&&(t=t.concat(e[n]));o.h.storage("attributes",t)})),o.h.run((function(){o.h.storage("menuContent",[{text:"Home"},{text:"RME",href:"#home"},{text:"Howto"},{text:"Basics",href:"#howto"},{text:"App + Router + Messages ",href:"#put-things-together"},{text:"Functions",version:1.5},{text:"Component",href:"#component-function",explained:{text:"Explained",href:"#components-explained"}},{text:"configure",href:"#configure-function"},{text:"createApp",href:"#createapp-function"},{text:"useState",href:"#usestate-function"},{text:"bindState",href:"#bindstate-function"},{text:"CSS",href:"#css-function"},{text:"Classes"},{text:"RME",href:"#rme",explained:{text:"Explained",href:"#rme-explained"}},{text:"App",href:"#app",explained:{text:"Explained",href:"#app-explained"}},{text:"Router",href:"#router",explained:{text:"Explained",href:"#router-explained"}},{text:"Http",href:"#http",explained:{text:"Explained",href:"#http-explained"}},{text:"Template",href:"#template",explained:{text:"Explained",href:"#templates-explained"}},{text:"Elem",href:"#elem",explained:{text:"Explained",href:"#elements-explained"}},{text:"Messages",href:"#messages",explained:{text:"Explained",href:"#messages-explained"}},{text:"EventPipe",href:"#event-pipe",version:1.5},{text:"Tree",href:"#tree"},{text:"Cookie",href:"#cookie"},{text:"Session",href:"#session"},{text:"Storage",href:"#storage"},{text:"Util",href:"#util"},{text:"Browser",href:"#browser"},{text:"Key",href:"#key"}])}));Object(o.b)((function text(e){return{"p.w3-large":{text:e.text,class:e.color?e.color:""}}}),(function Text(e){return{"component:text":e.text}}),(function tptext(e){return{"component:text.w3-text-teal":e.text}}),(function paragraph(e){return{"p.w3-large":{class:e.color?e.color:"",span:e.lines}}}),(function P(e){return{"p.w3-large":o.f.isArray(e)?{}:e}}),(function sline(e){return{span:e.text}}),(function iline(e){return{i:e.text}}),(function bline(e){return{b:e.text}}),(function S(e){return{sline:e.text}}),(function B(e){return{bline:e.text}}),(function I(e){return{iline:e.text}}),(function Comment(e){return{"span.w3-text-green":{text:e.text,br:{}}}}),(function SL(e){return{span:{text:e.text,br:{}}}}),(function subTitle(e){return{fragment:{line:{},h3:{text:e.text}}}}));function ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(n),!0).forEach((function(t){_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){return function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}(e)||function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function _unsupportedIterableToArray(e,t){if(!e)return;if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(e,t)}(e)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}Object(o.b)((function menu(){return{"ul.w3-ul":o.h.storage("menuContent").map((function(e){return e.href?{MenuNavLink:e}:{MenuTitle:e}}))}}),(function MenuTitle(e){return{"li.w3-light-gray.menu-title":{b:e.text}}}),(function MenuNavLink(e){return{li:e.explained?[{"navLink.w3-third":e},{ExplainedLink:e.explained}]:{navLink:e}}}),(function navLink(e){return{span:{a:{href:e.href.toLowerCase(),text:e.text}}}}),(function ExplainedLink(e){return{fragment:{class:"w3-row",span:{text:"| ",navLink:e}}}}));var a=function copyArrayFromTo(e,t,n){return e.reduce((function(e,o,a){return a>=t&&a<n?[].concat(_toConsumableArray(e),[o]):e}),[])};Object(o.b)((function quote(e){return{"div.w3-panel.w3-leftbar.w3-border-bottom.w3-light-gray.w3-margin":[{p:{class:"w3-xlarge w3-serif",span:{class:"w3-xxlarge",content:"&#10078;&nbsp;"},i:e.text}},{p:"-RME"}]}}),(function list(e){return{"ul.w3-ul":e.list.map((function(e){return{li:{a:{href:e.link,text:e.text,target:e.target},"span.w3-text-gray":{content:e.desc?"&nbsp;".concat(e.desc):""}}}}))}}),(function line(){return{"div.w3-border-bottom.line":""}}),(function HtmlTagAttributes(){var e=o.h.storage("attributes"),t=e.length/3,n=a(e,0,t),s=a(e,t,2*t),r=a(e,2*t,e.length);return{"div.w3-cell-row.attribute-cols":[{"div.w3-cell":{Text:n.join(",\n")}},{"div.w3-cell":{Text:s.join(",\n")}},{"div.w3-cell":{Text:r.join(",\n")}}]}}),Object(o.g)((function dataTable(e){var t=e.filtered?e.filtered:e.data;return{div:[e.data.length>10?{"div.w3-row":{"input.w3-input.w3-xlarge.w3-border.w3-margin-top[placeholder=Type to Filter Table]":{class:0===t.length?"w3-border-red":"",onInput:function onInput(t){return o.a.setState(e.stateRef,{filtered:o.h.storage(e.key).filter((function(e){return e.name.toLowerCase().search(t.target.value.toLowerCase())>-1}))})},onBlur:function onBlur(){return o.a.setState(e.stateRef,{filtered:void 0},!1)}}}}:void 0,{"div.w3-row.w3-padding.w3-border-bottom.w3-text-teal":{"div.w3-container.w3-third":{b:function b(){return"Function"}},"div.w3-container.w3-twothird":{b:function b(){return"Description"}}}},{fragment:t.map((function(e){return{"div.w3-row.w3-padding.data-table-row":{"div.w3-container.w3-third":function divW3ContainerW3Third(){return e.name},"div.w3-container.w3-twothird":function divW3ContainerW3Twothird(){return e.description}}}}))}]}})),(function Code(e){return{code:e.text.split("\n").map((function(e){return{fragment:{span:function span(){var t=e.indexOf("//");return t>-1?[{span:e.substring(0,t)},{"span.w3-text-green":e.substring(t,e.length)}]:e},br:{}}}}))}}),(function Pager(e){var t=e.pages.map((function(e){return e.content})),n=e.selected&&0!==t.length?e.selected:0;return{fragment:{"div.w3-bar":e.pages.map((function(t,o){return{Leaf:{ref:e.stateRef,idx:o,comp:Object.keys(t.header).map((function(e){return _defineProperty({},e,{text:t.header[e],isSelected:n===o})})).shift()}}})),div:t[n]}}}),(function Leaf(e){return{"div.w3-bar-item":_objectSpread(_objectSpread({},e.comp),{},{onClick:function onClick(){return Object(o.i)(e.ref,{selected:e.idx})}})}}),(function Tab(e){return{fragment:{class:e.isSelected?"".concat(e.class," ").concat(e.selectedClass):e.class,text:e.text}}}),(function CodeTab(e){return{Tab:{isSelected:e.isSelected,selectedClass:"w3-light-gray",class:"w3-hover-light-gray",text:e.text}}}));Object(o.b)((function code(e){return{"div.w3-container.w3-light-gray.w3-padding.code":{text:e.text||""}}}),(function dcode(e){var t=[o.h.component("code",{text:e.es6}),o.h.component("code",{text:e.es5})],n=function change(e,n){e.parent().getFirst(".w3-light-gray").removeClasses("w3-light-gray"),e.addClasses("w3-light-gray"),e.parent().next().render(t[n])};return{div:{"div.w3-bar":[{tab:{selected:!0,text:"ES 6",change:n,idx:0}},{tab:{text:"ES 5",change:n,idx:1}}],div:function div(e){return e.append(t[0])}}}}),(function tab(e){return{"div.w3-bar-item.w3-button.w3-hover-light-gray":{class:e.selected?"w3-light-gray":"",text:e.text,onClick:function onClick(t){return e.change(o.c.wrap(t.target),e.idx)}}}}));Object(o.b)((function footer(){return{"div.w3-container.w3-border-top.w3-margin":[{"div.w3-center.w3-margin-top":function divW3CenterW3MarginTop(){return"Released under MIT lisence"}},{"div.w3-center":{content:"2018 - 2020 &copy; Jami Lu"}}]}}));var s=n(122),r=function createRmeLink(e){var t=s.dependencies["rme.js"].replace("^","");return e.replace("?",t)};Object(o.b)((function home(){return{"div.w3-container":[{h1:"RME.js"},{Text:"RME stands for Rest Made Easy. Purpose of this library is to enable user to create RESTfull webpages easily and without much configuration.\n            This library is under development and free to use under the MIT License."},{Text:"The RME is more of a library of all sorts of utility classes and methods but it can also be translated as relatively loose framework.\n            What the RME offers is relatively easy\n            way of creating restfull webpages through various utility classes. The RME is highly lightweight and it has no dependencies since\n            it has been developed straight over the plain old JavaScript. This leads to that the RME gives the JavaScript support so the user must\n            know what to use and when. The RME does not aim to very comprehensive legacy support and it should work fine on relatively up-to-date browsers.\n            Using old browsers is never recommended as it could cause safety issues."},{quote:{text:"Javascript Only"}},{quote:{text:"JavaScript Re-designed"}},{subTitle:{text:"Downloads"}},{"component:list":{list:[{text:"rme.js",link:r("https://github.com/JamiLu/RME/releases/download/v?/rme.js"),desc:"(ES6)"},{text:"rme.es5.js",link:r("https://github.com/JamiLu/RME/releases/download/v?/rme.es5.js"),desc:"(ES5)"},{text:"rme.es5.min.js",link:r("https://github.com/JamiLu/RME/releases/download/v?/rme.es5.min.js"),desc:"(Minified ES5)"}]}},{subTitle:{text:"Github"}},{"component:list":{list:[{text:"https://github.com/JamiLu/RME",link:"https://github.com/JamiLu/RME",target:"_blank"}]}},{subTitle:{text:"NPM"}},{"component:list":{list:[{text:"https://www.npmjs.com/package/rme.js",link:"https://www.npmjs.com/package/rme.js",target:"_blank"}]}}]}}));o.h.component({appDoc:function appDoc(){return{"div.w3-container":[{h1:function h1(){return"App"}},{"component:text":{text:"This class has functions to create a component that has an application state attached into it. And also has functions to create a new application and also handle\n            default application state."}},{dataTable:{key:"appList",stateRef:"appDoc1",data:o.h.storage("appList")}},{line:{}},{h1:function h1(){return"App Instance"}},{"component:text":{text:"Application instance class has functions to handle the current application state."}},{dataTable:{key:"appInstanceList",stateRef:"appDoc2",data:o.h.storage("appInstanceList")}}]}}}),o.h.component({httpDoc:function httpDoc(){return{"div.w3-container":[{h1:function h1(){return"Http"}},{"component:text":{text:"Http class implements the XMLHttpRequest and Fetch. If the browser supports Promise then promise implementation of the XMLHttpRequest is used otherwise the\n            request is made without the Promise. Such cases wont affect on syntax and it does not require any actions from the user.\n            However in order to use Fetch the user must explicitly call Http.fetch()... This is because Fetch interface is quite different to\n            the XMLHttpRequest and not all older browsers support Fetch."}},{dataTable:{key:"httpList",stateRef:"httpDoc",data:o.h.storage("httpList")}}]}}});o.h.component({templateDoc:function templateDoc(){return{"div.w3-container":[{h1:function h1(){return"Template"}},{"component:text":{text:"Template class reads a JSON format notation and creates an element tree from it.\n            The Template class has only one public method resolve that takes the template as parameter and returns\n            the created element tree."}},{dataTable:{key:"templateList",stateRef:"templateDoc",data:o.h.storage("templateList")}}]}}}),o.h.component({treeDoc:function treeDoc(){return{"div.w3-container":[{h1:function h1(){return"Tree"}},{"component:text":{text:"Tree class reads the HTML Document Tree and returns elements found from there. The Tree class does not have\n            HTML Document Tree editing functionality except setTitle(title) method that will set the title of the HTML Document."}},{"component:text":{text:'Majority of the methods in the Tree class will return found elements wrapped in an Elem instance as it offers easier\n            "operation functionalities.'}},{dataTable:{key:"treeList",stateRef:"treeDoc",data:o.h.storage("treeList")}}]}}});o.h.component({cookieDoc:function cookieDoc(){return{"div.w3-container":[{h1:function h1(){return"Cookie"}},{"component:text":{text:"Cookie interface offers an easy way to get, set or remove cookies in application logic. The Cookie interface handles Cookie objects under the hood. The cookie object may hold following values: "}},{code:{text:'{\n    name: "name",\n    value: "value",\n    expiresDate: "expiresDate e.g. Date.toUTCString()",\n    cookiePath: "cookiePath absolute dir",\n    cookieDomain: "cookieDomain e.g example.com",\n    setSecureBoolean: true|false\n}'}},{"component:text":{text:"The cookie object also has methods toString() and setExpired(). Notice that setExpired() method wont delete the cookie but merely\n            sets it expired. To remove a cookie you should invoke remove(name) method of the Cookie interface."}},{dataTable:{key:"cookie",stateRef:"cookieDoc1",data:o.h.storage("cookieList")}},{br:{}},{subTitle:{text:"CookieInstance"}},{dataTable:{key:"cookie2",stateRef:"cookieDoc2",data:[{name:"toString()",description:"Retuns string presentation of the cookie object."},{name:"setExpired()",description:"Sets the cookie expired. Will not delete the the cookie."}]}}]}}}),o.h.component({sessionDoc:function sessionDoc(){return{"div.w3-container":[{h1:function h1(){return"Session"}},{"component:text":{text:"Session class is a wrapper interface for the SessionStorage and thus provides get, set, remove and clear methods of the SessionStorage."}},{dataTable:{key:"session",stateRef:"sessionDoc",data:o.h.storage("sessionList")}}]}}}),o.h.component({storageDoc:function storageDoc(){return{"div.w3-container":[{h1:function h1(){return"Storage"}},{"component:text":{text:"Storage class is a wrapper interface for the LocalStorage and thus provides get, set, remove and clear methods of the LocalStorage."}},{dataTable:{key:"storage",stateRef:"storageDoc",data:o.h.storage("storageList")}}]}}});o.h.component({browserDoc:function browserDoc(){return{"div.w3-container":[{h1:function h1(){return"Browser"}},{"component:text":{text:"Browser class contains all the rest utility functions which JavaScript has to offer from Window, Navigator, Screen, History, Location objects."}},{dataTable:{key:"browserList",stateRef:"browserDoc",data:o.h.storage("browserList")}}]}}}),o.h.component({keyDoc:function keyDoc(){return{"div.w3-container":[{h1:function h1(){return"Key"}},{"component:text":{text:"Key class does not have any methods as it only contains key mappings for keyevent e.g."}},{tptext:{text:"Event handler function gets the 'event' parameter."}},{code:{text:"onKeyDown(function(event) {\n    if(event.key === Key.ENTER)\n    //do something.\n});"}},{dataTable:{key:"keyList",stateRef:"keyDoc",data:o.h.storage("keyList")}}]}}});function exampleViewer_ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function exampleViewer_objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?exampleViewer_ownKeys(Object(n),!0).forEach((function(t){exampleViewer_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):exampleViewer_ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function exampleViewer_defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object(o.b)((function rmeDoc(){return{"div.w3-container":{h1:"RME",Text:"RME class is a core of the RME library. The RME class offers functionality to start a RME application, control components, external script files\n            and rme storage.",dataTable:{stateRef:"rmeDoc",data:o.h.storage("rmeList")}}}}),(function elemDoc(){return{"div.w3-container":[{h1:"Elem"},{paragraph:[{sline:{text:"Elem class is a wrapper class for HTMLDocument element JavaScript object. This object constructor\n                takes one parameter that can be either type of a string or a HTMLDocument. If the parameter is type of the string\n                then a new HTMLDocument of that type will be created otherwise if the type is the HTMLDocument then\n                that HTMLDocument will be wrapped with this Elem instance and new element wont be created. All setter methods and event listener\n                methods will return an instance of this class which enables chaining of methods that makes code even more compact.\n                For more information go to: "}},{navLink:{href:"#elements-explained",text:"Elements Explained"}},{sline:{text:"."}}]},{dataTable:{key:"elemList",stateRef:"elemDoc",data:o.h.storage("elemList")}}]}}),(function routerDoc(){return{"div.w3-container":[{h1:"Router"},{paragraph:[{sline:{text:"Router class takes a root element in which it will render other route elements. Find out how to use the Router go to: "}},{navLink:{href:"#router-explained",text:"Router Explained"}},{sline:{text:"."}}]},{dataTable:{key:"routerList",stateRef:"routerDoc",data:o.h.storage("routerList")}}]}}),(function utilDoc(){return{"div.w3-container":{h1:"Util",Text:"General Utility methods.",dataTable:{stateRef:"utilDoc",data:o.h.storage("utilList")}}}}),(function messagesDoc(){return{"div.w3-container":[{h1:"Messages"},{paragraph:[{sline:{text:"Messages class handles internationalization. The class offers public methods that enable easy using of translated content.\n                Elem and Template classes have messages functionality integrated. Read how to use the Messages in here: "}},{navLink:{href:"#messages-explained",text:"Messages Explained"}},{sline:{text:"."}}]},{dataTable:{key:"messagesList",stateRef:"messagesDoc",data:o.h.storage("messagesList")}}]}}),(function EventPipeDocList(){return{"div.w3-container":{h1:"EventPipe",Text:"EventPipe class can be used to multicast and send custom events to registered listeners. Each event in an event queue will be sent to each registerd listener.",dataTable:{stateRef:"eventPipeListDoc",data:o.h.storage("eventPipeList")},tptext:"Send an example event.",code:"EventPipe.send({\n    type: 'SOME_CUSTOM_EVENT',\n    payload\n});",fragment:{tptext:"Receive the example event.",code:"EventPipe.receive(event => {\n    switch(event.type) {\n      case 'SOME_CUSTOM_EVENT':\n      ....\n    }\n});"}}}}));Object(o.b)((function ViewerTab(e){return{"div.w3-bar-item.w3-button.w3-hover-light-gray":{class:e.idx===e.selected?"w3-light-gray":"",text:e.text,onClick:function onClick(){e.idx!==e.selected&&o.a.setState(e.viewerRef,(function(t){return exampleViewer_objectSpread(exampleViewer_objectSpread({},t),{},{selected:e.idx})}))}}}}),Object(o.g)((function ExampleViewer(e){var t=e.title.toLowerCase().replace(/ /g,"");o.a.getState(e.stateRef).stateSet||o.f.setTimeout((function(){o.a.setState(e.stateRef,(function(){return exampleViewer_objectSpread({stateSet:!0},e.state)}))}));var n=[e.code,e.es6,e.es5].map((function(n,o){return{"div.w3-container.w3-padding":function divW3ContainerW3Padding(a){0===o&&a.setId(t),o>0&&a.addClasses("code"),o>0&&a.setText(n),0===o&&a.append(n.call(e,e))}}}));return{div:{h3:{text:e.title},"div.w3-card-4":{"div.w3-bar.w3-border-bottom.w3-border-light-gray":["View","ES 6","ES 5"].map((function(t,n){return{ViewerTab:{viewerRef:e.stateRef,selected:e.selected,text:t,idx:n}}})),"div.w3-container.w3-light-gray":n[e.selected]}}}})));Object(o.b)((function Lister(e){return{ul:e.list}}));Object(o.b)((function Form(e){return{div:{"label[for=fname]":{text:"First name"},"input#fname[type=text][name=fname][placeholder=First name]":{value:e.fname||"",onInput:e.input},br:{},"label[for=lname]":{text:"Last name"},"input#lname[type=text][name=lname][placeholder=Last name]":{value:e.lname||"",onInput:e.input}}}}),(function Header(e){return{h5:function h5(){return"Welcome ".concat(e.fname||""," ").concat(e.lname||"")}}}));function basicsPage_toConsumableArray(e){return function basicsPage_arrayWithoutHoles(e){if(Array.isArray(e))return basicsPage_arrayLikeToArray(e)}(e)||function basicsPage_iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function basicsPage_unsupportedIterableToArray(e,t){if(!e)return;if("string"==typeof e)return basicsPage_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return basicsPage_arrayLikeToArray(e,t)}(e)||function basicsPage_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function basicsPage_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function basicsPage_ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function basicsPage_objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?basicsPage_ownKeys(Object(n),!0).forEach((function(t){basicsPage_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):basicsPage_ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function basicsPage_defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function example_ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function example_objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?example_ownKeys(Object(n),!0).forEach((function(t){example_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):example_ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function example_defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object(o.b)((function FilterTable(e){return{"table[style=border: 1px solid #000000; border-collapse: collapse]":e.data.map((function(e){return{tr:[{"td[style=border: 1px solid #000000; border-collapse: collapse]":e.abr},{"td[style=border: 1px solid #000000; border-collapse: collapse]":e.name}]}}))}})),o.h.run((function(){for(var e=[],t="AF - AFGHANISTAN;    AL - ALBANIA;    DZ - ALGERIA;    AS - AMERICAN SAMOA;    AD - ANDORRA;    AO - ANGOLA;    AI - ANGUILLA;    AQ - ANTARCTICA;    AG - ANTIGUA AND BARBUDA;    AR - ARGENTINA;    AM - ARMENIA;    AW - ARUBA;    AU - AUSTRALIA;    AT - AUSTRIA;    AZ - AZERBAIJAN;    BS - BAHAMAS;    BH - BAHRAIN;    BD - BANGLADESH;    BB - BARBADOS;    BY - BELARUS;    BE - BELGIUM;    BZ - BELIZE;    BJ - BENIN;    BM - BERMUDA;    BT - BHUTAN;    BO - BOLIVIA;    BA - BOSNIA AND HERZEGOVINA;    BW - BOTSWANA;    BV - BOUVET ISLAND;    BR - BRAZIL;    IO - BRITISH INDIAN OCEAN TERRITORY;    BN - BRUNEI DARUSSALAM;    BG - BULGARIA;    BF - BURKINA FASO;    BI - BURUNDI;    KH - CAMBODIA;    CM - CAMEROON;    CA - CANADA;    CV - CAPE VERDE;    KY - CAYMAN ISLANDS;    CF - CENTRAL AFRICAN REPUBLIC;    TD - CHAD;    CL - CHILE;    CN -CHINA;    CX -CHRISTMAS ISLAND;    CC - COCOS (KEELING) ISLANDS;    CO - COLOMBIA;    KM - COMOROS;    CG - CONGO;    CD - CONGO, THE DEMOCRATIC REPUBLIC OF;    CK - COOK ISLANDS;    CR - COSTA RICA;    CI - CÔTE D'IVOIRE;    HR - CROATIA;    CU - CUBA;    CY - CYPRUS;    CZ - CZECH REPUBLIC;    DK - DENMARK;    DJ - DJIBOUTI;    DM - DOMINICA;    DO - DOMINICAN REPUBLIC;    EC - ECUADOR;    EG - EGYPT;    SV - EL SALVADOR;    GQ - EQUATORIAL GUINEA;    ER - ERITREA;    EE - ESTONIA;    ET - ETHIOPIA;    FK - FALKLAND ISLANDS (MALVINAS);    FO -FAROE ISLANDS;    FJ - FIJI;    FI - FINLAND;    FR - FRANCE;    GF - FRENCH GUIANA;    PF - FRENCH POLYNESIA;    TF - FRENCH SOUTHERN TERRITORIES;    GA - GABON;    GM - GAMBIA;    GE - GEORGIA;    DE - GERMANY;    GH - GHANA;    GI - GIBRALTAR;    GR - GREECE;    GL - GREENLAND;    GD - GRENADA;    GP - GUADELOUPE;    GU - GUAM;    GT - GUATEMALA;    GN - GUINEA;    GW - GUINEA-BISSAU;    GY - GUYANA;    HT - HAITI;    HM - HEARD ISLAND AND MCDONALD ISLANDS;".split(";"),n=0;n<t.length;){var a=t[n].split("-");a[0]&&a[1]&&e.push({abr:a[0].trim().toLowerCase(),name:a[1].trim().toLowerCase()}),n++}o.h.storage("tableData",e)})),o.h.component({basics:function basics(){return{div:[{h1:{text:"Basics"}},{ExampleViewer:{selected:0,stateRef:"listingExample",title:"Todo List Example",state:{list:[{li:"What should I do today?"}]},code:function code(e){return{div:{"input[placeholder=Type & Press Enter to Add]":{onKeyDown:function onKeyDown(t){t.key===o.d.ENTER&&(Object(o.i)(e.stateRef,(function(e){return basicsPage_objectSpread(basicsPage_objectSpread({},e),{},{list:[].concat(basicsPage_toConsumableArray(e.list),[{li:t.target.value}])})})),t.target.value="")}},Lister:{list:e.list}}}},es6:"const TodoExample = props => ({\n    div: {\n        'input[placeholder=Type & Press Enter to Add]': {\n            onKeyDown: event => {\n                if(event.key === Key.ENTER) {\n                    useState(props.stateRef, state => ({\n                        ...state,\n                        list: [...state.list, {li: event.target.value}]\n                    }));\n                    event.target.value = '';\n                }\n            }},\n        Lister: {list: props.list}\n    }\n});\n\nconst Lister = props => ({ ul: props.list });\n\nComponent(Lister, bindState(TodoExample, {list: [{li: 'What should I do today?'}]}));",es5:"App.component({ TodoExample: props => ({\n    div: {\n        'input[placeholder=Type & Press Enter to Add]': {\n            onKeyDown: function(event) {\n                if(event.key === Key.ENTER) {\n                    var list = App.getState(props.stateRef).list;\n                    list.push({li: event.target.value});\n                    event.target.value = '';\n                    useState(props.stateRef: {list: list}});\n                }\n            }},\n        Lister: {list: props.list}\n    }\n})});\n\nRME.component({ Lister: function(props) {\n    return {ul: props.list}\n}});\n\nApp.setState('TodoExample', {\n    list: [{li: 'What should I do today?'}]\n});"}},{ExampleViewer:{selected:0,stateRef:"formExample",title:"Form Example",state:{},code:function code(e){return{div:{Header:{fname:e.fname,lname:e.lname},Form:{fname:e.fname,lname:e.lname,input:function input(t){Object(o.i)(e.stateRef,(function(e){return basicsPage_objectSpread(basicsPage_objectSpread({},e),{},basicsPage_defineProperty({},t.target.name,t.target.value))}))}}}}},es6:"const FormExample = props => ({\n    div: {\n        Header: {fname: props.fname, lname: props.lname},\n        Form: {\n            fname: props.fname,\n            lname: props.lname,\n            input: event => {\n                useState(props.stateRef, state => ({\n                    ...state,\n                    [event.target.name]: event.target.value\n                }));\n            }\n        }\n    }\n});\n\nconst Header = props => ({\n    h5: `Welcome ${props.fname || ''} ${props.lname || ''}` \n});\n\nconst Form = props => ({\n    div: {\n        'label[for=fname]': {\n            text: 'First name'\n        },\n        'input#fname[type=text][name=fname][placeholder=First name]': {\n            value: props.fname || '',\n            onInput: props.input\n        },\n        br: {},\n        'label[for=lname]': {\n            text: 'Last name'\n        },\n        'input#lname[type=text][name=lname][placeholder=Last name]': {\n            value: props.lname || '',\n            onInput: props.input\n        }\n    }\n});\n\nComponent(Header, Form, bindState(FormExample));",es5:"App.component({ FormExample: props => ({\n    div: {\n        Header: {fname: props.fname, lname: props.lname},\n        Form: {\n            fname: props.fname,\n            lname: props.lname,\n            input: function(event) {\n                var state = useState(props.stateRef);\n                state[event.target.value] = event.target.value;\n                useState(props.stateRef, state);\n            }\n        }\n    }\n})});\n\nRME.component({ Header: function(props) {\n    return {\n        h5: 'Welcome' + props.fname + ' ' + props.lname\n    }\n}});\n\nRME.component({ Form: function(props) {\n    return {\n        div: {\n            'label[for=fname]': {\n                text: 'First name'\n            },\n            'input#fname[type=text][name=fname][placeholder=First name]': {\n                value: props.fname || '',\n                onInput: props.input\n            },\n            br: {},\n            'label[for=lname]': {\n                text: 'Last name'\n            },\n            'input#lname[type=text][name=lname][placeholder=Last name]': {\n                value: props.lname || '',\n                onInput: props.input\n            }\n        }\n    }\n}});"}},{ExampleViewer:{selected:0,stateRef:"tableFiltering",title:"Filter Table Example",state:{},code:function code(e){return{div:{"input[type=text][placeholder=Type to Filter]":{value:e.keyword||"",onInput:function onInput(t){Object(o.i)(e.stateRef,(function(e){return basicsPage_objectSpread(basicsPage_objectSpread({},e),{},{keyword:t.target.value,data:o.h.storage("tableData").filter((function(e){return e.name.search(t.target.value)>-1}))})}))}},FilterTable:{data:e.data||o.h.storage("tableData")}}}},es6:"const FilterExample = props => ({\n    div: {\n        'input[type=text][placeholder=Type to Filter]': {\n            value: props.keyword || '',\n            onInput: event => {\n                useState(props.stateRef, state => ({\n                    ...state,\n                    keyword: event.target.value,\n                    data: RME.storage('tableData')\n                        .filter(val => val.name.search(event.target.value) > -1)\n                }));\n            }\n        },\n        FilterTable: {data: props.data || RME.storage('tableData')}\n    }\n});\n\nconst FilterTable = props => ({\n    'table[style=border: 1px solid #000000; border-collapse: collapse]': props.data.map(val => ({\n        tr: [\n            {'td[style=border: 1px solid #000000; border-collapse: collapse]': val.abr},\n            {'td[style=border: 1px solid #000000; border-collapse: collapse]': val.name}\n        ]\n    }))\n});\n\nComponent(FilterTable, bindState(FilterExample));",es5:"App.component({ FilterExample: props => ({\n    div: {\n        'input[type=text][placeholder=Type to Filter]': {\n            value: props.keyword || '',\n            onInput: function(event) {\n                useState(props.stateRef {\n                    keyword: event.target.value,\n                    data: RME.storage('tableData').filter(function(val) {\n                        return val.name.search(event.target.value) > -1\n                    })}\n                });\n            }\n        },\n        FilterTable: {data: props.data || RME.storage('tableData')}\n    }\n})});\n\nRME.component({ FilterTable: function(props) {\n    'table[style=border: 1px solid #000000; border-collapse: collapse]': props.data.map(val => ({\n        tr: [\n            {'td[style=border: 1px solid #000000; border-collapse: collapse]': val.abr},\n            {'td[style=border: 1px solid #000000; border-collapse: collapse]': val.name}\n        ]\n    }))\n}});"}}]}}});Object(o.b)((function simpleExample(){return{"div.w3-container":[{h1:"Put things together"},{Text:{text:"Let's create a small example application where we put basic aspects of the RME library together."}},{tptext:{text:"Example index.html."}},{code:{text:'<!DOCTYPE html>\n<html>\n<head>\n    <script src="rme.es5.min.js"><\/script>\n    <title>App page</title>\n</head>\n<body>\n    <div id="app"></div>\n</body>\n</html>'}},{tptext:{text:"Example index.js."}},{CodeExamplePages:{}}]}}),Object(o.g)((function CodeExamplePages(e){return{Pager:example_objectSpread(example_objectSpread({},e),{},{pages:[{header:{CodeTab:"Use the createApp function"},content:{Code:{text:"// First lets create a app component.\nconst App = () => ({\n    div: {\n        'div.menu': [\n            {NavLink: {href: 'en', text: 'English', onClick: Messages.lang}},\n            {NavLink: {href: 'fi', text: 'Suomi', onClick: Messages.lang}},\n            {hr: {}},\n            {NavLink: {href: '/', text: 'Page 1', onClick: Router.navigate}},\n            {NavLink: {href: '/page2', text: 'Page 2', onClick: Router.navigate}},\n            {hr: {}}\n        ],\n        'div#root': {}\n    }\n});\n\n// Then let's create the application itself and configure the RME to use these components together.\nconfigure(createApp('#app', App), Router, Messages);\n\n// Then let's create a router.\nRouter.url(true).root('#root').routes([\n    {route: '/', elem: 'Page1'},\n    {route: '/page2', elem: 'Page2'}\n]);\n\n// For this example we hard code some example messages.\nRME.storage('en', {\n    'message.hello.world': 'Hello World Page 1',\n    'message.page2':'Page 2'\n});\nRME.storage('fi', {\n    'message.hello.world': 'Terve Maailma Sivu 1',\n    'message.page2':'Sivu 2'\n});\n\n// Then define a message loader function.\nMessages.load((locale, setMessages) => setMessages(RME.storage(locale)));\n//And load the messages.\nMessages.lang('en');\n\n// Now create page components for the router and menu.\nconst Page1 = () => ({ h1: 'message.hello.world' });\nconst Page2 = () => ({ h1: 'message.page2' });\nconst NavLink = props => ({ 'a[style=margin: 0px 5px]': props });\n\n// Register the components.\nComponent(Page1, Page2, NavLink);"}}},{header:{CodeTab:"Use the App class"},content:{Code:{text:"// First let's create a default application.\nApp.root('#app').create({\n    div: {\n        'div.menu': [\n            {NavLink: {href: 'en', text: 'English', onClick: Messages.lang}},\n            {NavLink: {href: 'fi', text: 'Suomi', onClick: Messages.lang}},\n            {hr: {}},\n            {NavLink: {href: '/', text: 'Page 1', onClick: Router.navigate}},\n            {NavLink: {href: '/page2', text: 'Page 2', onClick: Router.navigate}},\n            {hr: {}}\n        ],\n        'div#root': {}\n    }\n});\n\n// Configure the RME to use these components together.\nRME.use({\n    router: Router,      //Give static reference\n    messages: Messages,  //Give static reference\n    app: App.get(),      //Give default app instance\n});\n\n// Then let's create a router.\nRouter.url(true).root('#root').routes([\n    {route: '/', elem: 'Page1'},\n    {route: '/page2', elem: 'Page2'}\n]);\n\n// For this example we hard code some example messages.\nRME.storage('en', {\n    'message.hello.world': 'Hello World Page 1',\n    'message.page2':'Page 2'\n});\nRME.storage('fi', {\n    'message.hello.world': 'Terve Maailma Sivu 1',\n    'message.page2':'Sivu 2'\n});\n\n// Then define a message loader function.\nMessages.load((locale, setMessages) => setMessages(RME.storage(locale)));\n// And load the messages.\nMessages.lang('en');\n\n// Now create page components for the router and menu.\nconst Page1 = () => ({ h1: 'message.hello.world' });\nconst Page2 = () => ({ h1: 'message.page2' });\nconst NavLink = props => ({ 'a[style=margin: 0px 5px]': props });\n\n// Register the components.\nComponent(Page1, Page2, NavLink);"}}}]})}}))),o.h.component({appsEx:function appsEx(){return{"div.w3-container":[{h1:"Application Explained"},{Text:"Since RME version 1.2.0 onwards the RME has the App class which begins the RME application. The App class should\n            be used to create a RME application as it enables automatic shadow tree rendering."},{tptext:"Let's create a default application."},{code:"App.create({\n    div: {\n        span: 'Hello World'\n    }\n});"},{paragraph:[{S:"Above code example will create a default application, that is automatically inserted inside the Body.\n            The Body should not have other child elements otherwise it might lead to weird behaviour when the app is re-rendering.\n            In order to avoid such cases let's create a default app with specified root element."},{B:" Root element should always be empty."}]},{tptext:"Example HTML page."},{code:'<!DOCTYPE html>\n<html>\n<head>\n    <script src="rme.es5.min.js"><\/script>\n    <title>App page</title>\n</head>\n<body>\n    <div id="app"></div>\n</body>\n</html>'},{tptext:"Default application with specified root element."},{code:"App.root('#app').create({\n    div: {\n        span: 'Hello World'\n    }\n});"},{Text:'The above application would automatically be inserted inside the div with an id "app".'},{subTitle:{text:"Named Application"}},{paragraph:[{S:"Named applications are applications that have a name. Naming applications comes handy if\n            a page contains multiple applications. It is possible to create and have multiple applications\n            on the same page. "},{B:"Though an application inside an application is not recommended and might result to weird \n            behaviour."}]},{tptext:"Named application example"},{code:"App.name('demoApp').root('#demo').create({\n    div: {\n        h1: 'Demo app'\n    }\n});"},{subTitle:{text:"Statefull components"}},{Text:"On the RME version 1.5.0 onwards is possible to use the Component function to create\n        components. The Component function is a better more clear way to create components."},{tptext:"The component below is created for the default application."},{code:"const DefaultComponent = ({\n    div: {\n        span: 'Some text\n    }\n});\n\nComponent(bindState(DefaultComponent));"},{tptext:"The component below is created for the demoApp"},{code:"const DemoAppComponent = ({\n    div: {\n        span: 'Some text'\n    }\n});\n\nComponent(bindState(DemoAppComponent, {}, 'demoApp'));"},{P:[{S:"More about the Component function at: "},{navLink:{text:"Component",href:"#component-function"}},{S:"."}]},{Text:"Before the RME version 1.5.0 this was the only way to create statfull compnents."},{tptext:"Example creates a statefull component for the default app"},{code:"App.component({defaultAppComponent: props => ({\n    div: {\n        text: 'Some Text'\n    }\n})})();"},{paragraph:[{S:"When appName is not defined "},{B:"..();"},{S:" then the component is created for the default application."}]},{tptext:"Example creates a statefull component for the demoApp"},{code:"App.component({demoComponent: props => ({\n    div: {\n        text: 'Some Text'\n    }\n})})('demoApp');"},{paragraph:[{S:"When appName is given "},{B:"..('demoApp');"},{S:" then the component is created for the particular application."}]},{paragraph:[{S:"More about how components work at: "},{navLink:{href:"#components-explained",text:"Components Explained"}},{S:"."}]},{subTitle:{text:"Application state"}},{Text:"An application state manipulation functionalities."},{tptext:"Get component state of from the default application."},{code:"App.getState('defaultAppComponent');"},{tptext:"Get component state of from the named application"},{code:"App.get('demoApp').getState('demoComponent');"},{tptext:"Set the default application component state"},{code:"App.setState('defaultAppComponent', {stateObject})"},{tptext:"Set the named application component state"},{code:"App.get('demoApp').setState('demoComponent', {stateObject})"},{P:[{S:"An application is re-rendered after each"},{B:" setState "},{S:"and"},{B:" mergeState "},{S:"call unless update boolean value is explicitly set to false."}]},{Text:""},{tptext:"Tell the application that re-render should not happen after setting the state."},{code:"App.setState('SomeComponent', prevState => ({changedState}), false);"},{tptext:"Tell the application that re-render should not happend after the state is cleared."},{code:"App.clearState('SomeComponent', false);"},{tptext:"State manipulation function examples"},{code:"App.getState('SomeComponent');\nApp.setState({SomeComponent: {someState}});\nApp.setState('SomeComponent', {someState});\nApp.setState('SomeComponent', componentPrevState => ({changedState}), updateBoolean);\nApp.setState(defaultAppPrevState => ({changedState}));\n\nApp.mergeState('SomeComponent');\nApp.mergeState({SomeComponent: {someState}});\nApp.mergeState('SomeComponent', {someState});\nApp.mergeState('SomeComponent', componentPrevState => ({changedState}), updateBoolean);\nApp.mergeState(defaultAppPrevState => ({changedState}));\n\nApp.clearState('SomeComponent');\nApp.isStateEmpty('SomeComponent');"},{P:[{S:"The App.getState(..), App.mergeState(..),  App.clearState(..) and App.isStateEmpty(..)\n                functions all work respectively. The "},{B:"..get(appName).. "},{S:"function is only needed when named applications are used."}]},{subTitle:{text:"The setState VS The mergeState"}},{Text:"The App.setState(..) function basically sets a new state but does not merge it to \n            previous state. The App.mergeState(..) function the other hand merges a new state to the\n            previous state."},{P:{B:"Difference in a nutshell. ",S:"Set function sets a new state and does not preserve previous state by default.\n            Merge function alters the previous state and thus preserves unchanged state."}},{subTitle:{text:"Update state of multiple components simultaneously"}},{Text:"The App.setState and App.mergeState functions receive multiple parameters but when\n        only one parameter is given and the parameter is an object or a function that should return \n        an object then those functions could update the state of multiple components simultaenously."},{tptext:"Use a function to update the state of two components simultaneously."},{code:"\nApp.setState(prevState => ({\n    ...prevState,\n    Component1: {\n        ...prevState.Component1,\n        abc: 'foo'\n    },\n    Component2: {\n        ...prevState.Component2,\n        hij: 'bar'\n    }\n}));"},{P:{I:"Above three dot notation (...) is used to preserve the previous state."}},{tptext:"Use an object to update tha state of two components simultaneously."},{code:"App.setState({\n    Component1: {\n        abc: 'def'\n    },\n    Component2: {\n        hij: 'klm'\n    },\n});"},{tptext:"The function mergeState could also be used."},{code:"App.mergeState(prevState => ({\n    Component1: {\n        abc: 'foo'\n    },\n    Component2: {\n        hij: 'bar'\n    }\n}));\n\nApp.mergeState({\n    Component1: {\n        abc: 'def'\n    },\n    Component2: {\n        hij: 'klm'\n    },\n});"}]}}}),o.h.component({components:function components(){return{"div.w3-container":[{h1:"Components explained"},{"component:text":"Components are resusable functions that are stored in to the RME instance by a name. The components might be an UI component or implement any kind of application logic.\n            Components are encouraged to have an unique name definition as latter defintion of the same name overrides previous."},{paragraph:[{S:"Moreover if a component name equals to the HTML 5 tag name or an attribute name then the component must be explicitly invoked when using components with templates. See "},{navLink:{href:"#templates-explained",text:"Templates Explained"}},{S:"."}]},{P:[{B:"The Components can be created in following way on the RME version 1.5.0+."}]},{tptext:"Example stateless component"},{code:"const StatelessComponent = props => ({\n    div: { span: 'Hello World' }\n});\n\nComponent(StatelessComponent);"},{P:[{S:"More about the Component function see: "},{navLink:{text:"Component",href:"#component-function"}},{S:"."}]},{tptext:"Exampe statefull component"},{code:"const StatefullComponent = props => ({\n    div: { span: 'Hello World' }\n});\n\nComponent(bindState(StatefullComponent));"},{P:[{S:"More about the bindState function see: "},{navLink:{text:"bindState",href:"#bindstate-function"}},{S:"."}]},{P:[{B:"Prior to the RME version 1.5.0 components were created in following way."}]},{tptext:"Stateless components are created by invoking a RME.component({..}); function."},{dcode:{es6:"RME.component({ statelessComponent: props => ({\n    div: {span: 'Hello World'}\n})});",es5:"RME.component({ statelessComponent: function(props) {\n    return {div: { span: 'Hello World' }}\n}});"}},{tptext:"Statefull components are created by invoking a App.component({..})(appName); function."},{dcode:{es6:"App.component({ statefullComponent: props => ({\n    div: {span: 'Hello World'}\n})})();",es5:"App.component({ statefullComponent: function(props) {\n    return {div: {span: 'Hello World' }}\n}})();"}},{paragraph:[{S:"In an example above notice that there is not appName filled in instead the name is left empty. Reason being\n                that when the appName is not filled in the default app is used. More about Applications at "},{navLink:{href:"#app-explained",text:"Application Explained"}},{S:"."}]},{tptext:"Examples above would produce following."},{code:"<div>\n    <span>Hello World</span>\n</div>"},{subTitle:{text:"Life cycle functions of the components"}},{Text:"It is possible to define four life cycle functions for each component."},{Text:"Let's assume that we had already created a LoginForm component."},{tptext:"An example describing possible life cycle functions of the component."},{code:"...\nLoginForm: {\n    onBeforeCreate: props => ...\n    shouldComponentUpdate: nextProps => ...\n    onAfterCreate: (created, props) => ...\n    onAfterRender: (componentElement, props) => ...\n}\n..."},{paragraph:[{ul:[{li:{B:"onBeforeCreate",S:" function is called before the component is created if defined. The function receives the properties that the component will receive."}},{li:{B:"shouldComponentUpdate",S:" function is called if defined. If the function is defined and returns true then \n                    the component is updated. If the function is defined and returns false the component is\n                    not updated. If the function is not defined the component is updated. The function receives\n                    nextProps object that are the props the component is about to receive."}},{li:{B:"onAfterCreate",S:" function is called after the component is created if defined. The function receives the returned value and the properties that the component received during creation."}},{li:{B:"onAfterRender",S:" function is called if defined. The function is guaranteed to be called after the component \n                    has been rendered. The function receives the component element and properties of the component \n                    as parameter."}}]}]},{subTitle:{text:"Stateless components & properties"}},{tptext:"Assume that we have a component used in a template and we pass properties to the component."},{code:"...awesomeButton: {\n    text: 'AwesomeButton',\n    idx: 0\n}...."},{tptext:"Stateless component v1.5.0+"},{code:"const AwesomeButton = props => ({\n    'div.button': {\n        text: props.text,\n        onClick: event => console.log(`Clicked button ${props.idx}`)\n    }\n});\n\nComponent(AwesomeButton);"},{tptext:{text:"Stateless component receiving properties v1.4.4."}},{dcode:{es6:"RME.component({ awesomeButton: props => ({\n    'div.button': {\n        text: props.text,\n        onClick: event => console.log(`Clicked button ${props.idx}`)\n    }\n})});",es5:"RME.component({ awesomeButton: function(props) {\n    return {\n        'div.button': {\n            text: props.text,\n            onClick: function(event) {\n                console.log('Clicked button ' + props.idx);\n            }\n        }\n    }\n}});"}},{subTitle:{text:"Statefull components & properties after the RME v1.5.0"}},{P:[{S:"On the RME version v1.5.0 onwards state is bound to the component function using the\n            bindState function. A state reference of the component is in a predefined property called "},{B:"stateRef"},{S:" of the component. By default the stateRef property has the name of the component \n            and if the property is defined manually then the state reference is possible to make unique as the\n            reference name would be the component name plus given reference string."}]},{tptext:"Example component bound to the state."},{code:"const TabView = props => ({\n    div: props.tabs.map((tab, i) => ({\n        AwesomeTab: {\n            tabViewRef: props.stateRef,\n            name: tab,\n            idx: i,\n            selected: props.selected\n        }\n    }))\n});\n\nComponent(bindState(TabView));"},{tptext:"Example component without state."},{code:"const Tab = props => ({\n    'div.tab': {\n        class: props.selected === props.idx ? 'selectedTab' : '',\n        text: props.name,\n        onClick: event => App.setState(props.tabViewRef, {selected: props.idx})\n    }\n});\n\nComponent(Tab);"},{tptext:"Example use case."},{code:"...\nTabView: {\n    stateRef: 'customStateRef',\n    tabs: ['one','two','three'],\n    selected: 0\n}\n..."},{subTitle:{text:"Statefull components & properties before the RME v1.5.0"}},{paragraph:[{S:"Statefull components have some predefinitions which are "},{B:"key"},{S:" and "},{B:"ref"},{S:"."}]},{"ul.w3-large":[{li:[{B:"key"},{S:" optional string value that will make the component state reference unique."}]},{li:[{B:"ref"},{S:" reference to the component state, is component name + key value."}]}]},{paragraph:[{S:"If a key is given to the statefull component then its state is made unique by the key value. As by default the component state is referenced by the name of the component."}]},{tptext:"Here is a simple example."},{code:"...{tabber: {\n    key: 'stateRef',\n    tabs: ['one','two'],\n    selected: 0\n}}"},{tptext:'Statefull component by design receives a property "ref" that is the reference to the component state.'},{dcode:{es6:"App.component({tabber: props => ({\n    div: props.tabs.map((tab, i) => ({\n        awesomeTab: {\n            tabberRef: props.ref,\n            name: tab,\n            idx: i,\n            selected: props.selected\n        }\n    }))\n})})();",es5:"App.component({tabber: function(props) {\n    return {\n        div: props.tabs.map(function(tab, i) {\n            return {\n                awesomeTab: {\n                    tabberRef: props.ref,\n                    name: tab,\n                    idx: i,\n                    selected: props.selected\n                }\n            }\n        });\n    }\n}})();"}},{Text:"In above example we pass the tabber component reference to its child component. This way the child component will know to which parent component it belongs and which state to manipulate."},{tptext:"AwesomeTab component could be something like this."},{dcode:{es6:"RME.component({awesomeTab: props => ({\n    'div.tab': {\n        class: props.selected === props.idx ? 'selectedTab' : '',\n        text: props.name,\n        onClick: (event) => props.selected !== props.idx\n            ? App.setState(props.tabberRef, {selected: props.idx})\n            : undefined\n    }\n})});",es5:"RME.component({awesomeTab: function(props) {\n    return {\n        'div.tab': {\n            class: props.selected === props.idx ? 'selectedTab' : '',\n            text: props.name,\n            onClick: function(event) {\n                props.selected !== props.idx\n                    ? App.setState(props.tabberRef, {selected: props.idx})\n                    : undefined\n            }\n        }\n    }\n}});"}},{Text:"The child component does not need to be a statefull component eventhough the parent component is. Infact it is better design that component state is\n            kept in the parent component."},{paragraph:[{S:"The tabber and the awesomeTab example life cycle would be following: The tab is clicked -> if not selected -> update the tabber state with newly selected index ->\n                application re-renders -> the awesomeTab component receives new properties -> the new properties contain newly selected index -> the tab is rendered selected according the received selected index."}]},{subTitle:{text:"RME.component get component usage"}},{tptext:"Components can also be retrieved using RME.component function though it is not usual to do so."},{code:"RME.component('someComponent', {prop1: 'some prop1', prop2: 'some prop2'});"}]}}}),o.h.component({messagesEx:function messagesEx(){return{"div.w3-container":[{h1:function h1(){return"Messages explained"}},{"component:text":{text:"Messages class handles internationalization. The class offers public methods that enable easy using of translated content.\n            The Elem and the Template classes have the Messages functionality integrated."}},{"component:text":{text:"Usage and initialization of the Messages class is relatively simple and straightforward.\n            In order not to hard code the default locale of the webpage, we could fist ask the server for a current locale. \n            When the locale is returned from the server. Then simply set the locale as the current locale.\n            After this we could load or choose the translated messages to use."}},{tptext:{text:"Following code clip could ask for a current locale from server and then set it to be used in the Messages class."}},{code:{text:"Http.get('/lang/').then(response => Messages.lang(response)});"}},{"component:text":{text:"Messages.load function is invoded right after the locale is set by invoking the Messages.lang function. \n            The load handler receives two parameters from which the first is the locale that was given by the function Messages.lang.\n            The second parameter is a function setMessages that receives either an array or an object of the next messages to be used."}},{tptext:{text:"Code clip below asks the server for the translated messages for the given locale and then uses the setMessage function to set the messages."}},{dcode:{es6:"Messages.load((locale, setMessages) => {\n    Http.get(locale).then(response => setMessages(response));\n});",es5:"Messages.load(function(locale, setMessages) {\n    Http.get(locale)\n        .then(function(response) {\n            setMessages(response);\n        });\n});"}},{tptext:{text:"Assuming that we already had loaded all the messages in advance then the load function could be something like this."}},{code:{text:"Messages.load((locale, setMessages) => setMessages(RME.storage(locale)));"}},{subTitle:{text:"Messages lifecycle"}},{"component:text":{text:"Lifecycle of the Messages is relatively simple."}},{tptext:{text:"Ivoking a function Messages.lang(locale)"}},{code:{text:"Messages.lang(localeString|event);"}},{"component:text":{text:"If a given parameter is an event then event.preventDefault() is invoked and a locale is ought resolve from a target of the event."}},{tptext:{text:"Will automatically invoke a loader function that is defined inside the Messages.load((locale, setMessages) => {..})."}},{code:{text:"Messages.load((locale, setMessages) => setMessages(..)));"}},{tptext:{text:"Invoking setMessages function will automatically change language of translated elements."}},{subTitle:{text:"Supported messages structure"}},{"component:text":{text:"The Messages class supports two kinds of message structures. One is an object that contains key value pairs and the second is an array that contains\n            objects that have key value pair."}},{tptext:{text:"The object structure"}},{code:{text:"var messages_en_obj = {\n    'page.hello.world': 'Hello World',\n    'page.sample.text1': 'Example text1',\n    'page.sample.text2': 'Here is a long text',\n    'page.param.example': 'Hello {0} {1}, Welcome {2}'\n}"}},{tptext:{text:"The array structure"}},{code:{text:"var messages_en = [\n    {'page.hello.world': 'Hello World'},\n    {'page.sample.text1': 'Example text1'},\n    {'page.sample.text2': 'Here is a long text'},\n    {'page.param.example': 'Hello {0} {1}, Welcome {2}'}\n];"}},{"component:text":{text:"Translated content also supports message parameters. The parameters are marked with an index number starting from\n            zero (0) inside the curly braces e.g. {0}."}},{subTitle:{text:"Using the Messages with the Elem and the Template"}},{"component:text":{text:"The Elem and the Template objects have integrated translated messages capability inside."}},{tptext:{text:"Templates have the message attribute for the translated content."}},{code:{text:'Template.resolve({\n    p: {\n        message: "page.hello.world"\n    }\n});'}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello World</p>"}},{"component:text":{text:"Now lets try using the message parameters."}},{code:{text:'Template.resolve({\n    p: {\n        message: "page.param.example{sir}{Richard}{to Finland.}"\n    }\n});'}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}},{line:{}},{"component:text":{text:"We can also use the message keywords when using function in the template."}},{tptext:{text:"Now let's define a translated template."}},{code:{text:"Template.resolve({\n    p: () => 'page.param.example{sir}{Richard}{to Finland.}'\n});"}},{tptext:{text:"The code above will result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}},{line:{}},{"component:text":{text:"We could use the translated content on the Elem object also but usually this is not the case."}},{tptext:{text:"Assuming that the messages above are in use. We could create an element that would print the translated content found by a message key."}},{code:{text:"new Elem('p').message('page.hello.world');"}},{tptext:{text:"The code clip above would cause the following element be created."}},{code:{text:"<p>Hello World</p>"}},{"component:text":{text:"Lets try the same using the message parameters."}},{code:{text:"new Elem('p').message('page.param.example', 'sir', 'Richard', 'to Finland.');"}},{tptext:{text:"The code above would result to."}},{code:{text:"<p>Hello sir Richard, Welcome to Finland.</p>"}}]}}}),o.h.component({storageEx:function storageEx(){return{"div.w3-container":[{subTitle:{text:"RME storage explained"}},{"component:text":{text:"RME storage is a RME global instance storage in which data is stored using a appropriate method. \n            You should not confuse the RME storage with a Storage class that is the LocalStorage interface."}},{"paragraph.w3-text-teal":[{sline:{text:"Method saves a value"}},{iline:{text:" bar "}},{sline:{text:"with a key"}},{iline:{text:" foo "}},{sline:{text:"into the RME global storage."}}]},{code:{text:"RME.storage('foo', 'bar');"}},{paragraph:{color:"w3-text-teal",lines:[{sline:{text:"Method gets the saved "}},{iline:{text:"bar"}},{sline:{text:" value from the RME global instance storage with the key "}},{iline:{text:"foo"}},{sline:{text:"."}}]}},{code:{text:"RME.storage('foo');"}},{"component:text":{text:"Remember if different data is saved to the RME storage with same key then the data is overridden."}},{"component:text":{text:"Sometimes it might come very handy to be able to notify or do some specific action after new data is saved to the RME instance storage. \n            This is possible by creating a onStorageChange(..) listener function."}},{tptext:{text:"Following method is invoded if defined and it automatically gets new storage state as a parameter."}},{dcode:{es6:"RME.onStorageChange(newStorageState => {\n    //do some action after updating the storage.\n});",es5:"RME.onStorageChange(function(newStorageState) {\n    //do some action after updating the storage.\n});"}}]}}}),o.h.component({rmeEx:function rmeEx(){return{fragment:{"div.w3-container":[{h1:function h1(){return"RME explained"}},{paragraph:[{sline:{text:"The RME offers functions such as component, script and storage. More about components in "}},{navLink:{href:"#components-explained",text:"Components Explained"}},{sline:{text:". Information how an application should be started on RME version 1.2.0 onwards is here: "}},{navLink:{href:"#app-explained",text:"Application Explained"}},{sline:{text:"."}}]},{tptext:{text:"Prior to RME version 1.2.0 the application was started using these two functions."}},{"ul.w3-large":[{li:function li(){return"The RME.run() is run immediately when defined. If multiple run() functions are defined they are run in definition order."}},{li:function li(){return"The RME.ready() is run after the Body is ready. If multiple ready() functions are defined the latter definition is run."}}]},{subTitle:{text:"RME use explained"}},{paragraph:[{S:{text:"RME.use(..) function receives one configuration object that simply tells the RME to use\n                    configured classes together. The configuration object has three optional parameters "}},{B:{text:"router"}},{S:{text:", "}},{B:{text:"messages"}},{S:{text:" and "}},{B:{text:"app"}},{S:{text:"."}}]},{"ul.w3-large":[{li:{B:{text:"router "},S:{text:"takes static Router reference."}}},{li:{B:{text:"messages "},S:{text:"takes static Messages reference."}}},{li:{B:{text:"app "},S:{text:"takes Application instance reference."}}}]},{tptext:{text:"Following code clip will configure the RME to use Router, Messages and a default Application instance together."}},{code:{text:"RME.use({\n    router: Router,\n    messages: Messages,\n    app: App.get()\n});"}},{subTitle:{text:"RME script explained"}},{"component:text":{text:"RME script function imports an appropriate script file into the head. This is not needed when working on NPM based projects."}},{tptext:{text:"Following line would import a script file into the head."}},{code:{text:"RME.script('resources/myScript.js')"}}],storageEx:{}}}}}),o.h.component({httpEx:function httpEx(){return{"div.w3-container":[{h1:function h1(){return"Http explained"}},{"component:text":{text:"Http is an interface that offers easy to use method to create asynchronous requests to server. The Http interface implements XMLHttpRequest and Fetch interfaces and adds\n            some easy to use features on top of them. By default the Http uses XMLHttpRequest with Promise if supported by browser otherwise the Promise is not used.\n            Using the Promise happens under the hood so if the browser does not support the Promise it wont affect to user anyhow and it does not affect on syntax. The user might not even\n            notice that where the Http uses the Promise or not."}},{"component:text":{text:"In order to use Fetch however the user must explicitly call the Http.fetch().. functions and then the Fetch is used. This is because the Fetch interface is not directly\n            compatible with the XMLHttpRequest. Also the Fetch is not supported by older browsers."}},{"component:text":{text:"The Http interface by default uses Content-Type application/json. Which means that posted and retrived data is automatically parsed and stringified.\n            When an object is given as data parameter it will be stringified by default and response objects will be parsed to JSON objects by default."}},{"component:text":{text:"For example. Lets assume that we have some data in a variable called state and we want to posit the data to server. The server will also return the updated data which will then be\n            stored into the RME instance storage for later use."}},{tptext:{text:"Using XMLHttpRequest to post the data to server."}},{dcode:{es6:'Http.post("/example/data/", state)\n    .then(response => RME.storage("data", response))\n    .catch(error => console.log(error));',es5:'Http.post("/example/data/", state)\n    .then(function(response) {\n        RME.storage("data", response);\n    }).catch(function(error) {\n        console.log(error);\n    });'}},{tptext:{text:"The same request using Http.fetch."}},{code:{text:"Http.fetch().post('/example/data/', state)\n    .then(success => {\n        if(success.ok)\n            success.json();\n        else\n            throw new Error(success);\n    }).then(response => RME.storage('data', response))\n        .catch(error => console.log(error));"}},{tptext:{text:"Using XMLHttpRequest to get the data from sever."}},{dcode:{es6:"Http.get('/example/data/')\n    .then(response => RME.storage('data', response))\n    .catch(error => console.log(error));",es5:"Http.get('/example/data/')\n    .then(function(response) {\n        RME.storage('data', response);\n    }).catch(function(error) {\n        console.log(error);\n    });"}},{tptext:{text:"The same request using Http.fetch."}},{code:{text:"Http.fetch().get(\"/example/data/\")\n    .then(success => {\n        if(success.ok)\n            success.json();\n        else\n            throw new Error(success);\n    }).then(response => {\n        RME.storage('data', response);\n    }).catch(error => {\n        console.log(error);\n    });"}}]}}}),o.h.component({elemsEx:function elemsEx(){return{"div.w3-container":[{h1:function h1(){return"Elements explained"}},{"component:text":{text:"Elements are renderable objects. Elem class is a wrapper object for HTMLDocument element.\n            Tree and Template classes use Elem class. The Elem class makes handling of the\n            HTMLDocument elements easier as it offers many easy to use features."}},{"component:text":{text:"Creating a new element is easy but when the element is created it is still not attached to the HTMLDocument tree."}},{tptext:{text:"Lets create an element div."}},{code:{text:"new Elem('div');"}},{"component:text":{text:"Since the div without content wont be visible we can add an element p inside the div."}},{tptext:{text:"Lets create an element p inside the div and give some text for the p."}},{code:{text:"new Elem('div').append(new Elem('p').setText('this is a test'));"}},{"component:text":{text:"The elements needs to be attached to the HTMLDocument tree in order to show up on the HTML page."}},{tptext:{text:"Now we attach the div and the p to the Body."}},{code:{text:"Tree.getBody().append(new Elem('div').append(new Elem('p').setText('this is a test')));"}},{paragraph:[{sline:{text:"Eventhough this way to create and attach an element to the Body is relatively simple and nice.\n                It still might become quite messy if each element is created and attached like this.\n                In order to avoid too many variables and references there is a class Template to come to rescure. More about templates in "}},{navLink:{href:"#templates-explained",text:"Templates Explained"}},{sline:{text:"."}}]},{"component:text":{text:"All setter methods that does not explicitly return some value\n            will return an Elem instance. This enables method chaining and therefore compact code."}},{tptext:{text:"Method chaining illustrated."}},{code:{text:"new Elem('p').setId('myId').addClasses('class1 class2').setText('Some text here...');"}},{subTitle:{text:"Event handling"}},{"component:text":{text:"Elem objects only support one event handling method for each event type that it might support.\n            An event handling method will get one parameter that is an event that occured on the element."}},{tptext:{text:"Event handler method is created as follows."}},{dcode:{es6:"new Elem('button').onClick(event => Elem.wrap(event.target).display(false));",es5:"new Elem('button').onClick(function(event) {\n    Elem.wrap(event.target).display(false);\n});"}},{subTitle:{text:"Extend ES 5"}},{"component:text":{text:"One very special function of the Elem class is an extend() function. This function does the ES5 standard extension to a current instance of the Elem\n            class. This function comes very handy when ES 5 is used and there is a need for some extra functionalities to be added for the Elem class.\n            Because of this funtion there is no need to create an another object that wraps the Elem class in order to add new functionalies.\n            Instead you may directly add new functionalities to the Elem class.\n            However this function is not needed if the ES6 standard JavaScript is used as it already has usable extend functionality."}},{"component:text":{text:"For example, sometimes we would like to wrap all the logic inside a single component. So that the component offers some functionality functions\n            and the component itself will know how to handle data that is given to it. Also the same time the component would be renderable Elem object.\n            Keeping this in mind we could create a table element that knows how to handle data by itself."}},{tptext:{text:"First we need to create a table element and we also want to exend it in order to give more functionalities for it."}},{code:{text:'var table = new Elem("table").extend(Table);\n\nfunction Table {\n    this.update = function(data) {\n        this.render(createRows(data));\n    }\n}'}},{"component:text":{text:"Now you may notice that the Table function above is a child class of a super class Elem. Therefore in the Table function we can use all the\n            same functions that the Elem class has to offer. The this.render function is the super class function and the createRows() function is a\n            custom function that creates new rows for the table Elem to render."}},{"component:text":{text:"Now we are able to use the Table instance that itself knows how to handle the given data. Each time the data is changed or when it is\n            rendered the first time, we could invoke the function update(data) that creates the table rows and then it would invoke the function render from the\n            Elem class that will render the created table rows."}},{tptext:{text:"Assuming we have data to render the first time or even after the data has changed. \n            We can invoke the Table instance function update that will handle the rest."}},{code:{text:"table.update(dataArray);"}},{subTitle:{text:"Render"}},{"component:text":{text:"One more thing to mention about is the render() function. You should not confuse this function to React.render or\n            some other JavaScript framework that does render from top to bottom.\n            The render function of the Elem class simply removes old state form an element and then appends new state into the element. \n            If the state is not changed then it wont be re-rendered.\n            The render function should be used wisely as it is heavier operation than append or remove.\n            It can be used in almost all circumstances but it does not suit in all situations.\n            Many times use of append or remove is more than enough. The render function suits to dynamically change content of a single container.\n            Also the render function only renders other Elem objects."}},{"component:text":{text:"Lets assume we have an element ul that renders li elements."}},{tptext:{text:"Lets first create an array of li elements."}},{code:{text:"let arrayOfLiElems = [new Elem('li').setText('text 1'), new Elem('li').setText('text 2'),....];"}},{tptext:{text:"Then we create an ul element and first time render the elements."}},{code:{text:"let ul = new Elem('ul').render(arrayOfLiElems);"}},{"component:text":{text:"Now lets assume that as a result of some action content of the array of li elements has changed."}},{tptext:{text:"Then we call the render function again and the changed content will show up on a page inside the element."}},{code:{text:"ul.render(arrayOfLiElems);"}}]}}}),o.h.component({routers:function routers(){return{"div.w3-container":[{h1:"Router explained"},{Text:"Router class takes a root element in which it will render other route elements. Using the Router is relatively simple but there are couple of things to mention about.\n            The Router has two implementations from which one implementation has to be chosen. One implementation is a hash based and the other is an URL based."},{P:[{S:"A route object has seven properties "},{B:"route"},{S:", "},{B:"elem"},{S:", "},{B:"hide"},{S:", "},{B:"scrolltop"},{S:", "},{B:"compProps"},{S:", "},{B:"onBefore"},{S:", "},{S:" and "},{B:"onAfter"},{S:"."}]},{code:{text:"{\n    route: 'url', *\n    elem: 'anyComponent|elemObject', *\n    hide: true|false|undefined,\n    scrolltop: true|false|undefined,\n    compProps: {} *if statefull component or component should receive properties\n    onBefore: () => {},\n    onAfter: () => {}\n}"}},{P:{I:"Properties marked by asterix (*) are mandatory."}},{"ul.w3-large":[{li:[{S:"The "},{B:"route"},{S:" property is type of string and holds the route URL."}]},{li:[{S:"The "},{B:"elem"},{S:" property is a component name or a elem object. The property holds an object that will be rendered inside the root of the router."}]},{li:[{S:"The "},{B:"hide"},{S:" property is type of boolean and determines if the URL is hidden or not. More about hiding the URL further down."}]},{li:[{S:"The "},{B:"scrolltop"},{S:" property enables or disables auto-scroll behavior for a sigle route element."}]},{li:[{S:"The "},{B:"compProps"},{S:" property holds properties that are passed to the component. If a route element componet\n                    is a statefull component or the component should receive properties \n                    then this property must be at least defined as an empty object e.g. "},{I:" {}"},{S:"."}]},{li:[{S:"The "},{B:"onBefore "},{S:"property is a function that is called before the routing happens. The function has no parameters."}]},{li:[{S:"The "},{B:"onAfter "},{S:"property is a function that is called after the routing has happened. The function has no parameters."}]}]},{tptext:"Quick look of how to define routes."},{code:"Router.url(true).root('#routerRoot').routes([\n    {route: 'page1Url', elem: 'Page1'}\n    ...\n]);"},{tptext:"Other technique is set the root of the Router with the routes in the array at the first index."},{code:"Router.url(true).routes([\n    {elem: '#root'},\n    {route: 'page1Url', elem: 'Page1'}\n    ...\n]);"},{subTitle:{text:"Scroll behavior"}},{paragraph:[{sline:{text:"The Router has a function scroll(auto) that takes a boolean value which determines auto-scroll top default behavior. The "}},{B:"default"},{S:" is "},{B:"true"},{S:". The default behavior can be changed using the function and it can be overriden for a single route element also."}]},{tptext:"If wanted we could disable the default auto-scroll top behavior as follows."},{code:"Router.scroll(false)...."},{tptext:"If wanted we could disable the auto-scroll top behavior for a single element as follows."},{code:"{route: 'url', elem: 'component', scrolltop: false}"},{subTitle:{text:"Not found behavior"}},{paragraph:[{S:"The Router also supports "},{B:"not found"},{S:" behavior through wildcard syntax. The not found page is good to place last because as it will match the rest possible cases."}]},{tptext:"Following route will be the last match if nothing else matches before this when placed as the last route in the routes array."},{code:"{route: '*', elem: 'NotFoundPage'}"},{subTitle:{text:"Hide URL behaviour"}},{Text:"A route can be can be hidden. In that case the route url is not shown on the browser and it is not\n            registered in the browser memory either. This is usefull for such pages that are not ment to be revisited by\n            going backwards or forwards in the browser history. Such pages could for example be some error pages.\n            Hide route works for both an URL based and a hash based routing."},{tptext:"Url based hide route example"},{code:"{route: '/error', elem: 'ErrorPage', hide: true}"},{tptext:"Hash based hide route example"},{code:"{route: 'error', elem: 'ErrorPage', hide: true}"},{P:{I:"If route hiding is used for hash based behavior then also invoking Router.navigate() is necessary\n            on the hidden routes"}},{subTitle:{text:"Wildcard behavior for URL routing"}},{Text:"URL based routes can have wildcards. A wildcard is marked with an asterix (*) and it stands for any number of any character."},{tptext:"Example of using wildcards in a route"},{code:"{route: '/users/*/info', elem: 'UserPage'}"},{subTitle:{text:"REGEX route behavior"}},{Text:"The Router supports regular expression route path definitions for both URL based and hash based routing."},{tptext:"Example of defining URL route using regular expressions"},{code:"{route: /.*/abc/.*/, elem: 'AbcPage'}"},{tptext:"Example of defining hash route using regular expression"},{code:"{route: /.*-efg-.*/, elem: 'EfgPage'}"},{subTitle:{text:"Component properties behavior"}},{Text:"The Router is able to pass component properties to a route component. The route component may be stateless or\n            statefull component. If the component is statefull and even though no default properties are passed to it still \n            it is necessary to pass an empty properties object to the component in order the state be in use."},{tptext:"Example of passing default properties to the route component."},{code:"{route: '/path1', elem: 'Home', compProps: {defaultProp1: 'val1'}}"},{tptext:"Example of passing some default properties to the route component. The component may be statefull or stateless."},{code:"{route: '/path2', elem: 'Page2', compProps: {foo: 'bar', abc: 'efg'}}"},{tptext:"Example of passing an empty properties object to the route component. The component may be statefull or stateless."},{code:"{route: '/path3', elem: 'Page3', compProps: {}}"},{subTitle:{text:"URL based routing"}},{Text:"URL based routing supports single page appliation fashion routing as well as traditional multi page application\n            fashion routing."},{tptext:"URL based route example for single page applications."},{code:"Router.url(true).root('#root').routes([\n    {route: '/', elem: 'Page1'},\n    {route: '/page2', elem: 'Page2'},\n    {route: '/page3', elem: 'PropsPage', compProps: {foo: 'bar', abc: 'efg', age: 11}},\n    {route: '/page4', elem: 'StatefullPage', compProps: {test: 'user', age: 10}},\n    {route: /.*/abc/.*/, elem: new Elem('div').setText('RME home')},\n    {route: '/*/*/info', elem: new Elem('div').setText('Foo Bar info')},\n    {route: '/hidden', elem: new Elem('div').setText('hidden url'), hide: true},\n    {route: '*', elem: new Elem('h2').setText('Not Found')}\n]);"},{tptext:"Example menu that corresponds to the routes for single page applications."},{code:"const urlMenu = {\n    'div.menu': [\n        {NavLink: {href: '/', text: 'Page 1', onClick: Router.navigate}},\n        {NavLink: {href: '/page2', text: 'Page 2', onClick: Router.navigate}},\n        {NavLink: {href: '/page3', text: 'PropsPage', onClick: Router.navigate}},\n        {NavLink: {href: '/page4', text: 'StatefullPage', onClick: Router.navigate}},\n        {NavLink: {href: '/RME/abc/home2', text: 'RME home', onClick: Router.navigate}},\n        {NavLink: {href: '/foo/bar/info', text: 'FooBar', onClick: Router.navigate}},\n        {NavLink: {href: '/hidden', text: 'hidden', onClick: Router.navigate}},\n        {NavLink: {href: '/notfound', text: 'NotFound', onClick: Router.navigate}},\n    ]\n}"},{P:[{i:[{I:"If multi page application routing is wanted then "},{B:"Router.url() "},{I:"function should be invoked empty. Because if the parameter is given \n                    with value"},{B:" true "},{I:"then single page application routing is used. Moreover "},{B:"onClick: Router.navigate "},{I:"should not be defined on the menu that corresponds to the\n                    multi page application routing as change of the URL is determined on page load."}]}]},{subTitle:{text:"Hash based routing"}},{P:{S:"Hash based routing is a bit more straightforward to set up. Simply invoke a Router.hash() function, \n            set a root element, listenable routes then you are good to go. The hash based routing automatically listens \n            hash change and thus a Router.navigate should not be invoked on hash routes. ",I:"Only in case of a hidden hash based route the Router.navigate function should be manually invoked."}},{tptext:"Hash based route example."},{code:"Router.hash().root('#root').routes([\n    {route: 'home', elem: 'Page1'},\n    {route: 'page2', elem: 'Page2'},\n    {route: 'page3', elem: 'PropsPage', compProps: {foo: 'bar', abc: 'efg', age: 11}},\n    {route: 'page4', elem: 'StatefullPage', compProps: {test: 'user', age: 10}},\n    {route: /.*-abc-.*/, elem: new Elem('div').setText('RME home')},\n    {route: /.*-.*-info/, elem: new Elem('div').setText('Foo Bar info')},\n    {route: 'hidden', elem: new Elem('div').setText('hidden'), hide: true},\n    {route: '*', elem: new Elem('h2').setText('Not Found')}\n]);"},{tptext:"Example menu that corresponds to the routes."},{code:"const hashMenu = {\n    'div.menu': [\n        {NavLink: {href: '#home', text: 'Page 1'}},\n        {NavLink: {href: '#page2', text: 'Page 2'}},\n        {NavLink: {href: '#page3', text: 'PropsPage'}},\n        {NavLink: {href: '#page4', text: 'StatefullPage'}},\n        {NavLink: {href: '#RME-abc-home2', text: 'RME home'}},\n        {NavLink: {href: '#foo-bar-info', text: 'FooBar'}},\n        {NavLink: {href: '#hidden', text: 'hidden', onClick: Router.navigate}},\n        {NavLink: {href: '#notfound', text: 'NotFound'}},\n    ]\n}"}]}}}),o.h.component({templates:function templates(){return{"div.w3-container":[{h1:"Templates explained"},{Text:"The template object has to have a one root element from where it starts creation of an element tree.\n        If the root element is not found Template resolve will throw an exeption. If a component returns \n        a template json it will be resolved to template by default."},{tptext:"An object notation supports basically all HTML 5 attributes plus some custom attributes. Some of the supported attributes are found below."},{code:"htmlTag: {\n    id: 'id',\n    name: 'name',\n    class: 'awesomeclass awesomefont',\n    text: 'basic text',\n    value: 'value',\n    content: '<p>html string/<p>',\n    tabIndex: 'tabIndex',\n    type: 'type',\n    src: 'src',\n    href: 'href',\n    editable|contenteditable: 'true|false',\n    placehoder: 'placeholder',\n    size: 'size',\n    checked: true|false,\n    disabled: true|false,\n    visible: true|false,\n    draggable: true|false,\n    styles: {stylesObjectMap},\n    for: 'for',\n    message: 'message.hello.world',\n    target: e.g. '_blank',\n    title: 'title',\n    autofocus: true|false,\n    dataSomeDataKey: 'some data value',\n    plus many other attribute....\n}"},{subTitle:{text:"Supported attributes"}},{HtmlTagAttributes:{}},{subTitle:{text:"Simle template examples"}},{Text:"When using direct value implementations the set value is automatilly resolved and set to the element."},{tptext:"Direct value implementations."},{code:"...\ndiv: [\n    {span: 'message.key.hello.world'},\n    {span: 'Some static text'},\n    {span: 123}\n]\n..."},{Text:"The same works also for components. In such case the value is set for the root element of the component."},{code:"...\ndiv: {\n    AwesomeFont: 'front.page.welcome.text'\n}\n..."},{Text:"Components can also have classes and attributes defined directly. Again the root element of the component is updated."},{code:"...\ndiv: {\n    'AwesomeFont#fantasticId.big-font-class[style=display: block]': 'front.page.welcome.text'\n}\n..."},{Text:"When using function implementations the returned text or number will automatically be resolved and set to the element."},{tptext:"Function implementation examples"},{code:"...\ndiv: {\n    'span.awesome-class1': () => 'this is the text of the span'\n}\n..."},{Text:"By convention returned string value is resolved and determined that is it a message key or a normal string. If the string is a message key and Messages are defined and in use then\n            the key is ought to be resolved. If the key was not resolved then the key is returned. And if the string is not resolved as the message key then the string is directly\n            inserted as text."},{tptext:"The function implementation also supports returning a message key."},{code:"...\ndiv: {\n    'span.awesome-font': () => 'front.page.welcome.user'\n}\n..."},{tptext:"Template attributes examples."},{code:"div: {\n    id: 'super1',\n    class: somecondition ? 'fantastic' : 'error'\n}"},{Text:"Attributes can also have function implementation."},{code:"div: {\n    class: () => 'nice-one'\n}"},{tptext:"Function implementations and returning a template"},{code:"div: {\n    p: () => ({\n        span: 'Text is here'\n    })\n}"},{Text:"Functions can also return an array."},{code:"div: {\n    p: () => [\n        {span: 'Fantastic'},\n        {b: '!'}\n    ]\n}"},{tptext:"Function implementations and givin the element as a parameter."},{dcode:{es6:"Template.resolve({\n    div: {\n        span: (e) => {\n            e.addClasses('awesome-class1 text-highlight');\n            e.setText('text of the span')\n        }\n    }\n});",es5:"//ES 5 functions can refer to 'this' or an appropriate elem that is received as an attribute\n\nTemplate.resolve({\n    div: {\n        span: function(span) {\n            this.addClasses('awesome-class1 text-highlight');\n            span.setText('text of the span');\n        }\n    }\n});"}},{br:{}},{dcode:{es6:"Template.resolve({\n    div: {\n        span: (e) => {\n            e.addClasses('awesome-class1 text-highlight');\n            return 'this is the text of the span'\n        }\n    }\n});",es5:"Template.resolve({\n    div: {\n        span: function() {\n            this.addClasses('awesome-class1 text-highlight');\n            return 'this is the text of the span'\n        }\n    }\n});"}},{Text:"Array implementations come handy when multiple elements of the same name are defined in a root\n                element."},{tptext:"Array implementation examples."},{code:"Template.resolve({\n    div: [\n        {div: {\n            text: 'the first child'\n        }},\n        {div: {\n            text: 'the second child'\n        }}\n    ]\n});"},{tptext:"Only way to give properties to array defined elements is to use string literals as follows."},{code:"...\n'div#id.class1.class2[attr1=vale][attr2=value]': [\n    {div: {\n        class: 'awesome-class1',\n        text: 'some text'\n    }\n    ......\n]\n..."},{subTitle:{text:"Fragments"}},{Text:"A fragment keyword is a special keyword that enables encapsulating logic in a template.\n            The fragment itself wont be rendered but its' content is rendered into parent element.\n            Fragments could be inside of the other fragments also."},{tptext:"Lets see four different fragment scenarios."},{code:"div: {\n    fragment: {\n        fragment: {\n         h1: 'Hello'\n        },\n        'fragment2': [\n         {h2: 'World'},\n         {h3: 'How are you?'}\n        ],\n        'fragment3': () => ({\n         p: 'Lots of text'\n        }),\n        'fragment4': () => [{\n            {h4: 'I am fine'},\n            {h5: 'How about you?'}\n        }]\n    }\n}"},{Text:"Each element inside the fragments above would be direclty inserted inside the div element.\n        Here we have named the fragments distinguishable because otherwise first three fragment would be \n        omitted. Other solution would be placing the fragments inside an array. That would be the case\n        if the fragments were normal HTML elements such as div."},{tptext:"Fragments might come handy in some cases e.g."},{code:"select: {\n    onChange: event => ...,\n    fragment: ['option1', 'option2'].map(str => ({\n        option: {\n            text: str,\n            value: str\n        }\n    }))\n}"},{Text:"Fragment comes handy when some elmenet has to have attributes and child elements defined \n        because an array notation does not support object notation attributes and vice versa. Above code\n        will attach an array of child elements into the object notation select element."},{subTitle:{text:"Templates with components"}},{Text:"Components can be inserted inside the template easily and usually this will be the case. Reusable components inside the template makes creation of\n            complex structure easier."},{tptext:'Assuming that we would have already created a following component named "CustomSpan" that takes one property named "customText". The component implements a span element.'},{dcode:{es6:"const CustomSpan = props => ({ span: props.customText });",es5:"RME.component({ CustomSpan: function(props) {\n    return { span: props.customText }\n}});"}},{Text:"To use the component with the template simply call the name of the component and give properties of the component inside an object."},{code:"Template.resolve({\n    div: {\n        CustomSpan: {customText: 'this is the text of the component'}\n    }\n});"},{Text:"Other way of appending the component inside the template would be like this."},{dcode:{es6:"Template.resolve({\n    div: (e) => e.append({CustomSpan: {customText: 'this is the text of the component'}});\n});",es5:"Template.resolve({\n    div: function() {\n        this.append({CustomSpan: {customText: 'this is the text of the component'}});\n    }\n});"}},{P:[{B:'Please note that if the component name is either equal to HTML element or an object notation parameter name e.g. "text" \n                then in order to use such component the component must be explicitly called using a "component" keyword as follows.'}]},{"P.w3-text-teal":[{S:"A component named"},{B:" text "},{S:"is explicitly called using the component keyword."}]},{code:"Template.resolve({\n    'component:text': {\n        text: 'Some text...'\n    }\n});"},{paragraph:[{S:"More information about components in: "},{navLink:{text:"Components Explained",href:"#components-explained"}},{S:"."}]},{subTitle:{text:"JSON limitations"}},{Text:"JSON objects can only have one property of the same name. This is why the array implementations\n                might come handy sometimes."},{tptext:"The following code illustrates the case where two elements of the same name are defined but\n                    only the latter element is rendered."},{code:"Template.resolve({\n    div: {\n        div: {\n            text: 'this is omitted'\n        },\n        div: {\n            text: 'this is shown'\n        }\n    }\n});"}]}}});Object(o.b)((function ComponentExpDoc(){return{"div.w3-container":[{h1:"Component"},{Text:"The Component function receives a comma separated list of component functions. The \n        Component function reads the component name form the function.name property."},{tptext:"Simple component example."},{code:"const SomeComponent = () => ({h1: 'Hello World'});\n\nComponent(SomeComponent);"},{tptext:"The Component function can receive multiple components same time."},{code:"Component(One, Two, Three, Four);"},{subTitle:{text:"Production & Webpack"}},{Text:"Because the Component function uses function.name to read the name of the component and\n        when the Component function is used on production with the Webpack. As the Webpack minimizes and mangels\n        the code on production mode which then makes the RME not possible to read the component name from the \n        function. In order use the Component function on the production code this line of code must be added\n        in the webpack config."},{code:"optimization: {\n    ...\n    minimizer: [\n        new TerserWebpackPlugin({\n            terserOptions: {\n                keep_fnames: true\n            }\n        })\n    ]\n}"}]}}),(function BindStateExpDoc(){return{"div.w3-container":[{h1:"BindState"},{Text:"The bindState function will bind a state to any component. The component may be \n        a pure function or a class component."},{subTitle:{text:"Pure function examples"}},{tptext:"Basic example of binding state to a component."},{code:"const ComponentWithState = () => ({h1: 'Hello World'});\n\nComponent(bindState(ComponentWithState));"},{tptext:"Example of binding initial state to a component."},{code:"const ComponentWithState = props => ({h1: props.helloFromState});\n\nComponent(bindState(SomeComponentWithState, { helloFromState: 'Hello World From State' }));"},{tptext:"Example of givin a stateRef with the state."},{code:"const ComponentWithState = props => ({h1: props.helloFromState});\n\nComponent(bindState(ComponentWithState, { stateRef: 'customRef', helloFromState: 'Hello World From State' }));"},{P:[{S:"A stateRef is a reference to a state. It can be given with the initial state or with the\n            properties of a component when the component is placed in a template. To see the stateRef in \n            action go to: "},{navLink:{href:"#components-explained",text:"Components Explained"}},{S:"."}]},{tptext:"Example of binding state to a component of a different application."},{code:"const ComponentWithState = () => ({h1: 'Hello World'});\n\nComponent(bindState(ComponentWithState, {}, 'differentApp'));"},{P:[{S:"The RME supports multiple applications more about it see: "},{navLink:{href:"#app-explained",text:"Application Explained"}},{S:"."}]},{subTitle:{text:"Class components"}},{Text:"The class components must have a render function and the bindState function should not be\n        used with the class components due to state and properties of the component can be defined \n        directly in the component constructor."},{tptext:"Basic class component example."},{code:"class ClassComponentWithState {\n    render() {\n        return {\n            {h1: 'Hello World'}\n        }\n    }\n}\n\nComponent(ClassComponentWithState);"},{tptext:"Class component example with initial state."},{code:"class ComponentWithState {\n    constructor() {\n        this.initialState = {\n            helloFromState: 'Hello World from Class'\n        }\n    }\n  \n    render(props) {\n        return {\n            {h1: props.helloFromState}\n        }\n    }\n}\n\nComponent(ComponentWithState);"},{tptext:"A stateRef can be defined either in a state or in a component instance."},{code:"class ComponentWithState {\n    constructor() {\n        this.stateRef = 'customStateRef';\n        this.initialState = {\n            stateRef: 'customStateRef',\n            helloFromState: 'Hello World from Class'\n        }\n    }\n  \n    render(props) {\n        return {\n            {h1: props.helloFromState}\n        }\n    }\n}\n\nComponent(ComponentWithState);"},{tptext:"Example of binding a class component to a different application instance."},{code:"class ComponentWithState {\n    constructor() {\n        this.appName = 'OtherAppName';\n        this.initialState = {\n            helloFromState: 'Hello World from Class'\n        }\n    }\n    \n    render(props) {\n        return {\n            {h1: props.helloFromState}\n        }\n    }\n}\n\nComponent(ComponentWithState);"}]}}),(function CSSExpDoc(){return{"div.w3-container":[{h1:"CSS"},{Text:"The CSS function enables dynamic CSS styling possibilities. The CSS function may be \n        invoked many times. If a style element already exist with the same properties new content\n        will be inserted into the existing style element otherwise a new style element is created with\n        the new content. The CSS function also does exact match that means the same content will not be\n        added twice into the same style element."},{tptext:"Following line of code would create a style element on the HTML tree."},{code:"CSS(`\n.super-text: {\n  color: yellow\n}\n...\n`);"},{tptext:"Example result."},{code:"<style>\n    .super-text: {\n        color: yellow\n    }\n</style>"},{Text:"The CSS function also receives a properties object as a second attribute. \n        The properties will be set to the style element."},{tptext:"Following line of code would create a style element on the HTML tree with the given properties."},{code:"CSS(`\n.super-text {\n  color: yellow\n}\n`, {\nid: 'myStyle1',\ntitle: 'myStyle1'\n});"},{tptext:"The above code would result to following."},{code:'<style id="myStyle1" title="myStyle1">\n    .super-text {\n        color: yellow\n    }\n</style>'}]}}),(function ConfigureExpDoc(){return{"div.w3-container":[{h1:"Configure"},{Text:"The configure function is a shortcut function for configure RME.use(config)\n        The function recognizes three parameters AppInstance, Router and Messages.\n        The parameters can be given in any order."},{tptext:"Following code configures the application, the router and the messages."},{code:"configure(App.get(), Router, Messages)"},{tptext:"Above code equals to following."},{code:"RME.use({\n    messages: Messages,\n    router: Router,\n    app: App.get()\n});"},{tptext:"This function could be combined with the createApp function also."},{code:"configure(createApp('#app', App), Router, Messages);"},{P:[{S:"More about the createApp function here: "},{navLink:{text:"createApp",href:"#createapp-function"}},{S:"."}]}]}}),(function CreateAppExpDoc(){return{"div.w3-container":[{h1:"CreateApp"},{Text:"The createApp function creates and initializes an RME application and it is \n        a shortcut function to create the application. The first parameter \n        is a string selector for the root element in which the application is to be inserted.\n        The second parameter is the app component and the third parameter is an optional string\n        that defines the app name. If only one and the default app is used then there is no need to give\n        this parameter."},{tptext:"Example of creating the application."},{code:"const App = props => ({\n    h1: 'Hello World'\n});\n\nComponent(App);\n\ncreateApp('#app', App);"},{tptext:"Example of creating a named application."},{code:"createApp('#two', TwoApp, 'twoapp');"},{P:[{S:"This function uses function.name and the Component function. More about them and\n            pure function components on production in here: "},{navLink:{text:"Component",href:"#component-function"}},{S:"."}]}]}}),(function UseStateExpDoc(){return{"div.w3-container":[{h1:"UseState"},{Text:"The useState function is a shortcut function to use an application component state.\n        The first parameter can either be string that is the state reference or an object\n        that is the new state or a function which receives a previous state as parameter and should return\n        a new state object. The second parameter is either an object or a function and their functionality\n        is as described before. The third parameter can either be boolean that \n        defines should the application update after set state or it can be a string which \n        defines the optional application name. The fourth parameter is string that is the \n        optional application name."},{tptext:"Few useState examples."},{code:"useState(props.stateRef, {\n    newstate\n});\n\nuseState(props.stateRef, prevState => ({\n    ...prevState,\n    newstate\n}));\n\nuseState(props.stateRef, newState, false);\n\nuseState({\n    Component1: {\n        state\n    },\n    Component2: {\n        otherState\n    }\n});\n\nlet updatedState = useState(props.stateRef, state);\n\nlet state = useState(props.stateRef);\n\nuseState(props.stateRef, state, 'otherApplication');\n\nuseState(props.stateRef, state, false, 'otherApplication');"}]}})),o.a.root("#app").create({"div.w3-container.w3-margin":{"div.w3-row":[{"div.w3-third.w3-card.w3.margin.top":{menu:{}}},{"div#root.w3-container.w3-twothird":{}}],footer:{}}}),o.h.ready((function(){location.hash||(location.hash="#home")})),o.e.hash().root("#root").routes([{route:"#home",elem:"home"},{route:"#howto",elem:"basics"},{route:"#app-explained",elem:"appsEx"},{route:"#put-things-together",elem:"simpleExample"},{route:"#configure-function",elem:"ConfigureExpDoc"},{route:"#createapp-function",elem:"CreateAppExpDoc"},{route:"#usestate-function",elem:"UseStateExpDoc"},{route:"#component-function",elem:"ComponentExpDoc"},{route:"#bindstate-function",elem:"BindStateExpDoc"},{route:"#css-function",elem:"CSSExpDoc"},{route:"#templates-explained",elem:"templates"},{route:"#router-explained",elem:"routers"},{route:"#components-explained",elem:"components"},{route:"#rme-explained",elem:"rmeEx"},{route:"#elements-explained",elem:"elemsEx"},{route:"#messages-explained",elem:"messagesEx"},{route:"#http-explained",elem:"httpEx"},{route:"#rme",elem:"rmeDoc"},{route:"#app",elem:"appDoc"},{route:"#http",elem:"httpDoc"},{route:"#router",elem:"routerDoc"},{route:"#template",elem:"templateDoc"},{route:"#elem",elem:"elemDoc"},{route:"#tree",elem:"treeDoc"},{route:"#messages",elem:"messagesDoc"},{route:"#event-pipe",elem:"EventPipeDocList"},{route:"#cookie",elem:"cookieDoc"},{route:"#session",elem:"sessionDoc"},{route:"#storage",elem:"storageDoc"},{route:"#util",elem:"utilDoc"},{route:"#browser",elem:"browserDoc"},{route:"#key",elem:"keyDoc"},{route:"*",elem:new o.c("div").setText("not found")}]),o.h.use({router:o.e,app:o.a.get()})}});